"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[99749],{603905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>d});var r=t(667294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},m=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),p=c(t),u=a,d=p["".concat(l,".").concat(u)]||p[u]||g[u]||o;return t?r.createElement(d,s(s({ref:n},m),{},{components:t})):r.createElement(d,s({ref:n},m))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=u;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[p]="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},378841:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>g,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=t(487462),a=(t(667294),t(603905));const o={},s="Commands",i={unversionedId:"technologies/elasticsearch/commands",id:"technologies/elasticsearch/commands",title:"Commands",description:"Monitoring",source:"@site/docs/technologies/elasticsearch/commands.md",sourceDirName:"technologies/elasticsearch",slug:"/technologies/elasticsearch/commands",permalink:"/technologies/elasticsearch/commands",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/technologies/elasticsearch/commands.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Architecture",permalink:"/technologies/elasticsearch/architecture"},next:{title:"ElastAlert",permalink:"/technologies/elasticsearch/elastalert"}},l={},c=[{value:"Monitoring",id:"monitoring",level:2}],m={toc:c},p="wrapper";function g(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"commands"},"Commands"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'// List indices\nGET /_cat/indices?v\n\nPUT /megacorp/_doc/1\n{\n    "first_name" : "John",\n    "last_name" :  "Smith",\n    "age" :        25,\n    "about" :      "I love to go rock climbing",\n    "interests": [ "sports", "music" ]\n}\n\nGET /megacorp/employee/1\n\n// Retrieving part of a document\nGET /website/blog/123?_source=title,text\n\nDELETE /index_name\n\nDELETE /megacorp/employee/1\n\nGET /megacorp/_search\n\nGET /megacorp/_search?q=last_name:Smith\n\n// QueryDSL\nGET /megacorp/_search\n{\n    "query" : {\n        "match" : {\n            "last_name" : "Smith"\n        }\n    }\n}\n\nGET /megacorp/_search\n{\n    "query" : {\n        "bool" : {\n            "must" : {\n                "match" : {\n                    "last_name" : "smith"\n                 }\n            },\n            "filter" : {\n                "range" : {\n                    "age" : { "gt" : 30 }\n                 }\n            }\n        }\n    }\n}\n\n// Highlights\nGET /megacorp/_search\n{\n    "query" : {\n        "match_phrase" : {\n            "about" : "rock climbing"\n        }\n    },\n    "highlight": {\n        "fields" : {\n            "about" : {}\n        }\n    }\n}\n\n// Analytics - most popular interests enjoyed by employees\nGET /megacorp/_search\n{\n  "aggs": {\n    "all_interests": {\n      "terms": { "field": "interests" }\n    }\n  }\n}\n\n// Analytics - Popular interests of people called Smith\nGET /megacorp/_search\n{\n  "query": {\n    "match": {\n      "last_name": "smith"\n    }\n  },\n  "aggs": {\n    "all_interests": {\n      "terms": {\n        "field": "interests"\n      }\n    }\n  }\n}\n\n// Analytics - average age of employees who share a particular interest\nGET /megacorp/employee/_search\n{\n    "aggs" : {\n        "all_interests" : {\n            "terms" : { "field" : "interests" },\n            "aggs" : {\n                "avg_age" : {\n                    "avg" : { "field" : "age" }\n                }\n            }\n        }\n    }\n}\n\n// Creating an Index\nPUT /blogs\n{\n   "settings" : {\n      "number_of_shards" : 3,\n      "number_of_replicas" : 1\n   }\n}\n\n// Testing Analyzers\nGET /_analyze\n{\n  "analyzer": "standard",\n  "text": "Text to analyze"\n}\n\n// Viewing the Mapping\nGET /gb/_mapping/tweet\n\n// Aggregations\nGET /server_log-2019.09.25/_search\n{\n    "aggs" : {\n        "hosts" : {\n            "terms" : {\n                "field" : "tag.host"\n            },\n            "aggs" : {\n                "containers" : {\n                    "terms" : { "field" : "tag.container_name" }\n                }\n            }\n        }\n    }\n}\n')),(0,a.kt)("h2",{id:"monitoring"},"Monitoring"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"GET /_cluster/health")),(0,a.kt)("p",null,"The status field provides an overall indication of how the cluster is functioning. The meanings of the three colors are provided here for reference:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"green: All primary and replica shards are active."),(0,a.kt)("li",{parentName:"ul"},"yellow: All primary shards are active, but not all replica shards are active."),(0,a.kt)("li",{parentName:"ul"},"red: Not all primary shards are active.")))}g.isMDXComponent=!0}}]);