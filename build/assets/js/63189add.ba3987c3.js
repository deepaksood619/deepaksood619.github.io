"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2072],{603905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>b});var n=t(667294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=n.createContext({}),l=function(e){var r=n.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},c=function(e){var r=l(e.components);return n.createElement(u.Provider,{value:r},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=l(t),m=a,b=p["".concat(u,".").concat(m)]||p[m]||g[m]||o;return t?n.createElement(b,s(s({ref:r},c),{},{components:t})):n.createElement(b,s({ref:r},c))}));function b(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=m;var i={};for(var u in r)hasOwnProperty.call(r,u)&&(i[u]=r[u]);i.originalType=e,i[p]="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=t[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},196302:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>u,contentTitle:()=>s,default:()=>g,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=t(487462),a=(t(667294),t(603905));const o={},s="Intro",i={unversionedId:"algorithms/string-algorithms/intro",id:"algorithms/string-algorithms/intro",title:"Intro",description:"Subarray/substring",source:"@site/docs/algorithms/string-algorithms/intro.md",sourceDirName:"algorithms/string-algorithms",slug:"/algorithms/string-algorithms/intro",permalink:"/algorithms/string-algorithms/intro",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/algorithms/string-algorithms/intro.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Brute Force",permalink:"/algorithms/string-algorithms/brute-force"},next:{title:"Knuth-Morris-Pratt",permalink:"/algorithms/string-algorithms/knuth-morris-pratt"}},u={},l=[{value:"Subarray/substring",id:"subarraysubstring",level:2},{value:"Subsequence",id:"subsequence",level:2}],c={toc:l},p="wrapper";function g(e){let{components:r,...t}=e;return(0,a.kt)(p,(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"intro"},"Intro"),(0,a.kt)("h2",{id:"subarraysubstring"},"Subarray/substring"),(0,a.kt)("p",null,"A subbarray is a ",(0,a.kt)("strong",{parentName:"p"},"contiguous")," part of array. An array that is inside another array. For example, consider the array ","[1, 2, 3, 4]",", There are 10 non-empty sub-arrays. The subbarays are (1), (2), (3), (4), (1,2), (2,3), (3,4), (1,2,3), (2,3,4) and (1,2,3,4). In general, for an array/string of size n, there are",(0,a.kt)("strong",{parentName:"p"},"n*(n+1)/2"),"non-empty subarrays/subsrings."),(0,a.kt)("h2",{id:"subsequence"},"Subsequence"),(0,a.kt)("p",null,"A subsequence is a sequence that can be derived from another sequence by zero or more elements, without changing the order of the remaining elements."),(0,a.kt)("p",null,"For the same example, there are 15 sub-sequences. They are (1), (2), (3), (4), (1,2), (1,3),(1,4), (2,3), (2,4), (3,4), (1,2,3), (1,2,4), (1,3,4), (2,3,4), (1,2,3,4). More generally, we can say that for a sequence of size n, we can have (",(0,a.kt)("strong",{parentName:"p"},"2n-1"),") non-empty sub-sequences in total."),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"A string example to differentiate:"),'Consider strings "geeksforgeeks" and "gks". "gks" is a subsequence of "geeksforgeeks" but not a substring. "geeks" is both a subsequence and subarray. Every subarray is a subsequence. More specifically, ',(0,a.kt)("strong",{parentName:"p"},"Subsequence is a generalization of substring.")))}g.isMDXComponent=!0}}]);