"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[59536],{603905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>b});var r=t(667294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),p=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(i.Provider,{value:n},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(t),g=a,b=c["".concat(i,".").concat(g)]||c[g]||m[g]||o;return t?r.createElement(b,s(s({ref:n},u),{},{components:t})):r.createElement(b,s({ref:n},u))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=g;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[c]="string"==typeof e?e:a,s[1]=l;for(var p=2;p<o;p++)s[p]=t[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},403477:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=t(487462),a=(t(667294),t(603905));const o={},s="Examples",l={unversionedId:"languages/golang/examples",id:"languages/golang/examples",title:"Examples",description:"publisher.go",source:"@site/docs/languages/golang/examples.md",sourceDirName:"languages/golang",slug:"/languages/golang/examples",permalink:"/languages/golang/examples",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/languages/golang/examples.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Data Types",permalink:"/languages/golang/data-types"},next:{title:"Hello World",permalink:"/languages/golang/hello-world"}},i={},p=[{value:"publisher.go",id:"publishergo",level:2}],u={toc:p},c="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(c,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"examples"},"Examples"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/marcel-dempers/docker-development-youtube-series/blob/master/messaging/rabbitmq/applications/publisher/publisher.go"},"https://github.com/marcel-dempers/docker-development-youtube-series/blob/master/messaging/rabbitmq/applications/publisher/publisher.go")),(0,a.kt)("h2",{id:"publishergo"},"publisher.go"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n\n"fmt"\n\n"net/http"\n\n"github.com/julienschmidt/httprouter"\n\nlog "github.com/sirupsen/logrus"\n\n"github.com/streadway/amqp"\n\n"os"\n\n)\n\nvar rabbit_host = os.Getenv("RABBIT_HOST")\n\nvar rabbit_port = os.Getenv("RABBIT_PORT")\n\nvar rabbit_user = os.Getenv("RABBIT_USERNAME")\n\nvar rabbit_password = os.Getenv("RABBIT_PASSWORD")\n\nfunc main() {\n\nrouter := httprouter.New()\n\nrouter.POST("/publish/:message", func(w http.ResponseWriter, r *http.Request, p httprouter.Params){\n\nsubmit(w,r,p)\n\n})\n\nfmt.Println("Running...")\n\nlog.Fatal(http.ListenAndServe(":80", router))\n\n}\n\nfunc submit(writer http.ResponseWriter, request *http.Request, p httprouter.Params) {\n\nmessage := p.ByName("message")\n\nfmt.Println("Received message: " + message)\n\nconn, err := amqp.Dial("amqp://" + rabbit_user + ":" +rabbit_password + "@" + rabbit_host + ":" + rabbit_port +"/")\n\nif err != nil {\n\nlog.Fatalf("%s: %s", "Failed to connect to RabbitMQ", err)\n\n}\n\ndefer conn.Close()\n\nch, err := conn.Channel()\n\nif err != nil {\n\nlog.Fatalf("%s: %s", "Failed to open a channel", err)\n\n}\n\ndefer ch.Close()\n\nq, err := ch.QueueDeclare(\n\n"publisher", // name\n\ntrue, // durable\n\nfalse, // delete when unused\n\nfalse, // exclusive\n\nfalse, // no-wait\n\nnil, // arguments\n\n)\n\nif err != nil {\n\nlog.Fatalf("%s: %s", "Failed to declare a queue", err)\n\n}\n\nerr = ch.Publish(\n\n"", // exchange\n\nq.Name, // routing key\n\nfalse, // mandatory\n\nfalse, // immediate\n\namqp.Publishing {\n\nContentType: "text/plain",\n\nBody: []byte(message),\n\n})\n\nif err != nil {\n\nlog.Fatalf("%s: %s", "Failed to publish a message", err)\n\n}\n\nfmt.Println("publish success!")\n\n}\n')))}m.isMDXComponent=!0}}]);