"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[61782],{603905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>b});var n=a(667294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(a),c=r,b=d["".concat(l,".").concat(c)]||d[c]||m[c]||s;return a?n.createElement(b,o(o({ref:t},u),{},{components:a})):n.createElement(b,o({ref:t},u))}));function b(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,o=new Array(s);o[0]=c;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:r,o[1]=i;for(var p=2;p<s;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},896951:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var n=a(487462),r=(a(667294),a(603905));const s={},o="Lambda Expressions",i={unversionedId:"languages/java/lambda-expressions",id:"languages/java/lambda-expressions",title:"Lambda Expressions",description:"A lambda expression is an unnamed function with parameters and a body.",source:"@site/docs/languages/java/lambda-expressions.md",sourceDirName:"languages/java",slug:"/languages/java/lambda-expressions",permalink:"/languages/java/lambda-expressions",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/languages/java/lambda-expressions.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Knowledge",permalink:"/languages/java/knowledge"},next:{title:"Libraries",permalink:"/languages/java/libraries"}},l={},p=[{value:"References",id:"references",level:2}],u={toc:p},d="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"lambda-expressions"},"Lambda Expressions"),(0,r.kt)("p",null,"A lambda expression is an unnamed function with parameters and a body."),(0,r.kt)("p",null,"The lambda expression body can be a block statement or an expression."),(0,r.kt)("p",null,"->separates the parameters and the body."),(0,r.kt)("p",null,"(int x) -> x + 1takes an int parameter and returns the parameter value incremented by 1."),(0,r.kt)("p",null,"(int x, int y) -> x + ytakes two int parameters and returns the sum."),(0,r.kt)("p",null,"(String msg)->{System.out.println(msg);}takes a String parameter and prints it on the standard output."),(0,r.kt)("p",null,"msg->System.out.println(msg)takes a parameter and prints it on the standard output. It is identical to the code above."),(0,r.kt)("p",null,'() -> "hi"takes no parameters and returns a string.'),(0,r.kt)("p",null,"(String str) -> str.length()takes a String parameter and returns its length."),(0,r.kt)("p",null,"The following lambda takes two int parameters and returns the maximum of the two."),(0,r.kt)("p",null,"(int x, int y) -> {\nint max = x > y ? x : y;\nreturn max;\n}"),(0,r.kt)("h2",{id:"references"},"References"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"http://www.java2s.com/Tutorials/Java/Java_Lambda/index.htm"},"http://www.java2s.com/Tutorials/Java/Java_Lambda/index.htm")))}m.isMDXComponent=!0}}]);