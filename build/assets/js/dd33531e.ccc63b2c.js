"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[63162],{603905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>f});var n=a(667294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=n.createContext({}),i=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=i(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=i(a),m=o,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||r;return a?n.createElement(f,s(s({ref:t},p),{},{components:a})):n.createElement(f,s({ref:t},p))}));function f(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,s=new Array(r);s[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[u]="string"==typeof e?e:o,s[1]=c;for(var i=2;i<r;i++)s[i]=a[i];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},984171:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>i});var n=a(487462),o=(a(667294),a(603905));const r={},s="AWS Lambda",c={unversionedId:"cloud/aws/compute/aws-lambda",id:"cloud/aws/compute/aws-lambda",title:"AWS Lambda",description:"Slack notifications",source:"@site/docs/cloud/aws/compute/aws-lambda.md",sourceDirName:"cloud/aws/compute",slug:"/cloud/aws/compute/aws-lambda",permalink:"/cloud/aws/compute/aws-lambda",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/cloud/aws/compute/aws-lambda.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Amazon EKS",permalink:"/cloud/aws/compute/amazon-eks"},next:{title:"EC2 Instance types",permalink:"/cloud/aws/compute/ec2-instance-types"}},l={},i=[{value:"Slack notifications",id:"slack-notifications",level:2}],p={toc:i},u="wrapper";function d(e){let{components:t,...a}=e;return(0,o.kt)(u,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"aws-lambda"},"AWS Lambda"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/lambda/latest/dg/lambda-edge.html"},"https://docs.aws.amazon.com/lambda/latest/dg/lambda-edge.html")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://aws.amazon.com/blogs/aws/introducing-cloudfront-functions-run-your-code-at-the-edge-with-low-latency-at-any-scale"},"https://aws.amazon.com/blogs/aws/introducing-cloudfront-functions-run-your-code-at-the-edge-with-low-latency-at-any-scale")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.toptal.com/aws/service-oriented-architecture-aws-lambda"},"https://www.toptal.com/aws/service-oriented-architecture-aws-lambda")),(0,o.kt)("h2",{id:"slack-notifications"},"Slack notifications"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import logging\nimport json\nfrom urllib.parse import urlencode\nfrom urllib.request import Request, urlopen\n\ndef lambda_handler(event, context):\n    webhook_url = "https://hooks.slack.com/services/xxx/org_id/api_key"\n    print(event)\n    message = json.loads(event["Records"][0]["Sns"]["Message"])\n    name = message["AlarmName"]\n    reason = message["NewStateReason"]\n    state = message["NewStateValue"]\n    if state == "ALARM":\n        color = "danger"\n    else:\n        color = "good"\n    slack_data = {\n        "channel": "monitoring",\n        "color": color,\n        "fields": [\n            {\n            "title": "Alarm: %s"  % (name),\n            "value": "%s \\n https://ap-south-1.console.aws.amazon.com/cloudwatch/home?region=ap-south-1#alarmsV2:alarm/%s?" % (reason, name),\n            }\n        ]\n    }\n    request = Request(\n        webhook_url,\n        data=json.dumps(slack_data).encode(),\n        headers={"Content-Type": "application/json"},\n    )\n    response = urlopen(request)\n    return {"statusCode": response.getcode(), "body": response.read().decode()}\n')))}d.isMDXComponent=!0}}]);