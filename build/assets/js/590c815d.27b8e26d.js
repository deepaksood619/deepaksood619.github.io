"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7812],{603905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>k});var n=a(667294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),u=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=u(a),c=r,k=m["".concat(o,".").concat(c)]||m[c]||d[c]||i;return a?n.createElement(k,l(l({ref:t},p),{},{components:a})):n.createElement(k,l({ref:t},p))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=c;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[m]="string"==typeof e?e:r,l[1]=s;for(var u=2;u<i;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},458132:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var n=a(487462),r=(a(667294),a(603905));const i={},l="Questions",s={unversionedId:"databases/nosql-databases/cassandra/questions",id:"databases/nosql-databases/cassandra/questions",title:"Questions",description:"Which of the following is not a feature of Cassandra?",source:"@site/docs/databases/nosql-databases/cassandra/questions.md",sourceDirName:"databases/nosql-databases/cassandra",slug:"/databases/nosql-databases/cassandra/questions",permalink:"/databases/nosql-databases/cassandra/questions",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/databases/nosql-databases/cassandra/questions.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Cassandra",permalink:"/databases/nosql-databases/cassandra/intro"},next:{title:"Working",permalink:"/databases/nosql-databases/cassandra/working"}},o={},u=[],p={toc:u},m="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(m,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"questions"},"Questions"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.edureka.co/blog/interview-questions/cassandra-interview-questions"},"https://www.edureka.co/blog/interview-questions/cassandra-interview-questions"),"\nWhich of the following is ",(0,r.kt)("em",{parentName:"p"},"not")," a feature of Cassandra?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"No single point of failure"),(0,r.kt)("li",{parentName:"ul"},"High availability"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"ACID compliance")),(0,r.kt)("li",{parentName:"ul"},"Linear scalability\nCassandra uses a master/slave architecture.")),(0,r.kt)("p",null,"False\nCassandra supports multiple datacenters out of the box."),(0,r.kt)("p",null,"True\nWhich of the following statements about Cassandra is false?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"All nodes hold data and can answer queries"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"A master node determines who gets what data")),(0,r.kt)("li",{parentName:"ul"},"Data is replicated on different nodes"),(0,r.kt)("li",{parentName:"ul"},"Data is partitioned around the ring\nWith the CAP theorum, Cassandra is:"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Available and partition tolerant")),(0,r.kt)("li",{parentName:"ul"},"Consistent and partition tolerant"),(0,r.kt)("li",{parentName:"ul"},"Available and consistent"),(0,r.kt)("li",{parentName:"ul"},"None of the above\nReplication Factor (RF) is how many copies of each piece of data should you have in your cluster.")),(0,r.kt)("p",null,"True\nWhere is Replication Factor (RF) set in Cassandra?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"When creating a keyspace")),(0,r.kt)("li",{parentName:"ul"},"When creating a table"),(0,r.kt)("li",{parentName:"ul"},"On a per-query basis"),(0,r.kt)("li",{parentName:"ul"},"In Cassandra configuration file\nHinted handoff is used when a node is down to replay all of the writes that occured.")),(0,r.kt)("p",null,"True\nConsistency level can be set for:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Read requests"),(0,r.kt)("li",{parentName:"ul"},"Write requests"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Both read and write requests")),(0,r.kt)("li",{parentName:"ul"},"Is not configurable\nRead and write speed is ",(0,r.kt)("em",{parentName:"li"},"not")," impacted by the consistency level chosen.")),(0,r.kt)("p",null,"False\nWhere is Consistency Level (CL) set in Cassandra?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"On a per-query basis")),(0,r.kt)("li",{parentName:"ul"},"When creating a table"),(0,r.kt)("li",{parentName:"ul"},"When creating a keyspace"),(0,r.kt)("li",{parentName:"ul"},"Is not configurable\nAny node in a cluster can service a write request.")),(0,r.kt)("p",null,"True\nWhat is the node that handles a request called?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Leader node"),(0,r.kt)("li",{parentName:"ul"},"Master node"),(0,r.kt)("li",{parentName:"ul"},"Slave node"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Coordinator node"),"\nThe order for the write path in Cassandra is:"),(0,r.kt)("li",{parentName:"ul"},"Commit log to SSTable to MemTable"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Commit log to MemTable to SSTable")),(0,r.kt)("li",{parentName:"ul"},"Commit log to MemTable to DiskTable"),(0,r.kt)("li",{parentName:"ul"},"None of the above\nCassandra does not do any writes or deletes in place.")),(0,r.kt)("p",null,"True\nSSTables in Cassandra are ",(0,r.kt)("em",{parentName:"p"},"not")," immutable."),(0,r.kt)("p",null,"False\nCompaction is the process of:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Taking small SSTables and merges them into bigger ones.")),(0,r.kt)("li",{parentName:"ul"},"Taking Memtables and merging them into SSTables."),(0,r.kt)("li",{parentName:"ul"},"Merging Memtables into larger Memtables."),(0,r.kt)("li",{parentName:"ul"},'Merging Memtables into larger Memtables.\n"Last write wins" uses what to determine what data to return to client?'),(0,r.kt)("li",{parentName:"ul"},"Tombstones"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Timestamps")),(0,r.kt)("li",{parentName:"ul"},"Compaction"),(0,r.kt)("li",{parentName:"ul"},"Coordinator\nPartitions..."),(0,r.kt)("li",{parentName:"ul"},"format data for CQL queries."),(0,r.kt)("li",{parentName:"ul"},"maintain a log of all executed queries."),(0,r.kt)("li",{parentName:"ul"},"optimize query-time joins keeping frequently queried rows together on disk."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"group rows physically together on disk based on the partition key."),"\nWhat is the role of the partitioner?"),(0,r.kt)("li",{parentName:"ul"},"It organizes the data together physically on disk."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"It hashes the partition key values to create a partition token.")),(0,r.kt)("li",{parentName:"ul"},"It retrieves partition data for a CQL query."),(0,r.kt)("li",{parentName:"ul"},"It physically separates rows into equal-sized partitions.\nPartition key columns are optional if you have clustering columns.")),(0,r.kt)("p",null,"False\nWhat benefits do Clustering columns provide?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Reading sorted data is a matter of seeking the disk head once.")),(0,r.kt)("li",{parentName:"ul"},"They allow partitions to be spread over several drives."),(0,r.kt)("li",{parentName:"ul"},"You can change the clustering criteria on a table at any time."),(0,r.kt)("li",{parentName:"ul"},"The optimize writes by shuffling the data on disk at write time.")))}d.isMDXComponent=!0}}]);