"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[72826],{603905:(e,n,a)=>{a.d(n,{Zo:()=>p,kt:()=>y});var t=a(667294);function o(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function l(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function s(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?l(Object(a),!0).forEach((function(n){o(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function i(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},l=Object.keys(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var r=t.createContext({}),m=function(e){var n=t.useContext(r),a=n;return e&&(a="function"==typeof e?e(n):s(s({},n),e)),a},p=function(e){var n=m(e.components);return t.createElement(r.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var a=e.components,o=e.mdxType,l=e.originalType,r=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=m(a),u=o,y=c["".concat(r,".").concat(u)]||c[u]||d[u]||l;return a?t.createElement(y,s(s({ref:n},p),{},{components:a})):t.createElement(y,s({ref:n},p))}));function y(e,n){var a=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var l=a.length,s=new Array(l);s[0]=u;var i={};for(var r in n)hasOwnProperty.call(n,r)&&(i[r]=n[r]);i.originalType=e,i[c]="string"==typeof e?e:o,s[1]=i;for(var m=2;m<l;m++)s[m]=a[m];return t.createElement.apply(null,s)}return t.createElement.apply(null,a)}u.displayName="MDXCreateElement"},69214:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>r,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>m});var t=a(487462),o=(a(667294),a(603905));const l={},s="Commands",i={unversionedId:"devops/others/ansible/commands",id:"devops/others/ansible/commands",title:"Commands",description:"Final Commands",source:"@site/docs/devops/others/ansible/commands.md",sourceDirName:"devops/others/ansible",slug:"/devops/others/ansible/commands",permalink:"/devops/others/ansible/commands",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/devops/others/ansible/commands.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Ansible",permalink:"/devops/others/ansible/"},next:{title:"CoreSync, Pacemaker",permalink:"/devops/others/coresync-pacemaker"}},r={},m=[{value:"Final Commands",id:"final-commands",level:2},{value:"Create Inventory File",id:"create-inventory-file",level:2},{value:"Commands",id:"commands-1",level:2},{value:"run commands directly",id:"run-commands-directly",level:3},{value:"run ansible playbooks",id:"run-ansible-playbooks",level:3},{value:"retry offline devices",id:"retry-offline-devices",level:3},{value:"Major Commands",id:"major-commands",level:3},{value:"Command",id:"command",level:2},{value:"Example yml files",id:"example-yml-files",level:2}],p={toc:m},c="wrapper";function d(e){let{components:n,...a}=e;return(0,o.kt)(c,(0,t.Z)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"commands"},"Commands"),(0,o.kt)("h2",{id:"final-commands"},"Final Commands"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Change value of reporting location")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Create inventory file")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},'ansible-playbook pull_add_restart.yml -i inventory/iiitd -e "host=IIITD" --check')),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},'ansible-playbook pull_add_restart.yml -i inventory/iiitd -e "host=IIITD" --limit @pull_add_restart.retry')),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Add hosts to files")),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"- sudo cat /etc/openvpn/openvpn-status.log| grep IIITD\n- sudo vim /etc/ansible/hosts\n- IIITD-01 controller=IIITD-01 ansible_host=10.8.42.156 ansible_port=1234 ansible_ssh_pass='xitanez123!@#' ansible_ssh_user=pi\n- '{0} controller={0} ansible_host={1} ansible_port=1234 ansible_ssh_pass='password' ansible_ssh_user=pi'.format(client.name, client.address)\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Create a playbook (yml file)"))),(0,o.kt)("h2",{id:"create-inventory-file"},"Create Inventory File"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Location - /home/ubuntu/ansible_playbooks/find_client_ips"),(0,o.kt)("li",{parentName:"ul"},"Command - python find_vpn_static_ip.py -c IIITD")),(0,o.kt)("h2",{id:"commands-1"},"Commands"),(0,o.kt)("h3",{id:"run-commands-directly"},"run commands directly"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'#run any command and get results to multiple controllers, deploy to all controllers inside the IIITD group\nansible iiitd -m shell -a "pip freeze | grep kafka"\n\n#restart command to only IIITD-06\nansible IIITD-06 -m shell -a "sudo /home/pi/log_files/twistd_reset.sh -r"\n\nansible iiitd -m shell -a "uname -a"\nansible kafka -m shell -a "uname -a"\n\n#exclude a host from ansible play\nansible kafka --limit \'all:!IIITD-01\' -m shell -a "uname -a"\n\nansible Trent -i inventory/Trent -m shell -a "sudo cat /home/pi/conf/electric_meter.conf | grep ReportDeliveryLocation"\n')),(0,o.kt)("h3",{id:"run-ansible-playbooks"},"run ansible playbooks"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'ansible-playbook add_ini.yml\n\nansible-playbook install.yml\n\nansible-playbook add_ini.yml --check #run playbook in dry-run mode. See what Ansible might do, but without actually changing anything\n\nansible-playbook add_and_restart.yml --check --limit "Dominos-11,Dominos-12,Dominos-13,Dominos-14,Dominos-15,Dominos-16,Dominos-17,Dominos-18,Dominos-19,Dominos-20" #limit the number of hosts to run on in a group of hosts\n\nansible-playbook add_and_restart.yml --check -e "host=dominos" --limit "Dominos-01,Dominos-02,Dominos-03,Dominos-04,Dominos-05,Dominos-06,Dominos-07,Dominos-08,Dominos-09,Dominos-10" #limit the number of hosts to run on in a group of hosts\n\n# using envionment variable\n\nansible-playbook pull.yml --check -e "host=iiitd"\n')),(0,o.kt)("h3",{id:"retry-offline-devices"},"retry offline devices"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ansible-playbook <ansible_playbook>.yml --limit @<ansible_playbook>.retry\n")),(0,o.kt)("h3",{id:"major-commands"},"Major Commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'ansible-playbook timesync_dns.yml -i inventory/motherdairy --extra-vars "variable_host=MotherDairy_2" >> logs/motherdairy_timesync_dns.log &\n\nansible-playbook timesync_dns.yml -i inventory/dominos --extra-vars "variable_host=Dominos" --limit @timesync_dns.retry >> logs/dominos_timesync_dns.retry.log &\n')),(0,o.kt)("h2",{id:"command"},"Command"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"/home/ubuntu/ssh - all clients to ssh\n\n/home/ubuntu/ansible_playbooks - all the playbooks for ansible\n\n/etc/ansible/hosts - stores all hosts for ansible\n\n./home/ubuntu/ssh/example-01 - ssh to example-01\n")),(0,o.kt)("h2",{id:"example-yml-files"},"Example yml files"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"install.yml\n    -\n        hosts: {{ host }}\n        gather_facts: no\n        vars:\n            ansible_ssh_user: pi\n            ansible_port: 1234\n            ansible_ssh_pass: 'xitanez123!@#'\n        tasks:\n            -\n                name: 'install kafka-python'\n                become: yes\n                pip: {name: kafka-python}\n\nadd_ini.yml\n    -\n        hosts: iiitd\n        tasks:\n            -\n                name: 'install reporting location'\n                become: yes\n                ini_file:\n                    path: /home/pi/conf/electric_meter.conf\n                    section: report 1\n                    option: ReportDeliveryLocation\n                    value: kafka://kafka.zenatix.com:9092/iot_data\n                    backup: yes\n\niiitd_pull_playbook.yml\n    -\n        hosts: iiitd\n        tasks:\n            -\n            name: 'pull'\n")))}d.isMDXComponent=!0}}]);