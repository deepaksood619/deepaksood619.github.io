"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[36246],{603905:(e,t,i)=>{i.d(t,{Zo:()=>p,kt:()=>h});var r=i(667294);function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function n(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function s(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?n(Object(i),!0).forEach((function(t){a(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):n(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function o(e,t){if(null==e)return{};var i,r,a=function(e,t){if(null==e)return{};var i,r,a={},n=Object.keys(e);for(r=0;r<n.length;r++)i=n[r],t.indexOf(i)>=0||(a[i]=e[i]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)i=n[r],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),i=t;return e&&(i="function"==typeof e?e(t):s(s({},t),e)),i},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var i=e.components,a=e.mdxType,n=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(i),m=a,h=u["".concat(l,".").concat(m)]||u[m]||f[m]||n;return i?r.createElement(h,s(s({ref:t},p),{},{components:i})):r.createElement(h,s({ref:t},p))}));function h(e,t){var i=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=i.length,s=new Array(n);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:a,s[1]=o;for(var c=2;c<n;c++)s[c]=i[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,i)}m.displayName="MDXCreateElement"},297215:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>f,frontMatter:()=>n,metadata:()=>o,toc:()=>c});var r=i(487462),a=(i(667294),i(603905));const n={},s="Others",o={unversionedId:"ai/scikit-learn/others",id:"ai/scikit-learn/others",title:"Others",description:"Some Classifiers in scikit-learn",source:"@site/docs/ai/scikit-learn/others.md",sourceDirName:"ai/scikit-learn",slug:"/ai/scikit-learn/others",permalink:"/ai/scikit-learn/others",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/ai/scikit-learn/others.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Intro",permalink:"/ai/scikit-learn/intro"},next:{title:"Cheatsheet",permalink:"/ai/scikit-learn/scipy-cheatsheet"}},l={},c=[{value:"Some Classifiers in scikit-learn",id:"some-classifiers-in-scikit-learn",level:2},{value:"Examples of Classification Tasks",id:"examples-of-classification-tasks",level:2},{value:"Resources",id:"resources",level:2}],p={toc:c},u="wrapper";function f(e){let{components:t,...i}=e;return(0,a.kt)(u,(0,r.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"others"},"Others"),(0,a.kt)("h2",{id:"some-classifiers-in-scikit-learn"},"Some Classifiers in scikit-learn"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"K-nearest neighbors"),(0,a.kt)("li",{parentName:"ul"},"Support vector machines"),(0,a.kt)("li",{parentName:"ul"},"Decision tree classifiers / Random Forests"),(0,a.kt)("li",{parentName:"ul"},"Naive Bayes"),(0,a.kt)("li",{parentName:"ul"},"Linear Discriminant Analysis"),(0,a.kt)("li",{parentName:"ul"},"Logistic Regression")),(0,a.kt)("h2",{id:"examples-of-classification-tasks"},"Examples of Classification Tasks"),(0,a.kt)("p",null,"Classification tasks are any tasks that have you putting examples into two or more classes. Determining if an image is a cat or dog is a classification task, as is determining what the quality of a bottle of wine is based on features like acidity and alcohol content."),(0,a.kt)("p",null,"Depending on the classification task at hand, you will want to use different classifiers. For instance, a logistic regression model is best suited for binary classification tasks, even though multiple variable logistic regression models exist."),(0,a.kt)("p",null,"As you gain more experience with classifiers you will develop a better sense for when to use which classifier. However, a common practice is to instantiate multiple classifiers and compare their performance against one another, then select the classifier which performs the best."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://stackabuse.com/overview-of-classification-methods-in-python-with-scikit-learn"},"https://stackabuse.com/overview-of-classification-methods-in-python-with-scikit-learn")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://scikit-learn.org/stable/auto_examples/classification/plot_classifier_comparison.html"},"https://scikit-learn.org/stable/auto_examples/classification/plot_classifier_comparison.html")),(0,a.kt)("h2",{id:"resources"},"Resources"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.dataquest.io/blog/sci-kit-learn-tutorial"},"https://www.dataquest.io/blog/sci-kit-learn-tutorial")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.freecodecamp.org/news/machine-learning-with-scikit-learn-full-course"},"https://www.freecodecamp.org/news/machine-learning-with-scikit-learn-full-course")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.freecodecamp.org/news/learn-scikit-learn"},"https://www.freecodecamp.org/news/learn-scikit-learn")))}f.isMDXComponent=!0}}]);