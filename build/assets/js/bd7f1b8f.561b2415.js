"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[67360],{603905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>d});var n=r(667294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=n.createContext({}),m=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=m(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=m(r),g=i,d=c["".concat(p,".").concat(g)]||c[g]||u[g]||a;return r?n.createElement(d,o(o({ref:t},s),{},{components:r})):n.createElement(d,o({ref:t},s))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=g;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:i,o[1]=l;for(var m=2;m<a;m++)o[m]=r[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},750317:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>m});var n=r(487462),i=(r(667294),r(603905));const a={},o="Minimum Spanning Tree",l={unversionedId:"algorithms/graphtheory/minimum-spanning-tree",id:"algorithms/graphtheory/minimum-spanning-tree",title:"Minimum Spanning Tree",description:"Properties of MST",source:"@site/docs/algorithms/graphtheory/minimum-spanning-tree.md",sourceDirName:"algorithms/graphtheory",slug:"/algorithms/graphtheory/minimum-spanning-tree",permalink:"/algorithms/graphtheory/minimum-spanning-tree",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/algorithms/graphtheory/minimum-spanning-tree.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Maximum Flow and Minimum Cut",permalink:"/algorithms/graphtheory/maximum-flow-and-minimum-cut"},next:{title:"Other Graph Algorithms",permalink:"/algorithms/graphtheory/other-graph-algorithms"}},p={},m=[{value:"Properties of MST",id:"properties-of-mst",level:2},{value:"Applications",id:"applications",level:2},{value:"Greedy Algorithm",id:"greedy-algorithm",level:2},{value:"Implementations",id:"implementations",level:2}],s={toc:m},c="wrapper";function u(e){let{components:t,...a}=e;return(0,i.kt)(c,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"minimum-spanning-tree"},"Minimum Spanning Tree"),(0,i.kt)("h2",{id:"properties-of-mst"},"Properties of MST"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Always have V-1 edges for a graph of V vertices")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"image",src:r(829279).Z,width:"1134",height:"796"})),(0,i.kt)("h2",{id:"applications"},"Applications"),(0,i.kt)("p",null,"\u30fbDithering."),(0,i.kt)("p",null,"\u30fbCluster analysis."),(0,i.kt)("p",null,"\u30fbMax bottleneck paths."),(0,i.kt)("p",null,"\u30fbReal-time face verification."),(0,i.kt)("p",null,"\u30fbLDPC (Low Density Parity Check) codes for error correction."),(0,i.kt)("p",null,"\u30fbImage registration with Renyi entropy."),(0,i.kt)("p",null,"\u30fbFind road networks in satellite and aerial imagery."),(0,i.kt)("p",null,"\u30fbReducing data storage in sequencing amino acids in a protein."),(0,i.kt)("p",null,"\u30fbModel locality of particle interactions in turbulent fluid flows."),(0,i.kt)("p",null,"\u30fbAutoconfig protocol for Ethernet bridging to avoid cycles in a network."),(0,i.kt)("p",null,"\u30fbApproximation algorithms for NP-hard problems (e.g., TSP, Steiner tree)."),(0,i.kt)("p",null,"\u30fbNetwork design (communication, electrical, hydraulic, computer, road)."),(0,i.kt)("h2",{id:"greedy-algorithm"},"Greedy Algorithm"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"image",src:r(584034).Z,width:"1110",height:"892"})),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"image",src:r(598092).Z,width:"1154",height:"846"})),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"image",src:r(173703).Z,width:"1096",height:"830"})),(0,i.kt)("h2",{id:"implementations"},"Implementations"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Kruskal's Algorithm")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Prim's Algorithm")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Boruvka's Algorithm"))))}u.isMDXComponent=!0},829279:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/Minimum-Spanning-Tree-image1-56f303be3ed619d97f8fa26fa63fd6b4.jpg"},584034:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/Minimum-Spanning-Tree-image2-f8d87a46ef0f5124327d3a8a0ba508c5.jpg"},598092:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/Minimum-Spanning-Tree-image3-3cfe67e64ea4ab88c00d56c8bb1518b6.jpg"},173703:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/Minimum-Spanning-Tree-image4-23e968caaaf2e7ab70453d2bfec2d248.jpg"}}]);