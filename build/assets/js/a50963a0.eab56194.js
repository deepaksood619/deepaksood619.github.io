"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[68458],{603905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var a=n(667294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=l(n),m=r,k=u["".concat(p,".").concat(m)]||u[m]||c[m]||i;return n?a.createElement(k,s(s({ref:t},d),{},{components:n})):a.createElement(k,s({ref:t},d))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:r,s[1]=o;for(var l=2;l<i;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},65736:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var a=n(487462),r=(n(667294),n(603905));const i={},s="redis-py",o={unversionedId:"databases/nosql-databases/redis/redis-py",id:"databases/nosql-databases/redis/redis-py",title:"redis-py",description:"check pending list in redis",source:"@site/docs/databases/nosql-databases/redis/redis-py.md",sourceDirName:"databases/nosql-databases/redis",slug:"/databases/nosql-databases/redis/redis-py",permalink:"/databases/nosql-databases/redis/redis-py",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/databases/nosql-databases/redis/redis-py.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Redis Eviction Policies",permalink:"/databases/nosql-databases/redis/redis-eviction-policies"},next:{title:"Redis Queues",permalink:"/databases/nosql-databases/redis/redis-queues"}},p={},l=[{value:"check pending list in redis",id:"check-pending-list-in-redis",level:3},{value:"Sentinel",id:"sentinel",level:2},{value:"purge queue",id:"purge-queue",level:3},{value:"Redis-OM",id:"redis-om",level:3}],d={toc:l},u="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"redis-py"},"redis-py"),(0,r.kt)("h3",{id:"check-pending-list-in-redis"},"check pending list in redis"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'pip install ipython\nipython\n\nfrom config.redis_setup import redis_client\n\ndef get_pending(queue):\n last_id = redis_client.xinfo_groups(queue)[0]["last-delivered-id"]\n return len(redis_client.xread({queue: last_id})[0][1])\n\nget_pending("send:pinpoint_sms")\nget_pending("send:offer_email")\nget_pending("send:sms")\nget_pending("send:offer_sms")\nget_pending("send:push_notification")\nget_pending("send:offer_push_notification")\nget_pending("send:whatsapp_sms")\nget_pending("send:whatsapp_offer_sms")\n\npip install redis==3.4.1\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import redis\n\nr = redis.Redis(host='redis', port=6379, db=0, password='password')\n\nr.set('foo', 'bar')\n\nr.get('foo')\nfor key, value in enumerate(r.keys('test:*')):\n\nredis_key = value.decode(\"utf-8\")\n\nsize = r.debug_object(redis_key)\n\nprint(f'{key},{redis_key},{r.ttl(redis_key)},{r.llen(redis_key)},{size [\"serializedlength\"]},{size [\"ql_uncompressed_size\"]}')\n\nfor key, value in enumerate(r.keys('test:*')):\n    print(key, value)\n\nclass redis.Redis(host=u'localhost',port=6379,db=0, password=None, socket_timeout=None, socket_connect_timeout=None, socket_keepalive=None, socket_keepalive_options=None, connection_pool=None, unix_socket_path=None, encoding=u'utf-8', encoding_errors=u'strict', charset=None, errors=None, decode_responses=False, retry_on_timeout=False, ssl=False, ssl_keyfile=None, ssl_certfile=None, ssl_cert_reqs=u'required', ssl_ca_certs=None, max_connections=None, single_connection_client=False, health_check_interval=0)\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"get(name)"),(0,r.kt)("p",{parentName:"li"},"  Return the value at keyname, or None if the key doesn't exist")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"getset(name,value)"),(0,r.kt)("p",{parentName:"li"},"  Sets the value at keynametovalueand returns the old value at key name atomically")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"exists(*names)"),(0,r.kt)("p",{parentName:"li"},"  Returns the number of names that exist")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"keys(pattern=u'*')"),(0,r.kt)("p",{parentName:"li"},"  Returns a list of keys matchingpattern")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"append(key,value)"),(0,r.kt)("p",{parentName:"li"},"  Appends the stringvalueto the value atkey. Ifkeydoesn't already exist, create it with a value ofvalue. Returns the new length of the value atkey.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"set(name,value,ex=None,px=None,nx=False,xx=False, keepttl=False)"),(0,r.kt)("p",{parentName:"li"},"  Set the value at keynametovalue"),(0,r.kt)("p",{parentName:"li"},"  ",(0,r.kt)("inlineCode",{parentName:"p"},"ex")," sets an expire flag on keynameforexseconds."),(0,r.kt)("p",{parentName:"li"},"  ",(0,r.kt)("inlineCode",{parentName:"p"},"px")," sets an expire flag on keynameforpxmilliseconds."),(0,r.kt)("p",{parentName:"li"},"  ",(0,r.kt)("inlineCode",{parentName:"p"},"nx")," if set to True, set the value at key name to value only if it does not exist."),(0,r.kt)("p",{parentName:"li"},"  ",(0,r.kt)("inlineCode",{parentName:"p"},"xx")," if set to True, set the value at key name to value only if it already exists."),(0,r.kt)("p",{parentName:"li"},"  keepttl if True, retain the time to live associated with the key. (Available since Redis 6.0)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"rpush(name,*values)"),(0,r.kt)("p",{parentName:"li"},"  Push values onto the tail of the list name")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"rpushx(name,value)"),(0,r.kt)("p",{parentName:"li"},"  Push value onto the tail of the list name if name exists")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"lrange(name,start,end)"),(0,r.kt)("p",{parentName:"li"},"  Return a slice of the list name between position start and end"),(0,r.kt)("p",{parentName:"li"},"  start and end can be negative numbers just like Python slicing notation")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"ttl(name)"),(0,r.kt)("p",{parentName:"li"},"  Returns the number of seconds until the keynamewill expire")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"type(name)"),(0,r.kt)("p",{parentName:"li"},"  Returns the type of keyname"))),(0,r.kt)("h2",{id:"sentinel"},"Sentinel"),(0,r.kt)("p",null,"redis-py can be used together with ",(0,r.kt)("a",{parentName:"p",href:"https://redis.io/topics/sentinel"},"Redis Sentinel")," to discover Redis nodes. You need to have at least one Sentinel daemon running in order to use redis-py's Sentinel support."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://redis-py.readthedocs.io/en/latest"},"https://redis-py.readthedocs.io/en/latest")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://realpython.com/python-redis"},"https://realpython.com/python-redis")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://pypi.org/project/redis"},"https://pypi.org/project/redis")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/andymccurdy/redis-py"},"https://github.com/andymccurdy/redis-py")),(0,r.kt)("h3",{id:"purge-queue"},"purge queue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"\nz = redis_client.xpending_range('send:offer_push_notification', 'offer_push_notification_consumer', \"-\", \"+\", 10000000)\n\nfor i in z:\n\xa0\xa0\xa0redis_client.xack('send:offer_push_notification', 'offer_push_notification_consumer', i['message_id'])\n\nz = redis_client.xpending_range('send:whatsapp_offer_sms', 'offer_whatsapp_consumer', \"-\", \"+\", 100000)\n\nfor i in z:\n\xa0\xa0\xa0redis_client.xack('send:whatsapp_offer_sms', 'offer_whatsapp_consumer', i['message_id'])\n")),(0,r.kt)("h3",{id:"redis-om"},"Redis-OM"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/redis/redis-om-python"},"https://github.com/redis/redis-om-python")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://redis.com/blog/introducing-redis-om-client-libraries"},"https://redis.com/blog/introducing-redis-om-client-libraries")))}c.isMDXComponent=!0}}]);