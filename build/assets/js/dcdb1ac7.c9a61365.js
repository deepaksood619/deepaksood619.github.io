"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[20592],{603905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>u});var n=r(667294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},m="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(r),d=a,u=m["".concat(l,".").concat(d)]||m[d]||g[d]||o;return r?n.createElement(u,i(i({ref:t},c),{},{components:r})):n.createElement(u,i({ref:t},c))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},654761:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=r(487462),a=(r(667294),r(603905));const o={},i="Comparision",s={unversionedId:"networking/others/grpc/comparision",id:"networking/others/grpc/comparision",title:"Comparision",description:"Performance benchmarks",source:"@site/docs/networking/others/grpc/comparision.md",sourceDirName:"networking/others/grpc",slug:"/networking/others/grpc/comparision",permalink:"/networking/others/grpc/comparision",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/networking/others/grpc/comparision.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Commands",permalink:"/networking/others/grpc/commands"},next:{title:"Concepts",permalink:"/networking/others/grpc/concepts"}},l={},p=[{value:"Performance benchmarks",id:"performance-benchmarks",level:2},{value:"High-level comparison",id:"high-level-comparison",level:2},{value:"gRPC recommended scenarios",id:"grpc-recommended-scenarios",level:2},{value:"gRPC weaknesses",id:"grpc-weaknesses",level:2}],c={toc:p},m="wrapper";function g(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"comparision"},"Comparision"),(0,a.kt)("h2",{id:"performance-benchmarks"},"Performance benchmarks"),(0,a.kt)("p",null,"gRPC is roughly 7 times faster than REST when receiving data & roughly 10 times faster than REST when sending data for this specific payload. This is mainly due to the tight packing of the Protocol Buffers and the use of HTTP/2 by gRPC. However I had to spend roughly 45 mins implementing this simple gRPC Service, where I only spent around 10 mins building the WebAPI."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://medium.com/@EmperorRXF/evaluating-performance-of-rest-vs-grpc-1b8bdf0b22da"},"https://medium.com/@EmperorRXF/evaluating-performance-of-rest-vs-grpc-1b8bdf0b22da")),(0,a.kt)("h2",{id:"high-level-comparison"},"High-level comparison"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"th"},"Feature")),(0,a.kt)("th",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"th"},"gRPC")),(0,a.kt)("th",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"th"},"HTTP APIs with JSON")))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Contract")),(0,a.kt)("td",{parentName:"tr",align:null},"Required (.proto)"),(0,a.kt)("td",{parentName:"tr",align:null},"Optional (OpenAPI)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Protocol")),(0,a.kt)("td",{parentName:"tr",align:null},"HTTP/2"),(0,a.kt)("td",{parentName:"tr",align:null},"HTTP")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Payload")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://docs.microsoft.com/en-us/aspnet/core/grpc/comparison?view=aspnetcore-3.1#performance"},"Protobuf (small, binary)")),(0,a.kt)("td",{parentName:"tr",align:null},"JSON (large, human readable)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Prescriptiveness")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://docs.microsoft.com/en-us/aspnet/core/grpc/comparison?view=aspnetcore-3.1#strict-specification"},"Strict specification")),(0,a.kt)("td",{parentName:"tr",align:null},"Loose. Any HTTP is valid.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Streaming")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://docs.microsoft.com/en-us/aspnet/core/grpc/comparison?view=aspnetcore-3.1#streaming"},"Client, server, bi-directional")),(0,a.kt)("td",{parentName:"tr",align:null},"Client, server")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Browser support")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://docs.microsoft.com/en-us/aspnet/core/grpc/comparison?view=aspnetcore-3.1#limited-browser-support"},"No (requires grpc-web)")),(0,a.kt)("td",{parentName:"tr",align:null},"Yes")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Security")),(0,a.kt)("td",{parentName:"tr",align:null},"Transport (TLS)"),(0,a.kt)("td",{parentName:"tr",align:null},"Transport (TLS)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Client code-generation")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://docs.microsoft.com/en-us/aspnet/core/grpc/comparison?view=aspnetcore-3.1#code-generation"},"Yes")),(0,a.kt)("td",{parentName:"tr",align:null},"OpenAPI + third-party tooling")))),(0,a.kt)("h2",{id:"grpc-recommended-scenarios"},"gRPC recommended scenarios"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Microservices--")," gRPC is designed for low latency and high throughput communication. gRPC is great for lightweight microservices where efficiency is critical."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Point-to-point real-time communication--")," gRPC has excellent support for bi-directional streaming. gRPC services can push messages in real-time without polling."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Polyglot environments--")," gRPC tooling supports all popular development languages, making gRPC a good choice for multi-language environments."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Network constrained environments--")," gRPC messages are serialized with Protobuf, a lightweight message format. A gRPC message is always smaller than an equivalent JSON message.")),(0,a.kt)("h2",{id:"grpc-weaknesses"},"gRPC weaknesses"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Limited browser support"),(0,a.kt)("li",{parentName:"ul"},"Not human readable\n",(0,a.kt)("a",{parentName:"li",href:"https://docs.microsoft.com/en-us/aspnet/core/grpc/comparison"},"https://docs.microsoft.com/en-us/aspnet/core/grpc/comparison"))))}g.isMDXComponent=!0}}]);