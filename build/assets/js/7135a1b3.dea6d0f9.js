"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[69130],{603905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>h});var n=a(667294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=p(a),m=o,h=c["".concat(l,".").concat(m)]||c[m]||u[m]||r;return a?n.createElement(h,s(s({ref:t},d),{},{components:a})):n.createElement(h,s({ref:t},d))}));function h(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,s=new Array(r);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[c]="string"==typeof e?e:o,s[1]=i;for(var p=2;p<r;p++)s[p]=a[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},937725:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var n=a(487462),o=(a(667294),a(603905));const r={},s="Others",i={unversionedId:"python/django/others",id:"python/django/others",title:"Others",description:"Fixtures",source:"@site/docs/python/django/others.md",sourceDirName:"python/django",slug:"/python/django/others",permalink:"/python/django/others",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/python/django/others.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Other Topics",permalink:"/python/django/other-topics"},next:{title:"Overview",permalink:"/python/django/overview"}},l={},p=[{value:"Fixtures",id:"fixtures",level:2},{value:"Providing initial data with fixtures",id:"providing-initial-data-with-fixtures",level:3},{value:"Postgres",id:"postgres",level:2},{value:"PostgreSQL-specific ModelFields",id:"postgresql-specific-modelfields",level:2},{value:"Optimizations",id:"optimizations",level:2},{value:"Messages Framework",id:"messages-framework",level:2},{value:"Concepts",id:"concepts",level:2},{value:"Generic View: less code is better",id:"generic-view-less-code-is-better",level:2},{value:"Custom Authentication Backend / Authorization",id:"custom-authentication-backend--authorization",level:2},{value:"Other Authentication Sources",id:"other-authentication-sources",level:3},{value:"Specifying Authentication Backend",id:"specifying-authentication-backend",level:3},{value:"Custom User Model",id:"custom-user-model",level:3},{value:"Libraries",id:"libraries",level:3},{value:"Deleting an app in Django",id:"deleting-an-app-in-django",level:2},{value:"Managers",id:"managers",level:2},{value:"Manager names",id:"manager-names",level:3},{value:"reStructured Text (reST)",id:"restructured-text-rest",level:2},{value:"Django Resources",id:"django-resources",level:2},{value:"Others",id:"others-1",level:2}],d={toc:p},c="wrapper";function u(e){let{components:t,...a}=e;return(0,o.kt)(c,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"others"},"Others"),(0,o.kt)("h2",{id:"fixtures"},"Fixtures"),(0,o.kt)("p",null,"It's sometimes useful to pre-populate your database with hard-coded data when you're first setting up an app. You can provide initial data with fixtures or migrations."),(0,o.kt)("h3",{id:"providing-initial-data-with-fixtures"},"Providing initial data with fixtures"),(0,o.kt)("p",null,"A fixture is a collection of data that Django knows how to import into a database. The most straightforward way of creating a fixture if you've already got some data is to use the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.djangoproject.com/en/1.11/ref/django-admin/#django-admin-dumpdata"},"manage.pydumpdata")," command. Or, you can write fixtures by hand; fixtures can be written as JSON, XML or YAML (with ",(0,o.kt)("a",{parentName:"p",href:"http://www.pyyaml.org/"},"PyYAML")," installed) documents."),(0,o.kt)("h2",{id:"postgres"},"Postgres"),(0,o.kt)("h2",{id:"postgresql-specific-modelfields"},"PostgreSQL-specific ModelFields"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Introduced in Django 1.8"),(0,o.kt)("li",{parentName:"ul"},"ArrayField"),(0,o.kt)("li",{parentName:"ul"},"HStoreField"),(0,o.kt)("li",{parentName:"ul"},"Range Fields"),(0,o.kt)("li",{parentName:"ul"},"JSONField")),(0,o.kt)("p",null,"A field for storing JSON encoded data. In Python the data is represented in its Python native format: dictionaries, lists, strings, numbers, booleans and ",(0,o.kt)("strong",{parentName:"p"},"None"),"."),(0,o.kt)("p",null,"PostgreSQL has two native JSON based data types: ",(0,o.kt)("strong",{parentName:"p"},"json")," and ",(0,o.kt)("strong",{parentName:"p"},"jsonb"),". The main difference between them is how they are stored and how they can be queried. PostgreSQL's ",(0,o.kt)("strong",{parentName:"p"},"json")," field is stored as the original string representation of the JSON and must be decoded on the fly when queried based on keys. The ",(0,o.kt)("strong",{parentName:"p"},"jsonb")," field is stored based on the actual structure of the JSON which allows indexing. The trade-off is a small additional cost on writing to the ",(0,o.kt)("strong",{parentName:"p"},"jsonb")," field. ",(0,o.kt)("strong",{parentName:"p"},"JSONField")," uses ",(0,o.kt)("strong",{parentName:"p"},"jsonb"),"."),(0,o.kt)("p",null,"Can Supply RAW PostgreSQL queries for filtering and other direct postgres statements"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},'RawSQL("metadata->>%s", ("TPA_License"),")')),(0,o.kt)("p",null,"Use psycopg2 for connecting to database instance"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"http://initd.org/psycopg/docs/module.html#psycopg2.connect"},"http://initd.org/psycopg/docs/module.html")),(0,o.kt)("h2",{id:"optimizations"},"Optimizations"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Never use len on queryset, use exists or count instead")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Auto-generate models"),(0,o.kt)("p",{parentName:"li"},"Utility - inspectdb can create models by introspecting an existing database."),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"python manage.py inspectdb > models.py"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Use values() or values_list() and only() query expressions for getting specific values"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'names = []\n\nfor name in Song.objects.filter(artist=a).values_list("name", flat=True):\n    names.append(name)\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.peterbe.com/plog/django-orm-optimization-story-on-selecting-the-least-possible"},"https://www.peterbe.com/plog/django-orm-optimization-story-on-selecting-the-least-possible")),(0,o.kt)("h2",{id:"messages-framework"},"Messages Framework"),(0,o.kt)("p",null,"Django apps - ",(0,o.kt)("inlineCode",{parentName:"p"},"django.contrib.messages")),(0,o.kt)("p",null,'Quite commonly in web applications, you need to display a one-time notification message (also known as "flash message") to the user after processing a form or some other types of user input.'),(0,o.kt)("p",null,"For this, Django provides full support for cookie- and session-based messaging, for both anonymous and authenticated users. The messages framework allows you to temporarily store messages in one request and retrieve them for display in a subsequent request (usually the next one). Every message is tagged with a specificlevelthat determines its priority (e.g., info, warning, orerror)."),(0,o.kt)("h2",{id:"concepts"},"Concepts"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"mysite/urls.py\n\nfrom django.conf.urls import include, url\nfrom django.contrib import admin\n urlpatterns = [\n    url(r'^polls/', include('polls.urls')),\n    url(r'^admin/', admin.site.urls),\n]\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"https://docs.djangoproject.com/en/1.11/ref/urls/#django.conf.urls.include"},"include()")," function allows referencing other URLconfs. Note that the regular expressions for the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.djangoproject.com/en/1.11/ref/urls/#django.conf.urls.include"},"include()")," function doesn't have a$(end-of-string match character) but rather a trailing slash. Whenever Django encounters ",(0,o.kt)("a",{parentName:"p",href:"https://docs.djangoproject.com/en/1.11/ref/urls/#django.conf.urls.include"},"include()"),", it chops off whatever part of the URL matched up to that point and sends the remaining string to the included URLconf for further processing."),(0,o.kt)("p",null,"The idea behind ",(0,o.kt)("a",{parentName:"p",href:"https://docs.djangoproject.com/en/1.11/ref/urls/#django.conf.urls.include"},"include()"),' is to make it easy to plug-and-play URLs. Since polls are in their own URLconf (polls/urls.py), they can be placed under "/polls/", or under "/fun_polls/", or under "/content/polls/", or any other path root, and the app will still work.'),(0,o.kt)("h2",{id:"generic-view-less-code-is-better"},"Generic View: less code is better"),(0,o.kt)("p",null,"Generic views abstract common patterns to the point where you don't even need to write Python code to write an app."),(0,o.kt)("h2",{id:"custom-authentication-backend--authorization"},"Custom Authentication Backend / Authorization"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.djangoproject.com/en/1.11/topics/auth/customizing"},"https://docs.djangoproject.com/en/1.11/topics/auth/customizing")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.djangoproject.com/en/1.11/topics/auth/customizing/#authentication-backends"},"Authentication backends")," provide an extensible system for when a username and password stored with the user model need to be authenticated against a different service than Django's default."),(0,o.kt)("p",null,"You can give your models ",(0,o.kt)("a",{parentName:"p",href:"https://docs.djangoproject.com/en/1.11/topics/auth/customizing/#custom-permissions"},"custom permissions")," that can be checked through Django's authorization system."),(0,o.kt)("p",null,"You can ",(0,o.kt)("a",{parentName:"p",href:"https://docs.djangoproject.com/en/1.11/topics/auth/customizing/#extending-user"},"extend")," the default ",(0,o.kt)("strong",{parentName:"p"},"User")," model, or ",(0,o.kt)("a",{parentName:"p",href:"https://docs.djangoproject.com/en/1.11/topics/auth/customizing/#auth-custom-user"},"substitute")," a completely customized model."),(0,o.kt)("h3",{id:"other-authentication-sources"},"Other Authentication Sources"),(0,o.kt)("p",null,"For example, your company may already have an LDAP (Lightweight Directory Access Protocol) setup that stores a username and password for every employee. It'd be a hassle for both the network administrator and the users themselves if users had separate accounts in LDAP and the Django-based applications."),(0,o.kt)("h3",{id:"specifying-authentication-backend"},"Specifying Authentication Backend"),(0,o.kt)("p",null,'Django maintains a list of "authentication backend" that is checks for authentication. When someone calls django.contrib.auth.authenticate() - django tries authenticating across all of its authentication backends'),(0,o.kt)("h3",{id:"custom-user-model"},"Custom User Model"),(0,o.kt)("p",null,"AUTH_USER_MODEL = 'myapp.MyUser'"),(0,o.kt)("h3",{id:"libraries"},"Libraries"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/James1345/django-rest-knox"},"https://github.com/James1345/django-rest-knox")),(0,o.kt)("p",null,"Django-allauth"),(0,o.kt)("p",null,"django-rest-framework-jwt"),(0,o.kt)("h2",{id:"deleting-an-app-in-django"},"Deleting an app in Django"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Remove models from the apps"),(0,o.kt)("li",{parentName:"ul"},"Run migrations and migrate"),(0,o.kt)("li",{parentName:"ul"},"Delete all files"),(0,o.kt)("li",{parentName:"ul"},"Remove from installed apps"),(0,o.kt)("li",{parentName:"ul"},"Delete Content Type")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'python manamge.py shell\n\nfrom django.contrib.contenttypes.models import ContentType\n\nfor c in ContentType.objects.all():\n    if not c.model_class():\n        print "deleting %s"%c\n        c.delete()\n')),(0,o.kt)("h2",{id:"managers"},"Managers"),(0,o.kt)("p",null,"A Manager is the interface through which database query operations are provided to Django models. At least one Manager exists for every model in a Django application."),(0,o.kt)("h3",{id:"manager-names"},"Manager names"),(0,o.kt)("p",null,"By default, Django adds a Manager with the name objects to every Django model class. However, if you want to use objects as a field name, or if you want to use a name other than objects for the Manager, you can rename it on a per-model basis. To rename the Manager for a given class, define a class attribute of type ",(0,o.kt)("inlineCode",{parentName:"p"},"models.Manager()")," on that model. For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from django.db import models\n\nclass Person(models.Model):\n    #...\n\npeople = models.Manager()\n")),(0,o.kt)("p",null,"Using this example model, Person.objects will generate an AttributeError exception, but Person.people.all()will provide a list of all Person objects."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from django.db import models\nfrom django.db.models import Sum\nfrom django.db.models.functions import Coalesce\n\nclass AuthorManager(models.Manager):\n    def get_queryset(self):\n        return AuthorQuerySet(self.model, using=self._db)\n\n    def annotate_with_copies_sold(self):\n        return self.get_queryset().annotate_with_copies_sold()\n\nclass AuthorQuerySet(models.QuerySet):\n    def annotate_with_copies_sold(self):\n        # Write your solution here\n        return self.annotate(copies_sold=Coalesce(Sum('books__copies_sold'), 0))\n\nclass Author(models.Model):\n    # Make sure this manager is available.\n    objects = AuthorManager()\n    # objects = models.Manager.from_queryset(AuthorQuerySet)()\n    first_name = models.CharField(max_length=30)\n    last_name = models.CharField(max_length=30)\n\nclass Book(models.Model):\n    title = models.CharField(max_length=30)\n    copies_sold = models.PositiveIntegerField()\n    author = models.ForeignKey(Author, on_delete=models.CASCADE, related_name='books')\n\nauthor = Author.objects.create(first_name='Mark', last_name='Twain')\nBook.objects.create(author=author, title='Adventures of Huckleberry Finn', copies_sold=7)\nBook.objects.create(author=author, title='The Adventures of Tom Sawyer', copies_sold=4)\n\nauthor = Author.objects.annotate_with_copies_sold().first()\nauthor.copies_sold\n11\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.djangoproject.com/en/2.2/topics/db/managers"},"https://docs.djangoproject.com/en/2.2/topics/db/managers")),(0,o.kt)("h2",{id:"restructured-text-rest"},"reStructured Text (reST)"),(0,o.kt)("p",null,"Markup language for Sphinx Documentation in Django."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://pythonhosted.org/an_example_pypi_project/sphinx.html"},"https://pythonhosted.org/an_example_pypi_project/sphinx.html")),(0,o.kt)("p",null,"Bold and italics are done like this:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"**bold** and *italics*")),(0,o.kt)("h2",{id:"django-resources"},"Django Resources"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.reddit.com/r/django/comments/rrcj0m/any_enterprise_level_open_source_django_project"},"https://www.reddit.com/r/django/comments/rrcj0m/any_enterprise_level_open_source_django_project")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/getsentry/sentry"},"https://github.com/getsentry/sentry")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/taigaio"},"https://github.com/taigaio")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/edx/edx-platform"},"https://github.com/edx/edx-platform")),(0,o.kt)("h2",{id:"others-1"},"Others"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://medium.com/@DoorDash/tips-for-building-high-quality-django-apps-at-scale-a5a25917b2b5"},"https://medium.com/@DoorDash/tips-for-building-high-quality-django-apps-at-scale-a5a25917b2b5")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://medium.com/@hakibenita/things-you-must-know-about-django-admin-as-your-app-gets-bigger-6be0b0ee9614"},"https://medium.com/@hakibenita/things-you-must-know-about-django-admin-as-your-app-gets-bigger-6be0b0ee9614")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://data-flair.training/blogs/django-file-upload"},"https://data-flair.training/blogs/django-file-upload")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.djangoproject.com/en/2.0/topics/class-based-views/intro/#decorating-the-class"},"https://docs.djangoproject.com/en/2.0/topics/class-based-views/intro/#decorating-the-class")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://simpleisbetterthancomplex.com/tutorial/2018/01/18/how-to-implement-multiple-user-types-with-django.html"},"https://simpleisbetterthancomplex.com/tutorial/2018/01/18/how-to-implement-multiple-user-types-with-django.html")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=_vCT42vDfgw&ab_channel=freeCodeCamp.org"},"Python Django and Google APIs - Project Tutorial")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.freecodecamp.org/news/django-project-create-a-digital-resume-using-django-and-python"},"https://www.freecodecamp.org/news/django-project-create-a-digital-resume-using-django-and-python")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.freecodecamp.org/news/create-a-netflix-clone-with-django-and-tailwind-css"},"https://www.freecodecamp.org/news/create-a-netflix-clone-with-django-and-tailwind-css")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.toptal.com/django/django-top-10-mistakes"},"https://www.toptal.com/django/django-top-10-mistakes")))}u.isMDXComponent=!0}}]);