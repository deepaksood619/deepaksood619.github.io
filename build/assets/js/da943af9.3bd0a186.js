"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[50947],{603905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>d});var n=r(667294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),u=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),c=u(r),m=a,d=c["".concat(p,".").concat(m)]||c[m]||h[m]||o;return r?n.createElement(d,l(l({ref:t},s),{},{components:r})):n.createElement(d,l({ref:t},s))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[c]="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},792908:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var n=r(487462),a=(r(667294),r(603905));const o={},l="17. Concurrent Execution",i={unversionedId:"python/documentation/17-concurrent-execution",id:"python/documentation/17-concurrent-execution",title:"17. Concurrent Execution",description:"- 17.1.threading - Thread-based parallelism",source:"@site/docs/python/documentation/17-concurrent-execution.md",sourceDirName:"python/documentation",slug:"/python/documentation/17-concurrent-execution",permalink:"/python/documentation/17-concurrent-execution",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/python/documentation/17-concurrent-execution.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"16. Generic Operating System Services / Logging",permalink:"/python/documentation/16-generic-operating-system-services-logging"},next:{title:"18. Interprocess Communication and Networking",permalink:"/python/documentation/18-interprocess-communication-and-networking"}},p={},u=[{value:"threading example",id:"threading-example",level:2},{value:"Queue - A synchronized queue class",id:"queue---a-synchronized-queue-class",level:2},{value:"PriorityQueue",id:"priorityqueue",level:2},{value:"Python Parallel Processing",id:"python-parallel-processing",level:2},{value:"Ray",id:"ray",level:2},{value:"Subprocess",id:"subprocess",level:2},{value:"Can be used to call other compiled programs",id:"can-be-used-to-call-other-compiled-programs",level:4},{value:"sched",id:"sched",level:2}],s={toc:u},c="wrapper";function h(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"17-concurrent-execution"},"17. Concurrent Execution"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3/library/threading.html"},"17.1.threading - Thread-based parallelism")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3/library/multiprocessing.html"},"17.2.multiprocessing - Process-based parallelism")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3/library/concurrent.html"},"17.3. Theconcurrentpackage")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3/library/concurrent.futures.html"},"17.4.concurrent.futures - Launching parallel tasks")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3/library/subprocess.html"},"17.5.subprocess - Subprocess management")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3/library/sched.html"},"17.6.sched - Event scheduler")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3/library/queue.html"},"17.7.queue - A synchronized queue class")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3/library/dummy_threading.html"},"17.8.dummy_threading - Drop-in replacement for thethreadingmodule")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3/library/_thread.html"},"17.9._thread - Low-level threading API")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3/library/_dummy_thread.html"},"17.10._dummy_thread - Drop-in replacement for the_threadmodule"))),(0,a.kt)("h2",{id:"threading-example"},"threading example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"import threading\n\ncounter = 0\n\ndef worker():\n\nglobal counter\n\ncounter += 1\n\nprint('The count is %d' % counter)\n\nfor i in range(10):\n\nthreading.Thread(target=worker).start()\n")),(0,a.kt)("h2",{id:"queue---a-synchronized-queue-class"},"Queue - A synchronized queue class"),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/queue.html#module-queue"},"queue")," module implements multi-producer, multi-consumer queues. It is especially useful in threaded programming when information must be exchanged safely between multiple threads. The ",(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/queue.html#queue.Queue"},"Queue")," class in this module implements all the required locking semantics."),(0,a.kt)("p",null,"The module implements three types of queue, which differ only in the order in which the entries are retrieved. In aFIFOqueue, the first tasks added are the first retrieved. In aLIFOqueue, the most recently added entry is the first retrieved (operating like a stack). With a priority queue, the entries are kept sorted (using the ",(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/heapq.html#module-heapq"},"heapq")," module) and the lowest valued entry is retrieved first."),(0,a.kt)("h2",{id:"priorityqueue"},"PriorityQueue"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"try:\nimport Queue as Q # ver. < 3.0\nexcept ImportError:\nimport queue as Q\n\nq = Q.PriorityQueue()\nq.put(10)\nq.put(1)\nq.put(5)\nwhile not q.empty():\nprint q.get(),\n\n1 5 10\n\nimport queue as Q\n\nq = Q.PriorityQueue()\n\nq.put(10)\n\nq.put(5)\n\nq.put(2)\n\nq.put(20)\n\nwhile not q.empty():\n\nprint(q.get())\n\n2\n\n5\n\n10\n\n20\n\n## Priority Queue can store objects such as tuples\n\ntry:\nimport Queue as Q # ver. < 3.0\nexcept ImportError:\nimport queue as Q\n\nq = Q.PriorityQueue()\nq.put((10,'ten'))\nq.put((1,'one'))\nq.put((5,'five'))\nwhile not q.empty():\nprint q.get(),\n\n(1, 'one') (5, 'five') (10, 'ten')\n\n# print a priority queue\n\nprint(q.queue)\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/queue.html"},"https://docs.python.org/3/library/queue.html")),(0,a.kt)("h2",{id:"python-parallel-processing"},"Python Parallel Processing"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.machinelearningplus.com/python/parallel-processing-python"},"https://www.machinelearningplus.com/python/parallel-processing-python")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://blog.floydhub.com/multiprocessing-vs-threading-in-python-what-every-data-scientist-needs-to-know"},"https://blog.floydhub.com/multiprocessing-vs-threading-in-python-what-every-data-scientist-needs-to-know")),(0,a.kt)("h2",{id:"ray"},"Ray"),(0,a.kt)("p",null,"A fast and simple framework for building and running distributed applications. Ray is packaged with RLlib, a scalable reinforcement learning library, and Tune, a scalable hyperparameter tuning library."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://ray.io"},"https://ray.io")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/ray-project/ray"},"https://github.com/ray-project/ray")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://towardsdatascience.com/10x-faster-parallel-python-without-python-multiprocessing-e5017c93cce1"},"https://towardsdatascience.com/10x-faster-parallel-python-without-python-multiprocessing-e5017c93cce1")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://towardsdatascience.com/modern-parallel-and-distributed-python-a-quick-tutorial-on-ray-99f8d70369b8"},"https://towardsdatascience.com/modern-parallel-and-distributed-python-a-quick-tutorial-on-ray-99f8d70369b8")),(0,a.kt)("h2",{id:"subprocess"},"Subprocess"),(0,a.kt)("h4",{id:"can-be-used-to-call-other-compiled-programs"},"Can be used to call other compiled programs"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"import subprocess\n\nsubprocess.call(['./helloscript.go'])\n")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"th"},"Bottleneck")),(0,a.kt)("th",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"th"},"Example")),(0,a.kt)("th",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"th"},"Optimize with")))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"IO"),(0,a.kt)("td",{parentName:"tr",align:null},"Network connection, file operation"),(0,a.kt)("td",{parentName:"tr",align:null},"Multithreading")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"CPU"),(0,a.kt)("td",{parentName:"tr",align:null},"Complex math problem, search"),(0,a.kt)("td",{parentName:"tr",align:null},"Multiprocessing")))),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://zacs.site/blog/linear-python.html"},"https://zacs.site/blog/linear-python.html")),(0,a.kt)("h2",{id:"sched"},"sched"),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/sched.html#module-sched"},"sched")," module defines a class which implements a general purpose event scheduler"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/sched.html"},"https://docs.python.org/3/library/sched.html")))}h.isMDXComponent=!0}}]);