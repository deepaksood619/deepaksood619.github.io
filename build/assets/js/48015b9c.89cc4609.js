"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[24919],{603905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var o=n(667294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(n),u=r,h=p["".concat(l,".").concat(u)]||p[u]||m[u]||a;return n?o.createElement(h,i(i({ref:t},d),{},{components:n})):o.createElement(h,i({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},76994:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var o=n(487462),r=(n(667294),n(603905));const a={},i="Intro",s={unversionedId:"devops/docker/intro",id:"devops/docker/intro",title:"Intro",description:"Docker is a tool for deploying isolated, or containerized, applications. Docker containers are similar to virtual machines in a sense, but much more lightweight both in size and resource consumption.",source:"@site/docs/devops/docker/intro.md",sourceDirName:"devops/docker",slug:"/devops/docker/intro",permalink:"/devops/docker/intro",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/devops/docker/intro.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Dockerfiles",permalink:"/devops/docker/dockerfiles"},next:{title:"Networking",permalink:"/devops/docker/networking"}},l={},c=[{value:"Core components",id:"core-components",level:2},{value:"Optimizations",id:"optimizations",level:2},{value:"Difference between docker and docker-compose",id:"difference-between-docker-and-docker-compose",level:2},{value:"Bind Mounts",id:"bind-mounts",level:2},{value:"Volumes",id:"volumes",level:2},{value:"Docker Containers vs Images",id:"docker-containers-vs-images",level:2},{value:"Images",id:"images",level:2},{value:"Docker-compose",id:"docker-compose",level:2},{value:"Docker Security",id:"docker-security",level:2}],d={toc:c},p="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(p,(0,o.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"intro"},"Intro"),(0,r.kt)("p",null,"Docker is a tool for deploying isolated, or containerized, applications. Docker containers are similar to virtual machines in a sense, but much more lightweight both in size and resource consumption."),(0,r.kt)("p",null,'"With Docker, developers can build any app in any language using any toolchain. "Dockerized" apps are completely portable and can run anywhere\' OS X and Windows laptops, QA servers running Ubuntu in the cloud, and production data center VMs running Red Hat.'),(0,r.kt)("h2",{id:"core-components"},"Core components"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Docker Engine (docker daemon)"),(0,r.kt)("li",{parentName:"ol"},"REST API"),(0,r.kt)("li",{parentName:"ol"},"Client (docker CLI)")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image",src:n(676565).Z,width:"492",height:"385"})),(0,r.kt)("h2",{id:"optimizations"},"Optimizations"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Fat image"),(0,r.kt)("li",{parentName:"ol"},"Alpine (base image)"),(0,r.kt)("li",{parentName:"ol"},"Layer caching"),(0,r.kt)("li",{parentName:"ol"},"Cached dependencies"),(0,r.kt)("li",{parentName:"ol"},"Multistage builds")),(0,r.kt)("h2",{id:"difference-between-docker-and-docker-compose"},"Difference between docker and docker-compose"),(0,r.kt)("p",null,"The docker cli is used when managing individual containers on a docker engine. It is the client command line to access the docker daemon api."),(0,r.kt)("p",null,'The docker-compose cli can be used to manage a multi-container application. It also moves many of the options you would enter on the docker run cli into the docker-compose.yml file for easier reuse. It works as a front end "script" on top of the same docker api used by docker, so you can do everything docker-compose does with docker commands and a lot of shell scripting.'),(0,r.kt)("h2",{id:"bind-mounts"},"Bind Mounts"),(0,r.kt)("p",null,"When you use a bind mount, a file or directory on thehost machineis mounted into a container. The file or directory is referenced by its full or relative path on the host machine. By contrast, when you use a volume, a new directory is created within Docker's storage directory on the host machine, and Docker manages that directory's contents."),(0,r.kt)("p",null,"The file or directory does not need to exist on the Docker host already. It is created on demand if it does not yet exist. Bind mounts are very performant, but they rely on the host machine's filesystem having a specific directory structure available. If you are developing new Docker applications, consider using ",(0,r.kt)("a",{parentName:"p",href:"https://docs.docker.com/storage/volumes/"},"named volumes")," instead."),(0,r.kt)("h2",{id:"volumes"},"Volumes"),(0,r.kt)("p",null,"Volumes are the preferred mechanism for persisting data generated by and used by Docker containers. While ",(0,r.kt)("a",{parentName:"p",href:"https://docs.docker.com/storage/bind-mounts/"},"bind mounts")," are dependent on the directory structure of the host machine, volumes are completely managed by Docker. Volumes have several advantages over bind mounts:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Volumes are easier to back up or migrate than bind mounts."),(0,r.kt)("li",{parentName:"ul"},"You can manage volumes using Docker CLI commands or the Docker API."),(0,r.kt)("li",{parentName:"ul"},"Volumes work on both Linux and Windows containers."),(0,r.kt)("li",{parentName:"ul"},"Volumes can be more safely shared among multiple containers."),(0,r.kt)("li",{parentName:"ul"},"Volume drivers let you store volumes on remote hosts or cloud providers, to encrypt the contents of volumes, or to add other functionality."),(0,r.kt)("li",{parentName:"ul"},"New volumes can have their content pre-populated by a container.")),(0,r.kt)("p",null,"In addition, volumes are often a better choice than persisting data in a container's writable layer, because a volume does not increase the size of the containers using it, and the volume's contents exist outside the lifecycle of a given container."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image",src:n(306287).Z,width:"502",height:"256"})),(0,r.kt)("h2",{id:"docker-containers-vs-images"},"Docker Containers vs Images"),(0,r.kt)("p",null,"An instance of an image is called a container. You have an image, which is a set of layers as you describe. If you start this image, you have a running container of this image. You can have many running containers of the same image."),(0,r.kt)("h2",{id:"images"},"Images"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Full official image"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"python:3.8.3\nnode:14.1.1\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"stretch/buster/jessie - debian releases")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"-slim - paired down version of the full image")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"-alpine - Alpine images are based on the Alpine Linux Project, which is an operating system that was built specifically for use inside of containers.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"-windowsservercore"))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://medium.com/swlh/alpine-slim-stretch-buster-jessie-bullseye-bookworm-what-are-the-differences-in-docker-62171ed4531d"},"https://medium.com/swlh/alpine-slim-stretch-buster-jessie-bullseye-bookworm-what-are-the-differences-in-docker-62171ed4531d")),(0,r.kt)("h2",{id:"docker-compose"},"Docker-compose"),(0,r.kt)("p",null,"Compose is a tool for defining and running multi-container Docker applications."),(0,r.kt)("p",null,"Adocker-compose.ymlfile is a YAML file that defines how Docker containers should behave in production."),(0,r.kt)("h2",{id:"docker-security"},"Docker Security"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Package everything that an application needs, all the dependencies, all the code, all the resources, within an image, that can run on any platform."),(0,r.kt)("li",{parentName:"ul"},"Running docker in read only mode, i.e. removing write access to the filesystems from containers",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Logs can be written to some other endpoint to a append only file, so adversary cannot change the history")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.toptal.com/docker/interview-questions"},"https://www.toptal.com/docker/interview-questions")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://codefresh.io/containers/docker-anti-patterns"},"https://codefresh.io/containers/docker-anti-patterns")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=ODXSPVZA4c8"},"Docker Image Pipelines and Patterns")))}m.isMDXComponent=!0},676565:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/DevOps-Docker-Intro-image1-4eaf027269fd5b4fb87b03aebcb4a925.jpg"},306287:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/DevOps-Docker-Intro-image2-f7bfbc862b96643091a9bcf8af0d9061.jpg"}}]);