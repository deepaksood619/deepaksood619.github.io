"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[21691],{603905:(t,e,n)=>{n.d(e,{Zo:()=>m,kt:()=>f});var r=n(667294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function c(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var p=r.createContext({}),l=function(t){var e=r.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):c(c({},e),t)),n},m=function(t){var e=l(t.components);return r.createElement(p.Provider,{value:e},t.children)},i="mdxType",k={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,p=t.parentName,m=s(t,["components","mdxType","originalType","parentName"]),i=l(n),u=a,f=i["".concat(p,".").concat(u)]||i[u]||k[u]||o;return n?r.createElement(f,c(c({ref:e},m),{},{components:n})):r.createElement(f,c({ref:e},m))}));function f(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,c=new Array(o);c[0]=u;var s={};for(var p in e)hasOwnProperty.call(e,p)&&(s[p]=e[p]);s.originalType=t,s[i]="string"==typeof t?t:a,c[1]=s;for(var l=2;l<o;l++)c[l]=n[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},375023:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>c,default:()=>k,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(487462),a=(n(667294),n(603905));const o={},c="kafka-rest proxy",s={unversionedId:"technologies/kafka/kafka-rest-proxy",id:"technologies/kafka/kafka-rest-proxy",title:"kafka-rest proxy",description:"curl -s -X GET",source:"@site/docs/technologies/kafka/kafka-rest-proxy.md",sourceDirName:"technologies/kafka",slug:"/technologies/kafka/kafka-rest-proxy",permalink:"/technologies/kafka/kafka-rest-proxy",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/technologies/kafka/kafka-rest-proxy.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"kafka-python",permalink:"/technologies/kafka/kafka-python"},next:{title:"Kafka schema-registry",permalink:"/technologies/kafka/kafka-schema-registry"}},p={},l=[{value:"Kafka-connect",id:"kafka-connect",level:2}],m={toc:l},i="wrapper";function k(t){let{components:e,...n}=t;return(0,a.kt)(i,(0,r.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"kafka-rest-proxy"},"kafka-rest proxy"),(0,a.kt)("p",null,"curl -s -X GET ",(0,a.kt)("a",{parentName:"p",href:"http://104.211.229.18:8082/topics"},"http://104.211.229.18:8082/topics")),(0,a.kt)("p",null,"curl -s -X GET ",(0,a.kt)("a",{parentName:"p",href:"http://104.211.229.18:8082/topics"},"http://104.211.229.18:8082/topics")),(0,a.kt)("h2",{id:"kafka-connect"},"Kafka-connect"),(0,a.kt)("p",null,"curl -s -X GET ",(0,a.kt)("a",{parentName:"p",href:"http://kafka-connect:8082/connectors"},"http://kafka-connect:8082/connectors")),(0,a.kt)("p",null,"curl -s -X GET ",(0,a.kt)("a",{parentName:"p",href:"http://kafka-connect:8082/connector-plugins"},"http://kafka-connect:8082/connector-plugins")),(0,a.kt)("p",null,'curl -s -X POST -H "Content-Type: application/json" --data \'{"name": "smap-mqtt-source-lenses", "config": {"connector.class": "com.datamountaineer.streamreactor.connect.mqtt.source.MqttSourceConnector", "tasks.max":"1", "connect.mqtt.hosts":"tcp://',(0,a.kt)("strong",{parentName:"p"},"104.211.220.105:1883"),'", "connect.mqtt.username":"example_mqtt_client", "connect.mqtt.password":"xitanez123", "connect.mqtt.service.quality":"1", "connect.mqtt.kcql":"',(0,a.kt)("strong",{parentName:"p"},"INSERT INTO smap_telemetry_data SELECT * FROM")," telemetry",(0,a.kt)("strong",{parentName:"p"},"/+/+ WITHCONVERTER=`"),"com.datamountaineer.streamreactor.connect.converters.source.BytesConverter",(0,a.kt)("strong",{parentName:"p"},"`"),"\"}}' ",(0,a.kt)("a",{parentName:"p",href:"http://localhost:8083/connectors"},"http://localhost:8083/connectors")),(0,a.kt)("p",null,'curl -s -X POST -H "Content-Type: application/json" --data \'{"name": "smap-mqtt-source-lenses-test", "config": {"connector.class": "com.datamountaineer.streamreactor.connect.mqtt.source.MqttSourceConnector", "tasks.max":"1", "connect.mqtt.hosts":"tcp://',(0,a.kt)("strong",{parentName:"p"},"104.211.220.105:1883"),'", "connect.mqtt.username":"example_mqtt_client", "connect.mqtt.password":"xitanez123", "connect.mqtt.service.quality":"1", "connect.mqtt.kcql":"',(0,a.kt)("strong",{parentName:"p"},"INSERT INTO smap_telemetry_data_test SELECT * FROM /"),"telemetry_test",(0,a.kt)("strong",{parentName:"p"},"/+/+ WITHCONVERTER=`"),"com.datamountaineer.streamreactor.connect.converters.source.BytesConverter",(0,a.kt)("strong",{parentName:"p"},"`"),"\"}}' ",(0,a.kt)("a",{parentName:"p",href:"http://localhost:8083/connectors"},"http://localhost:8083/connectors")),(0,a.kt)("p",null,'curl -s -X POST -H "Content-Type: application/json" --data \'{"name": "smap-mqtt-source-lenses-test", "config": {"connector.class": "com.datamountaineer.streamreactor.connect.mqtt.source.MqttSourceConnector", "tasks.max":"1", "connect.mqtt.hosts":"tcp://',(0,a.kt)("strong",{parentName:"p"},"104.211.220.105:1883"),'", "connect.mqtt.username":"example_mqtt_client", "connect.mqtt.password":"xitanez123", "connect.mqtt.service.quality":"1", "connect.mqtt.kcql":"',(0,a.kt)("strong",{parentName:"p"},"INSERT INTO smap_telemetry_data_test SELECT * FROM /"),"telemetry_test",(0,a.kt)("strong",{parentName:"p"},"/+/+ WITHCONVERTER=`"),"com.datamountaineer.streamreactor.connect.converters.source.",(0,a.kt)("strong",{parentName:"p"},"JsonSimpleConverter`"),"\"}}' ",(0,a.kt)("a",{parentName:"p",href:"http://localhost:8083/connectors"},"http://localhost:8083/connectors")),(0,a.kt)("p",null,"curl -s -X GET ",(0,a.kt)("a",{parentName:"p",href:"http://localhost:8083/connectors"},"http://localhost:8083/connectors")),(0,a.kt)("p",null,"curl -s -X GET ",(0,a.kt)("a",{parentName:"p",href:"http://kafka.example.com:8083/connectors"},"http://kafka.example.com:8083/connectors")),(0,a.kt)("p",null,"curl -X DELETE ",(0,a.kt)("a",{parentName:"p",href:"http://localhost:8083/connectors/smap-mqtt-source-lenses"},"http://localhost:8083/connectors/smap-mqtt-source-lenses")),(0,a.kt)("p",null,"curl -X DELETE ",(0,a.kt)("a",{parentName:"p",href:"http://localhost:8083/connectors/smap-mqtt-source-lenses-test"},"http://localhost:8083/connectors/smap-mqtt-source-lenses-test")))}k.isMDXComponent=!0}}]);