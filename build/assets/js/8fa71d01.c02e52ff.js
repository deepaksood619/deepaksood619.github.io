"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[69940],{603905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(667294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=l(r),d=s,f=p["".concat(c,".").concat(d)]||p[d]||m[d]||o;return r?n.createElement(f,a(a({ref:t},u),{},{components:r})):n.createElement(f,a({ref:t},u))}));function f(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=r.length,a=new Array(o);a[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:s,a[1]=i;for(var l=2;l<o;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},597668:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=r(487462),s=(r(667294),r(603905));const o={},a="Serverless Architecture",i={unversionedId:"computer-science/system-design/serverless-architecture",id:"computer-science/system-design/serverless-architecture",title:"Serverless Architecture",description:"Serverless computing simply means using existing, auto-scaling cloud services to achieve system behaviours. In other words, I don't manage any servers or docker containers. I don't set up networks or manage operation (ops). I merely provide the serverless solution my recipe and it handles creation of any needed assets and performs the required computational process.",source:"@site/docs/computer-science/system-design/serverless-architecture.md",sourceDirName:"computer-science/system-design",slug:"/computer-science/system-design/serverless-architecture",permalink:"/computer-science/system-design/serverless-architecture",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/computer-science/system-design/serverless-architecture.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Reactive Microservices / Manifesto",permalink:"/computer-science/system-design/reactive-microservices-manifesto"},next:{title:"Trade offs",permalink:"/computer-science/system-design/trade-offs"}},c={},l=[{value:"Stateless Services",id:"stateless-services",level:2},{value:"Durable Functions",id:"durable-functions",level:2},{value:"AWS SAM (Serverless Application Model)",id:"aws-sam-serverless-application-model",level:2},{value:"References",id:"references",level:2}],u={toc:l},p="wrapper";function m(e){let{components:t,...r}=e;return(0,s.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"serverless-architecture"},"Serverless Architecture"),(0,s.kt)("p",null,"Serverless computing simply means using existing, auto-scaling cloud services to achieve system behaviours. In other words, I don't manage any servers or docker containers. I don't set up networks or manage operation (ops). I merely provide the serverless solution my recipe and it handles creation of any needed assets and performs the required computational process."),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Containerisation - Gives a uniform development environment that is independent of the systems the code is running on.")),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Microservices architecture - Developers are able to quickly understand a certain module without going through the whole code base."),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"Also changing something on one part of the code doesn't effect the other parts of the product."),(0,s.kt)("li",{parentName:"ul"},"Apis are used to communicate between different modules"),(0,s.kt)("li",{parentName:"ul"},"Messaging Queue is used for inter-modules communication (AMQP, MQTT, etc.)"))),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Event Based Architecture"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"Events are triggered when some event happens"),(0,s.kt)("li",{parentName:"ul"},"Example - When a photo is uploaded automatically trigger the thumbnail creation function."),(0,s.kt)("li",{parentName:"ul"},"Functions subscribe to events, and based on that event react accordingly."))),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"AWS Lambda")),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"AWS CloudFunctions")),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"AWS CloudFormation (for provisioning)"))),(0,s.kt)("h2",{id:"stateless-services"},"Stateless Services"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Not a cache or a database"),(0,s.kt)("li",{parentName:"ul"},"Frequently accessed metadata"),(0,s.kt)("li",{parentName:"ul"},"No instance affinity"),(0,s.kt)("li",{parentName:"ul"},"Loss of a node is a non-event")),(0,s.kt)("h2",{id:"durable-functions"},"Durable Functions"),(0,s.kt)("p",null,"Durable Functionsis an extension of ",(0,s.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/azure-functions/functions-overview"},"Azure Functions")," that lets you write stateful functions in a serverless compute environment. The extension lets you define stateful workflows by writing ",(0,s.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/azure-functions/durable/durable-functions-orchestrations"},"orchestrator functions")," and stateful entities by writing ",(0,s.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/azure-functions/durable/durable-functions-entities"},"entity functions")," using the Azure Functions programming model. Behind the scenes, the extension manages state, checkpoints, and restarts for you, allowing you to focus on your business logic.\n",(0,s.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/azure-functions/durable/durable-functions-overview"},"https://docs.microsoft.com/en-us/azure/azure-functions/durable/durable-functions-overview")),(0,s.kt)("h2",{id:"aws-sam-serverless-application-model"},"AWS SAM (Serverless Application Model)"),(0,s.kt)("p",null,"The AWS Serverless Application Model (SAM) is an open-source AWS framework that allows developers to more efficiently build serverless applications. It includes SAM CLI options for local testing and integrates with various AWS serverless tools."),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://www.toptal.com/aws/typescript-jest-aws-sam-tutorial"},"https://www.toptal.com/aws/typescript-jest-aws-sam-tutorial")),(0,s.kt)("h2",{id:"references"},"References"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://cloudplatform.googleblog.com/2018/04/Cloud-native-architecture-with-serverless-microservices-the-Smart-Parking-story.html"},"https://cloudplatform.googleblog.com/2018/04/Cloud-native-architecture-with-serverless-microservices-the-Smart-Parking-story.html")),(0,s.kt)("p",null,"SE Radio - 320: Serverless Applications - Kishore Bhatia with Nate Taggart"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://www.freecodecamp.org/news/complete-back-end-system-with-serverless"},"https://www.freecodecamp.org/news/complete-back-end-system-with-serverless")))}m.isMDXComponent=!0}}]);