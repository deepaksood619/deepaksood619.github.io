"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[55579],{603905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(667294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),d=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=d(e.components);return r.createElement(c.Provider,{value:n},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=d(t),u=a,f=s["".concat(c,".").concat(u)]||s[u]||m[u]||o;return t?r.createElement(f,i(i({ref:n},p),{},{components:t})):r.createElement(f,i({ref:n},p))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=u;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[s]="string"==typeof e?e:a,i[1]=l;for(var d=2;d<o;d++)i[d]=t[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},53061:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var r=t(487462),a=(t(667294),t(603905));const o={},i="Mixin",l={unversionedId:"python/advanced/mixin",id:"python/advanced/mixin",title:"Mixin",description:"A mixin is a special kind of multiple inheritance. There are two main situations where mixins are used:",source:"@site/docs/python/advanced/mixin.md",sourceDirName:"python/advanced",slug:"/python/advanced/mixin",permalink:"/python/advanced/mixin",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/python/advanced/mixin.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Memory Management",permalink:"/python/advanced/memory-management"},next:{title:"Others",permalink:"/python/advanced/others"}},c={},d=[{value:"Example",id:"example",level:3}],p={toc:d},s="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(s,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"mixin"},"Mixin"),(0,a.kt)("p",null,"A mixin is a special kind of multiple inheritance. There are two main situations where mixins are used:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"You want to provide a lot of optional features for a class.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"You want to use one particular feature in a lot of different classes."))),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("p",null,"In this example the function clean_name will be added to the AggregatedWidgetCreationForm automatically and parent will be overridden if any"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class CleanNameMixin:\n\"\"\"\nMixin to add clean_name function to every Widget and Screen\n\"\"\"\n def clean_name(self):\n \"\"\"\n Only lowercase and underscore allowed\n \"\"\"\n name=self.cleaned_data['name']\n\n allowed_chars=frozenset(string.lowercase+'_')\n\n if not all(c in allowed_chars for c in name):\n  raise forms.ValidationError('Only lowercase and underscore allowed')\n\n return name\n\nclass AggregatedWidgetCreationForm(forms.ModelForm, CleanNameMixin):\n class Meta:\n model=AggregatedWidget\n fields=('name','display_name','customer')\n\n")))}m.isMDXComponent=!0}}]);