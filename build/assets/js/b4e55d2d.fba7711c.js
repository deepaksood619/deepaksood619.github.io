"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[16065],{603905:(a,e,t)=>{t.d(e,{Zo:()=>c,kt:()=>p});var s=t(667294);function n(a,e,t){return e in a?Object.defineProperty(a,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):a[e]=t,a}function r(a,e){var t=Object.keys(a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(a);e&&(s=s.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),t.push.apply(t,s)}return t}function i(a){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){n(a,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(t,e))}))}return a}function d(a,e){if(null==a)return{};var t,s,n=function(a,e){if(null==a)return{};var t,s,n={},r=Object.keys(a);for(s=0;s<r.length;s++)t=r[s],e.indexOf(t)>=0||(n[t]=a[t]);return n}(a,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(a);for(s=0;s<r.length;s++)t=r[s],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(a,t)&&(n[t]=a[t])}return n}var o=s.createContext({}),l=function(a){var e=s.useContext(o),t=e;return a&&(t="function"==typeof a?a(e):i(i({},e),a)),t},c=function(a){var e=l(a.components);return s.createElement(o.Provider,{value:e},a.children)},g="mdxType",u={inlineCode:"code",wrapper:function(a){var e=a.children;return s.createElement(s.Fragment,{},e)}},m=s.forwardRef((function(a,e){var t=a.components,n=a.mdxType,r=a.originalType,o=a.parentName,c=d(a,["components","mdxType","originalType","parentName"]),g=l(t),m=n,p=g["".concat(o,".").concat(m)]||g[m]||u[m]||r;return t?s.createElement(p,i(i({ref:e},c),{},{components:t})):s.createElement(p,i({ref:e},c))}));function p(a,e){var t=arguments,n=e&&e.mdxType;if("string"==typeof a||n){var r=t.length,i=new Array(r);i[0]=m;var d={};for(var o in e)hasOwnProperty.call(e,o)&&(d[o]=e[o]);d.originalType=a,d[g]="string"==typeof a?a:n,i[1]=d;for(var l=2;l<r;l++)i[l]=t[l];return s.createElement.apply(null,i)}return s.createElement.apply(null,t)}m.displayName="MDXCreateElement"},880985:(a,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>d,toc:()=>l});var s=t(487462),n=(t(667294),t(603905));const r={},i="CQL (Cassandra Query Language)",d={unversionedId:"databases/nosql-databases/cassandra/cql-cassandra-query-language",id:"databases/nosql-databases/cassandra/cql-cassandra-query-language",title:"CQL (Cassandra Query Language)",description:"CQL",source:"@site/docs/databases/nosql-databases/cassandra/cql-cassandra-query-language.md",sourceDirName:"databases/nosql-databases/cassandra",slug:"/databases/nosql-databases/cassandra/cql-cassandra-query-language",permalink:"/databases/nosql-databases/cassandra/cql-cassandra-query-language",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/databases/nosql-databases/cassandra/cql-cassandra-query-language.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Consistency",permalink:"/databases/nosql-databases/cassandra/consistency"},next:{title:"Data Model",permalink:"/databases/nosql-databases/cassandra/data-model"}},o={},l=[{value:"CQL",id:"cql",level:2},{value:"Commands",id:"commands",level:2}],c={toc:l},g="wrapper";function u(a){let{components:e,...r}=a;return(0,n.kt)(g,(0,s.Z)({},c,r,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"cql-cassandra-query-language"},"CQL (Cassandra Query Language)"),(0,n.kt)("h2",{id:"cql"},"CQL"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"CQL mapping to cassandra's internal data structure"),(0,n.kt)("li",{parentName:"ul"},"Use SQL like query language"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"CQL is a reintroduction of schema")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"CQL creates a common language")," so that details of the data model can be easily communicated"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"CQL is a best-practices Cassandra interface")," and hides the messy details"),(0,n.kt)("li",{parentName:"ul"},"CQL let's you take advantage of the C* Data structure"),(0,n.kt)("li",{parentName:"ul"},"CQL protocol is binary and therefore interoperable with any language"),(0,n.kt)("li",{parentName:"ul"},"CQL is asynchronous and fast (Thrift transport layer is synchronous)"),(0,n.kt)("li",{parentName:"ul"},"CQL allows the possibility for prepared statements")),(0,n.kt)("h2",{id:"commands"},"Commands"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"DESCRIBE KEYSPACES;\n\nDESCRIBE TABLES;\nCREATE KEYSPACE killrvideo WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1};\nUSE killrvideo;\nCREATE TABLE raw_data_by_day ( sensor text, day text, ts timeuuid, reading int, primary key((sensor, day), ts) ) WITH CLUSTERING ORDER BY (ts DESC) AND COMPACTION = {'class': 'TimeWindowCompactionStrategy', 'compaction_window_unit': 'DAYS', 'compaction_window_size': 1};\nCREATE TABLE stuff ( a int, b int, myset set<int>, mylist list<int>, mymap map<int, int>, PRIMARY KEY (a,b));\n\nCREATE TABLE videos ( video_id timeuuid, added_date timestamp, Title text, PRIMARY KEY (video_id));\n\nCREATE TABLE videos_by_tag ( tag text, video_id timeuuid, added_date timestamp, Title text, PRIMARY KEY (tag, video_id));\nCREATE TABLE videos_by_tag ( tag text, video_id timeuuid, added_date timestamp, Title text, PRIMARY KEY (tag, added_date, video_id)) WITH CLUSTERING ORDER BY(added_date ASC, video_id ASC);\nINSERT INTO killrvideo.videos(video_id, added_date, Title) VALUES (1645ea59-14bd-11e5-a993-8138354b7e31, '2014-01-29', 'Cassandra History');\nBEGIN BATCH\n\nINSERT into users(username,name,age) VALUES('raziz12','Rashid Aziz',34);\n\nINSERT INTO users_by_cities(username,name,city, age) VALUES ('raziz12','Rashid Aziz','Karachi',30);\n\nAPPLY BATCH;UPDATE stuff SET myset = {1,2}, mylist = [3,4,5], mymap = {6:7, 8:9} WHERE a = 0 AND b = 1;\nSELECT * FROM stuff; (in cassandra-cli)\n\nSELECT * FROM killrvideo.videos;\n\nSELECT count(*) FROM killrvideo.videos;\n\nSELECT * FROM videos_by_tag WHERE tag='cassandra';\n\nSELECT * FROM videos_by_tag WHERE tag = 'cassandra' AND title='Cassandra Intro';\n\nSELECT * FROM videos_by_tag WHERE tag='cassandra' ORDER BY added_date DESC;\nLIST stuff;\nSELECT key_aliases, column_aliases FROM system.schema_columnfamilies WHERE keyspace_name = 'test' AND columnfamily_name = 'stuff'; (in cqlsh)\nTRUNCATE videos;\n\nDROP TABLE videos_by_tag;\nCOPY videos(video_id, added_date, title) FROM '/Users/deepaksood/Downloads/ds201-6.0-labwork/labwork/data-files/videos.csv' WITH HEADER=TRUE;\nCOPY videos_by_tag (tag, video_id, added_date, title) FROM '/Users/deepaksood/Downloads/ds201-6.0-labwork/labwork/data-files/videos-by-tag.csv' WITH HEADER=TRUE;\nQUIT\n## DESCRIBE TABLE videos;\n\nSELECT token(video_id), video_id FROM videos;\n")),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"image",src:t(790952).Z,width:"1440",height:"1080"})),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"image",src:t(837754).Z,width:"1440",height:"1080"})),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"image",src:t(458840).Z,width:"1440",height:"1080"})),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"image",src:t(408053).Z,width:"1440",height:"1080"})),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"image",src:t(461229).Z,width:"1440",height:"1080"})),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"image",src:t(351136).Z,width:"1440",height:"1080"})),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"image",src:t(913548).Z,width:"1440",height:"1080"})),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"image",src:t(886617).Z,width:"1440",height:"1080"})),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"image",src:t(37239).Z,width:"1440",height:"1080"})),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"image",src:t(103492).Z,width:"1440",height:"1080"})),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"image",src:t(340711).Z,width:"1440",height:"1080"})))}u.isMDXComponent=!0},790952:(a,e,t)=>{t.d(e,{Z:()=>s});const s=t.p+"assets/images/Cassandra_CQL-(Cassandra-Query-Language)-image1-f2334e2fba9cd2450f2effb7f275920e.jpg"},37239:(a,e,t)=>{t.d(e,{Z:()=>s});const s=t.p+"assets/images/Cassandra_CQL-(Cassandra-Query-Language)-image10-8f528860399a66ad03f1a18b63bb8fa3.jpg"},103492:(a,e,t)=>{t.d(e,{Z:()=>s});const s=t.p+"assets/images/Cassandra_CQL-(Cassandra-Query-Language)-image11-004e69ef35d8d48e19cc0c137f40f252.jpg"},340711:(a,e,t)=>{t.d(e,{Z:()=>s});const s=t.p+"assets/images/Cassandra_CQL-(Cassandra-Query-Language)-image12-d368cd84a9a88e0356e66105d29e7d9e.jpg"},837754:(a,e,t)=>{t.d(e,{Z:()=>s});const s=t.p+"assets/images/Cassandra_CQL-(Cassandra-Query-Language)-image3-fea0fdd232f4458d60c8cb6efae20eaa.jpg"},458840:(a,e,t)=>{t.d(e,{Z:()=>s});const s=t.p+"assets/images/Cassandra_CQL-(Cassandra-Query-Language)-image4-c237ead9f7798f16f495c0c28c9edb39.jpg"},408053:(a,e,t)=>{t.d(e,{Z:()=>s});const s=t.p+"assets/images/Cassandra_CQL-(Cassandra-Query-Language)-image5-10e3247d80efef3725c27ad32f3d2b28.jpg"},461229:(a,e,t)=>{t.d(e,{Z:()=>s});const s=t.p+"assets/images/Cassandra_CQL-(Cassandra-Query-Language)-image6-f0c8bc84ece1df2a08701a878c44ecb7.jpg"},351136:(a,e,t)=>{t.d(e,{Z:()=>s});const s=t.p+"assets/images/Cassandra_CQL-(Cassandra-Query-Language)-image7-0959b92eaccd7766d976a4feed6bac2a.jpg"},913548:(a,e,t)=>{t.d(e,{Z:()=>s});const s=t.p+"assets/images/Cassandra_CQL-(Cassandra-Query-Language)-image8-70d7f17e2ecafa85849252fb5939bdcc.jpg"},886617:(a,e,t)=>{t.d(e,{Z:()=>s});const s=t.p+"assets/images/Cassandra_CQL-(Cassandra-Query-Language)-image9-b46c04593597bd3270fcb318fea35b1c.jpg"}}]);