"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[51085],{603905:(t,e,r)=>{r.d(e,{Zo:()=>l,kt:()=>m});var a=r(667294);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function u(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function o(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?u(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):u(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function c(t,e){if(null==t)return{};var r,a,n=function(t,e){if(null==t)return{};var r,a,n={},u=Object.keys(t);for(a=0;a<u.length;a++)r=u[a],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(t);for(a=0;a<u.length;a++)r=u[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var i=a.createContext({}),s=function(t){var e=a.useContext(i),r=e;return t&&(r="function"==typeof t?t(e):o(o({},e),t)),r},l=function(t){var e=s(t.components);return a.createElement(i.Provider,{value:e},t.children)},d="mdxType",p={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},f=a.forwardRef((function(t,e){var r=t.components,n=t.mdxType,u=t.originalType,i=t.parentName,l=c(t,["components","mdxType","originalType","parentName"]),d=s(r),f=n,m=d["".concat(i,".").concat(f)]||d[f]||p[f]||u;return r?a.createElement(m,o(o({ref:e},l),{},{components:r})):a.createElement(m,o({ref:e},l))}));function m(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var u=r.length,o=new Array(u);o[0]=f;var c={};for(var i in e)hasOwnProperty.call(e,i)&&(c[i]=e[i]);c.originalType=t,c[d]="string"==typeof t?t:n,o[1]=c;for(var s=2;s<u;s++)o[s]=r[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},809884:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>i,contentTitle:()=>o,default:()=>p,frontMatter:()=>u,metadata:()=>c,toc:()=>s});var a=r(487462),n=(r(667294),r(603905));const u={},o="Bag Data Structure",c={unversionedId:"data-structures/linear-data-structure/bag-data-structure",id:"data-structures/linear-data-structure/bag-data-structure",title:"Bag Data Structure",description:"Application - Adding items to a collection and iterating (When order doesn't matter)",source:"@site/docs/data-structures/linear-data-structure/bag-data-structure.md",sourceDirName:"data-structures/linear-data-structure",slug:"/data-structures/linear-data-structure/bag-data-structure",permalink:"/data-structures/linear-data-structure/bag-data-structure",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/data-structures/linear-data-structure/bag-data-structure.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Array",permalink:"/data-structures/linear-data-structure/array"},next:{title:"Circular Buffer",permalink:"/data-structures/linear-data-structure/circular-buffer"}},i={},s=[],l={toc:s},d="wrapper";function p(t){let{components:e,...r}=t;return(0,n.kt)(d,(0,a.Z)({},l,r,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"bag-data-structure"},"Bag Data Structure"),(0,n.kt)("p",null,"Application - Adding items to a collection and iterating (When order doesn't matter)\nImplementation - Stack (without pop) or queue (without dequeue)"))}p.isMDXComponent=!0}}]);