"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[26682],{603905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>h});var i=t(667294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=i.createContext({}),p=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=p(e.components);return i.createElement(s.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},k=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(t),k=a,h=c["".concat(s,".").concat(k)]||c[k]||d[k]||r;return t?i.createElement(h,l(l({ref:n},u),{},{components:t})):i.createElement(h,l({ref:n},u))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,l=new Array(r);l[0]=k;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[c]="string"==typeof e?e:a,l[1]=o;for(var p=2;p<r;p++)l[p]=t[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,t)}k.displayName="MDXCreateElement"},229590:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var i=t(487462),a=(t(667294),t(603905));const r={},l="Jenkins",o={unversionedId:"devops/others/jenkins",id:"devops/others/jenkins",title:"Jenkins",description:"What can you do with Jenkins?",source:"@site/docs/devops/others/jenkins.md",sourceDirName:"devops/others",slug:"/devops/others/jenkins",permalink:"/devops/others/jenkins",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/devops/others/jenkins.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"CoreSync, Pacemaker",permalink:"/devops/others/coresync-pacemaker"},next:{title:"KeyCloak",permalink:"/devops/others/keycloak"}},s={},p=[{value:"What can you do with Jenkins?",id:"what-can-you-do-with-jenkins",level:2},{value:"Types of Jenkins Projects",id:"types-of-jenkins-projects",level:2},{value:"Credential Scopes",id:"credential-scopes",level:2},{value:"Pipeline Syntax",id:"pipeline-syntax",level:2},{value:"Regex (Java Style)",id:"regex-java-style",level:2},{value:"Trigger changes",id:"trigger-changes",level:2},{value:"Pipelines",id:"pipelines",level:2},{value:"Declarative versus Scripted Pipeline syntax",id:"declarative-versus-scripted-pipeline-syntax",level:2},{value:"Why Pipeline?",id:"why-pipeline",level:2},{value:"Jenkinsfile",id:"jenkinsfile",level:2},{value:"Jenkins",id:"jenkins-1",level:2},{value:"Multibranch Pipeline",id:"multibranch-pipeline",level:2},{value:"Plugins",id:"plugins",level:2},{value:"Commands",id:"commands",level:2},{value:"Jenkins X",id:"jenkins-x",level:2},{value:"Jenkins Operator",id:"jenkins-operator",level:2},{value:"338: Jenkins 2 Build Server - Robert Bluemen with Brent Laster",id:"338-jenkins-2-build-server---robert-bluemen-with-brent-laster",level:2},{value:"Bind docker socket to container",id:"bind-docker-socket-to-container",level:2},{value:"Azure CI/CD with Jenkins",id:"azure-cicd-with-jenkins",level:2},{value:"Optimizations",id:"optimizations",level:2},{value:"Views",id:"views",level:2},{value:"Scripts",id:"scripts",level:2},{value:"Kill all jobs",id:"kill-all-jobs",level:3},{value:"Resources",id:"resources",level:2}],u={toc:p},c="wrapper";function d(e){let{components:n,...r}=e;return(0,a.kt)(c,(0,i.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"jenkins"},"Jenkins"),(0,a.kt)("h2",{id:"what-can-you-do-with-jenkins"},"What can you do with Jenkins?"),(0,a.kt)("p",null,"Jenkins is a continuous integration tool which enables software teams to build the integration pipelines for their projects. You can customize your Jenkins-powered pipelines to include different software development processes like building, testing, and staging as well as perform static analysis of your code."),(0,a.kt)("h2",{id:"types-of-jenkins-projects"},"Types of Jenkins Projects"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Freestyle",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Simple, single tasks"),(0,a.kt)("li",{parentName:"ul"},"e.g. run tests"))),(0,a.kt)("li",{parentName:"ul"},"Pipeline",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Whole delivery cycle"),(0,a.kt)("li",{parentName:"ul"},"e.g. test | build | ... for a single branch"))),(0,a.kt)("li",{parentName:"ul"},"Multibranch Pipeline",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"like pipeline for multiple branches")))),(0,a.kt)("h2",{id:"credential-scopes"},"Credential Scopes"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"System - Only available on Jenkins server NOT for Jenkins jobs"),(0,a.kt)("li",{parentName:"ul"},"Global - Everywhere accessible"),(0,a.kt)("li",{parentName:"ul"},"Project - Limited to project, ONLY with multibranch pipeline")),(0,a.kt)("h2",{id:"pipeline-syntax"},"Pipeline Syntax"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Scripted"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"First syntax"),(0,a.kt)("li",{parentName:"ul"},"Groovy engine"),(0,a.kt)("li",{parentName:"ul"},"Advanced scripting capabilities, high flexibility"),(0,a.kt)("li",{parentName:"ul"},"Difficult to start"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Declarative"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Recent addition"),(0,a.kt)("li",{parentName:"ul"},"Easier to get started but not that powerful"),(0,a.kt)("li",{parentName:"ul"},"pre-defined structure")))),(0,a.kt)("h2",{id:"regex-java-style"},"Regex (Java Style)"),(0,a.kt)("p",null,"^dev|master|feature.*$"),(0,a.kt)("h2",{id:"trigger-changes"},"Trigger changes"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Poll scm - poll every few minutes to ask for changes from remote repository"),(0,a.kt)("li",{parentName:"ul"},"Git Hooks - Send jenkins a notification of change"),(0,a.kt)("li",{parentName:"ul"},"Best practise is to configure both")),(0,a.kt)("h2",{id:"pipelines"},"Pipelines"),(0,a.kt)("p",null,'Jenkins Pipeline (or simply "Pipeline" with a capital "P") is a suite of plugins which supports implementing and integratingcontinuous delivery pipelinesinto Jenkins.'),(0,a.kt)("p",null,'Acontinuous delivery (CD) pipelineis an automated expression of your process for getting software from version control right through to your users and customers. Every change to your software (committed in source control) goes through a complex process on its way to being released. This process involves building the software in a reliable and repeatable manner, as well as progressing the built software (called a "build") through multiple stages of testing and deployment.'),(0,a.kt)("p",null,'Pipeline provides an extensible set of tools for modeling simple-to-complex delivery pipelines "as code" via the ',(0,a.kt)("a",{parentName:"p",href:"https://jenkins.io/doc/book/pipeline/syntax"},"Pipeline domain-specific language (DSL) syntax"),"."),(0,a.kt)("p",null,"The definition of a Jenkins Pipeline is written into a text file (called a ",(0,a.kt)("a",{parentName:"p",href:"https://jenkins.io/doc/book/pipeline/jenkinsfile"},"Jenkinsfile"),') which in turn can be committed to a project\'s source control repository.This is the foundation of "Pipeline-as-code"; treating the CD pipeline a part of the application to be versioned and reviewed like any other code.'),(0,a.kt)("p",null,"Creating aJenkinsfileand committing it to source control provides a number of immediate benefits:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Automatically creates a Pipeline build process for all branches and pull requests."),(0,a.kt)("li",{parentName:"ul"},"Code review/iteration on the Pipeline (along with the remaining source code)."),(0,a.kt)("li",{parentName:"ul"},"Audit trail for the Pipeline."),(0,a.kt)("li",{parentName:"ul"},"Single source of truthfor the Pipeline, which can be viewed and edited by multiple members of the project.")),(0,a.kt)("p",null,"While the syntax for defining a Pipeline, either in the web UI or with aJenkinsfileis the same, it is generally considered best practice to define the Pipeline in aJenkinsfileand check that in to source control."),(0,a.kt)("h2",{id:"declarative-versus-scripted-pipeline-syntax"},"Declarative versus Scripted Pipeline syntax"),(0,a.kt)("p",null,"AJenkinsfilecan be written using two types of syntax - Declarative and Scripted."),(0,a.kt)("p",null,"Declarative and Scripted Pipelines are constructed fundamentally differently. Declarative Pipeline is a more recent feature of Jenkins Pipeline which:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"provides richer syntactical features over Scripted Pipeline syntax, and"),(0,a.kt)("li",{parentName:"ul"},"is designed to make writing and reading Pipeline code easier.")),(0,a.kt)("p",null,'Many of the individual syntactical components (or "steps") written into aJenkinsfile, however, are common to both Declarative and Scripted Pipeline.'),(0,a.kt)("h2",{id:"why-pipeline"},"Why Pipeline?"),(0,a.kt)("p",null,"Jenkins is, fundamentally, an automation engine which supports a number of automation patterns. Pipeline adds a powerful set of automation tools onto Jenkins, supporting use cases that span from simple continuous integration to comprehensive CD pipelines. By modeling a series of related tasks, users can take advantage of the many features of Pipeline:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Code:")," Pipelines are implemented in code and typically checked into source control, giving teams the ability to edit, review, and iterate upon their delivery pipeline."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Durable:")," Pipelines can survive both planned and unplanned restarts of the Jenkins master."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Pausable:")," Pipelines can optionally stop and wait for human input or approval before continuing the Pipeline run."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Versatile:")," Pipelines support complex real-world CD requirements, including the ability to fork/join, loop, and perform work in parallel."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Extensible:")," The Pipeline plugin supports custom extensions to its DSL and multiple options for integration with other plugins.")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"image",src:t(548709).Z,width:"1322",height:"499"})),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://jenkins.io/doc/book/pipeline"},"https://jenkins.io/doc/book/pipeline")),(0,a.kt)("h2",{id:"jenkinsfile"},"Jenkinsfile"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'// Plugins requrired - Credentials, Credentials Binding\n\n// getGitChanges() is a groovy script that will set the boolean variable\nCODE_CHANGES = getGitChanges()\n\n// global variable\ndef gv\n\n// All environment variables in Jenkinsfile are available in the groovy script\n\npipeline {\n agent any\n tools {\n  maven \'Maven\'\n  // gradle\n  // jdk\n }\n parameters {\n  string(name: "VERSION", defaultValue: "", description: "version to deploy on prod")\n  choice(name: "VERSION", CHOICES: ["1.1.0", "1.2.0", "1.3.1"], description: "")\n  booleanParame(name: "executeTests", defaultValue: true, description: "")\n }\n environment {\n  NEW_VERSION = "1.3.0"\n  SERVER_CREDENTIALS = credentials("sever-credentials")\n }\n stages {\n  stage("init") {\n   steps {\n    script {\n\n    }\n   }\n  }\n  stage("Build") {\n   when {\n    expression {\n     BRANCH_NAME == "dev" && CODE_CHANGES == true\n    }\n   }\n   steps {\n    echo "Building.."\n    // use double quotes to use environment variables inside string\n    echo "Building version ${NEW_VERSION}"\n   }\n  }\n  stage("Test") {\n   when {\n    expression {\n     BRANCH_NAME == "dev" || BRANCH_NAME == "master"\n    }\n   }\n   steps {\n    echo "Testing.."\n   }\n  }\n  stage("Deploy") {\n   steps {\n    echo "Deploying...."\n    when {\n     expression {\n      params.executeTests == true\n     }\n    }\n    withCredentials([\n     // type of credentials is username password\n     // store usernameVariable in USER and passwordVariable in PASSWORD\n     usernamePassword(credentials: \'server-credentials\', usernameVariable: USER, passwordVariable: PASSWORD)\n    ]) {\n     sh "some script ${USERNAME} ${PASSWORD}"\n    }\n   }\n  }\n }\n post {\n  always {\n   junit "**/target/*.xml"\n  }\n  failure {\n   mail to: team@example.com, subject: "The Pipeline failed :("\n  }\n }\n}\n')),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=7KCS70sCoK0&list=PLy7NrYWoggjw_LIiDK1LXdNN82uYuuuiC&index=6&ab_channel=TechWorldwithNana"},"https://www.youtube.com/watch?v=7KCS70sCoK0&list=PLy7NrYWoggjw_LIiDK1LXdNN82uYuuuiC&index=6&ab_channel=TechWorldwithNana")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.jenkins.io/doc/book/pipeline/jenkinsfile"},"https://www.jenkins.io/doc/book/pipeline/jenkinsfile")),(0,a.kt)("h2",{id:"jenkins-1"},"Jenkins"),(0,a.kt)("p",null,"show all env variables in Jenkins\n",(0,a.kt)("a",{parentName:"p",href:"http://%3cjenkins_server_url:port%3e/env-vars.html/"},"http://jenkins_server_url:port/env-vars.html/")),(0,a.kt)("h2",{id:"multibranch-pipeline"},"Multibranch Pipeline"),(0,a.kt)("p",null,"The Multibranch Pipeline allows you to automatically create a pipeline for each branch on your repository with the help ofJenkinsfile."),(0,a.kt)("p",null,"Jenkinsfile is stored along with your source code inside a Source Code Management (SCM) eg. GitHub, BitBucket, etc."),(0,a.kt)("p",null,"A Jenkinsfile is nothing but a pipeline script that defines your CI/CD pipeline"),(0,a.kt)("h2",{id:"plugins"},"Plugins"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://jenkins.io/doc/pipeline/steps/slack"},"https://jenkins.io/doc/pipeline/steps/slack"),"\nfolder plugin\nCredentials\nCredentials Binding"),(0,a.kt)("h2",{id:"commands"},"Commands"),(0,a.kt)("p",null,"Clear build queue, Manage Jenkins > Script Console:\n",(0,a.kt)("inlineCode",{parentName:"p"},"Jenkins.instance.queue.clear()")),(0,a.kt)("h2",{id:"jenkins-x"},"Jenkins X"),(0,a.kt)("p",null,"Full CI/CD on kubernetes\n",(0,a.kt)("a",{parentName:"p",href:"https://kublr.com/blog/cicd-pipeline-with-jenkins-nexus-kubernetes"},"https://kublr.com/blog/cicd-pipeline-with-jenkins-nexus-kubernetes")),(0,a.kt)("h2",{id:"jenkins-operator"},"Jenkins Operator"),(0,a.kt)("p",null,"The Jenkins Operator is a ",(0,a.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/extend-kubernetes/operator/"},"Kubernetes Native Operator")," which manages operations for Jenkins on Kubernetes. It has been built with Immutability and declarative Configuration as Code in mind."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/jenkinsci/kubernetes-operator"},"https://github.com/jenkinsci/kubernetes-operator")),(0,a.kt)("h2",{id:"338-jenkins-2-build-server---robert-bluemen-with-brent-laster"},"338: Jenkins 2 Build Server - Robert Bluemen with Brent Laster"),(0,a.kt)("p",null,'Continuous integration and continuous delivery (CI/CD), the role of the build server in CI/CD, build pipelines, DevOps and the "pipeline as code" model, differences between Jenkins and Jenkins 2, the Jenkinsfile, scripted pipelines in a groovy DSL versus a declarative model, shared libraries of code, Jenkins2 as a workflow management system, scaling out Jenkins with a pool of compute resources, management of on-demand resources, integration of pipelines with Docker, the Jenkins plugin model, how Jenkins jobs are initiated (scheduled, event-driven, or UI), failure modes for pipelines, alerting people or other systems from Jenkins, management of credentials, users, roles and role-based authorization, and key drivers for adoption of Jenkins within an organization.'),(0,a.kt)("h2",{id:"bind-docker-socket-to-container"},"Bind docker socket to container"),(0,a.kt)("p",null,"docker run -v /var/run/docker.sock:/var/run/docker.sock ..."),(0,a.kt)("h2",{id:"azure-cicd-with-jenkins"},"Azure CI/CD with Jenkins"),(0,a.kt)("p",null,"docker tag azure-vote-front gcr.io/example-data-archiver/azure-vote-front:v1"),(0,a.kt)("p",null,"docker push gcr.io/example-data-archiver/azure-vote-front:v1"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/aks/jenkins-continuous-deployment"},"https://docs.microsoft.com/en-us/azure/aks/jenkins-continuous-deployment")),(0,a.kt)("h2",{id:"optimizations"},"Optimizations"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://engineering.taboola.com/5-simple-tips-boosting-jenkins-performance"},"https://engineering.taboola.com/5-simple-tips-boosting-jenkins-performance")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Minimize the amount of builds on the master node"),(0,a.kt)("li",{parentName:"ol"},"Do not keep too much build history - Discard old builds"),(0,a.kt)("li",{parentName:"ol"},"Clear old Jenkins data"),(0,a.kt)("li",{parentName:"ol"},"Define the right heap size"),(0,a.kt)("li",{parentName:"ol"},"Tune the garbage collector",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Enable G1GC -- this is the most modern GC implementation (default on JDK9)"),(0,a.kt)("li",{parentName:"ul"},"Enable GC logging -- this will help you monitor and tune later"),(0,a.kt)("li",{parentName:"ul"},"Monitor GC behavior -- I use ",(0,a.kt)("a",{parentName:"li",href:"http://gceasy.io"},"http://gceasy.io"))))),(0,a.kt)("h2",{id:"views"},"Views"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.jenkins.io/doc/developer/views/"},"Views")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example -")),(0,a.kt)("p",null," ",(0,a.kt)("img",{alt:"image",src:t(94350).Z,width:"2858",height:"1290"})),(0,a.kt)("h2",{id:"scripts"},"Scripts"),(0,a.kt)("h3",{id:"kill-all-jobs"},"Kill all jobs"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"import java.util.ArrayList\n  import hudson.model.*;\n  import jenkins.model.Jenkins\n\n  // Remove everything which is currently queued\n  def q = Jenkins.instance.queue\n  for (queued in Jenkins.instance.queue.items) {\n    q.cancel(queued.task)\n  }\n\n  // stop all the currently running jobs\n  for (job in Jenkins.instance.items) {\n    stopJobs(job)\n  }\n\n  def stopJobs(job) {\n    if (job in com.cloudbees.hudson.plugins.folder.Folder) {\n      for (child in job.items) {\n        stopJobs(child)\n      }\n    } else if (job in org.jenkinsci.plugins.workflow.multibranch.WorkflowMultiBranchProject) {\n      for (child in job.items) {\n        stopJobs(child)\n      }\n    } else if (job in org.jenkinsci.plugins.workflow.job.WorkflowJob) {\n\n      if (job.isBuilding()) {\n        for (build in job.builds) {\n        build.doKill()\n        }\n      }\n    }\n}\n")),(0,a.kt)("h2",{id:"resources"},"Resources"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://koudingspawn.de/the-complete-ci-cd-part-1"},"https://koudingspawn.de/the-complete-ci-cd-part-1")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.jenkins.io/projects/blueocean/"},(0,a.kt)("strong",{parentName:"a"},"https://www.jenkins.io/projects/blueocean/"))),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=eRWIJGF3Y2g"},"How to deploy Jenkins on Kubernetes for CI/CD (DevOps)")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=eqOCdNO2Nmk"},"https://www.youtube.com/watch?v=eqOCdNO2Nmk")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.infracloud.io/blogs/jenkins-freestyle-pipeline-migration"},"https://www.infracloud.io/blogs/jenkins-freestyle-pipeline-migration")))}d.isMDXComponent=!0},548709:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/DevOps-Others-Jenkins-image1-146f9840be567494fe44e72472b613dd.jpg"},94350:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/jenkins-views-7533483a3759fdc910719095905bea58.jpg"}}]);