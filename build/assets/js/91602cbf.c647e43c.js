"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[86892],{603905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>f});var r=t(667294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),m=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},l=function(e){var n=m(e.components);return r.createElement(c.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),d=m(t),u=o,f=d["".concat(c,".").concat(u)]||d[u]||p[u]||i;return t?r.createElement(f,s(s({ref:n},l),{},{components:t})):r.createElement(f,s({ref:n},l))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,s=new Array(i);s[0]=u;var a={};for(var c in n)hasOwnProperty.call(n,c)&&(a[c]=n[c]);a.originalType=e,a[d]="string"==typeof e?e:o,s[1]=a;for(var m=2;m<i;m++)s[m]=t[m];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},798432:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>m});var r=t(487462),o=(t(667294),t(603905));const i={},s="Commands",a={unversionedId:"technologies/brokers/vernemq/commands",id:"technologies/brokers/vernemq/commands",title:"Commands",description:"",source:"@site/docs/technologies/brokers/vernemq/commands.md",sourceDirName:"technologies/brokers/vernemq",slug:"/technologies/brokers/vernemq/commands",permalink:"/technologies/brokers/vernemq/commands",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/technologies/brokers/vernemq/commands.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"VerneMQ",permalink:"/technologies/brokers/vernemq/"},next:{title:"Volttron",permalink:"/technologies/brokers/volttron"}},c={},m=[],l={toc:m},d="wrapper";function p(e){let{components:n,...t}=e;return(0,o.kt)(d,(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"commands"},"Commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'vmq-admin\nUsage: vmq-admin <sub-command>\nAdministrate the cluster.\nSub-commands:\n    node        Manage this node\n    cluster     Manage this nodes cluster membership\n    session     Retrieve session information\n  show\n  disconnect\n  reauthorize\n    plugin      Manage plugin system\n    listener    Manage listener interfaces\n    metrics     Retrieve System Metrics\n    api-key     Manage API keys for the HTTP management interface\n    trace       Trace various aspects of VerneMQ\n  Use --help after a sub-command for more details.\n\nvmq-admin session show\n Usage: vmq-admin session show\n\n   Show and filter information about MQTT sessions\n\n Default options:\n   --client_id --is_online --mountpoint --peer_host --peer_port --user\n\n Options\n\n   --limit=<NumberOfResults>\n       Limit the number of results returned from each node in the cluster.\n       Defaults is 100.\n\n   --rowtimeout=<NumberOfMilliseconds>\n       Limits the time spent when fetching a single row.\n       Default is 100 milliseconds.\n   --node\n   --mountpoint\n   --client_id\n   --queue_pid\n   --queue_size\n   --session_pid\n   --is_offline\n   --is_online\n   --statename\n   --deliver_mode\n   --offline_messages\n   --online_messages\n   --num_sessions\n   --clean_session\n   --is_plugin\n   --queue_started_at\n   --user\n   --peer_host\n   --peer_port\n   --protocol\n   --waiting_acks\n   --session_started_at\n   --topic\n   --qos\n   --rap\n   --no_local\n   --msg_ref\n   --msg_qos\n   --routing_key\n   --dup\n   --payload\n\n Examples\n  vmq-admin session show --node --is_online --client_id=client1\n  vmq-admin session show --topic --client_id\n  vmq-admin session show --topic --client_id --topic=some/topic\n  vmq-admin session show --client_id=client1 --queue_started_at --session_started_at\n\n  vmq-admin session show --client_id --clean_session=false\n\n  vmq-admin session show --limit=1000   --client_id --is_online --mountpoint --peer_host --peer_port --user  --queue_size   --offline_messages  --qos\n\n# Commands\ndocker run -e "DOCKER_VERNEMQ_ALLOW_ANONYMOUS=on" -p 1883:1883 -p 8888:8888 --name vernemq -d erlio/docker-vernemq\n\nvmq-admin session disconnect client-id=client1 --cleanup\n\nvmq-admin listener show\n\nvmq-admin trace client client-id=<client-id>\nvmq-admin trace client client-id=/Samhi-01\n\nvmq-admin trace client client-id=/Samhi-42 | grep Samhi-42\n\nvmq-admin trace client client-id=/Samhi-42 | grep Samhi-42 >> trace.log 2>&1 &\n')))}p.isMDXComponent=!0}}]);