"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[50890],{603905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>y});var r=t(667294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(t),u=o,y=p["".concat(c,".").concat(u)]||p[u]||m[u]||a;return t?r.createElement(y,i(i({ref:n},d),{},{components:t})):r.createElement(y,i({ref:n},d))}));function y(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=u;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},944125:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=t(487462),o=(t(667294),t(603905));const a={},i="docker-compose example",s={unversionedId:"devops/docker/docker-compose-example",id:"devops/docker/docker-compose-example",title:"docker-compose example",description:"",source:"@site/docs/devops/docker/docker-compose-example.md",sourceDirName:"devops/docker",slug:"/devops/docker/docker-compose-example",permalink:"/devops/docker/docker-compose-example",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/devops/docker/docker-compose-example.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Docker Commands",permalink:"/devops/docker/docker-commands"},next:{title:"docker-compose",permalink:"/devops/docker/docker-compose"}},c={},l=[],d={toc:l},p="wrapper";function m(e){let{components:n,...t}=e;return(0,o.kt)(p,(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"docker-compose-example"},"docker-compose example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'version: "3.7"\nservices:\n zenalytix-build:\n  build:\n   context: .\n   dockerfile: Dockerfile\n   args:\n    GIT_USERNAME: ${GIT_USERNAME}\n    GIT_PASSWORD: ${GIT_PASSWORD}\n  image: gcr.io/zenatix-data-archiver/zenalytix:fc3c0ae06074\n\n zenalytix-dev:\n  stdin_open: true\n  tty: true\n  restart: always / "no" / on-failure / unless-stopped\n  image: gcr.io/zenatix-data-archiver/zenalytix:fc3c0ae06074\n  deploy:\n    replicas: 5\n    resources:\n    limits:\n   cpus: "0.1"\n   memory: 50M\n    restart_policy:\n    condition: on-failure\n  container_name: zenalytix-dev\n  labels:\n   app: decision_engine\n  env_file:\n    - .env\n    - Docker/env/${ZENALYTIX_ENV}.env\n  environment:\n    - DEBUG=True\n    - DJANGO_SETTINGS_MODULE=zenalytix.settings\n    - POSTGRES_PASSWORD=airflow\n    - POSTGRES_USER=postgres\n    - POSTGRES_DB=airflow\n  working_dir: /root/src/zenalytix\n  cap_add:\n    - ALL\n  cap_drop:\n    - SYS_ADMIN\n    - NET_ADMIN\n  args:\n    - buildno=1\n    - coordinator\n  entrypoint:\n    - /bin/bash\n    - -c\n    - |\n         # mkdir -p /dev/net && mknod /dev/net/tun c 10 200 && chmod 600 /dev/net/tun && openvpn --config Docker/OpenVPN/energy.ovpn &\n         python manage.py runserver 0.0.0.0:9104\n   sleep infinity\n  ports:\n    - 9104:9104\n  networks:\n    zenatix-docker:\n   ipv4_address: ${ZENALYTIX_IP}\n  volumes:\n    - post:/root/src/zenalytix\n  healthcheck:\n    test: "curl -f -s -o /dev/null -I http://${ZENALYTIX_IP}:9104/"\n    interval: 10s\n    timeout: 10s\n    retries: 5\n\n  logging:\n        driver: awslogs\n        options:\n          awslogs-group: devec2\n          awslogs-region: us-west-2\n\n  depends_on:\n    - "postgres-zenalytix"\n    - "redis-zenalytix"\n\n  redis:\n    stdin_open: true\n    tty: true\n    restart: "no"\n    image: bitnami/redis:6.0\n    container_name: redis\n    env_file:\n      - dev.env\n    ports:\n      - 6379:6379\n    healthcheck:\n      test: "redis-cli -h localhost -p 6379 ping"\n      interval: 10s\n      timeout: 10s\n      retries: 5\n    volumes:\n      - ./data/redis:/bitnami/redis/data\n    networks:\n      - localhost_net\n\n  redisinsight:\n    stdin_open: true\n    tty: true\n    restart: "no"\n    image: redislabs/redisinsight:latest\n    container_name: redisinsight\n    ports:\n      - 8001:8001\n      # - 6379:6379\n    volumes:\n      - ./data/redis:/bitnami/redis/data\n    networks:\n      - localhost_net\n\nnetworks:\n  zenatix-docker:\n    external:\n      name: zenatix-docker\n\n  airflow-docker:\n\nvolumes:\n  postgres-zenalytix-volume:\n    external: true\n\nmysql:\n   stdin_open: true\n   tty: true\n   restart: "no"\n   image: mysql:8\n    image: mysql:8.0.19\n   container_name: mysql\n   command: --default-authentication-plugin=mysql_native_password\n   environment:\n     - MYSQL_HOST=localhost\n     - MYSQL_PORT=3306\n     - MYSQL_ROOT_PASSWORD=mysql_root_password\n     - MYSQL_DATABASE=creditengine\n     - MYSQL_USER=creditengine\n     - MYSQL_PASSWORD=creditengine\n   ports:\n     - 3306:3306\n   volumes:\n    - ./data:/var/lib/mysql\n\nmysql:\n    stdin_open: true\n    tty: true\n    restart: "no"\n    image: mysql:5.7.29\n    container_name: mysql\n    environment:\n     - MYSQL_HOST=localhost\n     - MYSQL_PORT=3306\n     - MYSQL_ROOT_PASSWORD=mysql_root_password\n     - MYSQL_DATABASE=creditengine\n     - MYSQL_USER=creditengine\n     - MYSQL_PASSWORD=creditengine\n    ports:\n      - 3306:3306\n    volumes:\n      - ./data:/var/lib/mysql\n')))}m.isMDXComponent=!0}}]);