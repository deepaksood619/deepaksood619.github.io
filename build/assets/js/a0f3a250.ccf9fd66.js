"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[55349],{603905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>u});var i=r(667294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},a=Object.keys(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=i.createContext({}),m=function(e){var t=i.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=m(e.components);return i.createElement(l.Provider,{value:t},e.children)},s="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},g=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),s=m(r),g=n,u=s["".concat(l,".").concat(g)]||s[g]||h[g]||a;return r?i.createElement(u,o(o({ref:t},c),{},{components:r})):i.createElement(u,o({ref:t},c))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,o=new Array(a);o[0]=g;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[s]="string"==typeof e?e:n,o[1]=p;for(var m=2;m<a;m++)o[m]=r[m];return i.createElement.apply(null,o)}return i.createElement.apply(null,r)}g.displayName="MDXCreateElement"},851830:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>p,toc:()=>m});var i=r(487462),n=(r(667294),r(603905));const a={},o="Halting Problem",p={unversionedId:"algorithms/algorithmic-complexity/halting-problem",id:"algorithms/algorithmic-complexity/halting-problem",title:"Halting Problem",description:"In computability theory), the**halting problem** is the problem of determining, from a description of an arbitrary computer program and an input, whether the program will finish running (i.e., halt) or continue to run forever.",source:"@site/docs/algorithms/algorithmic-complexity/halting-problem.md",sourceDirName:"algorithms/algorithmic-complexity",slug:"/algorithms/algorithmic-complexity/halting-problem",permalink:"/algorithms/algorithmic-complexity/halting-problem",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/algorithms/algorithmic-complexity/halting-problem.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Finite-State Machine",permalink:"/algorithms/algorithmic-complexity/finite-state-machine"},next:{title:"NP Hardness",permalink:"/algorithms/algorithmic-complexity/np-hardness"}},l={},m=[{value:"References",id:"references",level:2}],c={toc:m},s="wrapper";function h(e){let{components:t,...r}=e;return(0,n.kt)(s,(0,i.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"halting-problem"},"Halting Problem"),(0,n.kt)("p",null,"In ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Computability_theory_(computer_science)"},"computability theory"),", the",(0,n.kt)("strong",{parentName:"p"},"halting problem")," is the problem of determining, from a description of an arbitrary ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Computer_program"},"computer program")," and an input, whether the program will finish running (i.e., halt) or continue to run forever."),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Alan_Turing"},"Alan Turing")," proved in 1936 that a general ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Algorithm"},"algorithm")," to solve the halting problem for ",(0,n.kt)("em",{parentName:"p"},"all"),"possible program-input pairs cannot exist. A key part of the proof was a mathematical definition of a computer and program, which became known as a ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Turing_machine"},"Turing machine"),"; the halting problem is ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Undecidable_problem"},(0,n.kt)("em",{parentName:"a"},"undecidable"))," over Turing machines. It is one of the first examples of a ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Decision_problem"},"decision problem"),"."),(0,n.kt)("p",null,"Informally, for any program ",(0,n.kt)("em",{parentName:"p"},"f"),' that might determine if programs halt, a "pathological" program ',(0,n.kt)("em",{parentName:"p"},"g")," called with an input can pass its own source and its input to ",(0,n.kt)("em",{parentName:"p"},"f")," and then specifically do the opposite of what ",(0,n.kt)("em",{parentName:"p"},"f")," predicts ",(0,n.kt)("em",{parentName:"p"},"g")," will do. No ",(0,n.kt)("em",{parentName:"p"},"f")," can exist that handles this case."),(0,n.kt)("h2",{id:"references"},"References"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Halting_problem"},"https://en.wikipedia.org/wiki/Halting_problem")))}h.isMDXComponent=!0}}]);