"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[98998],{603905:(t,e,a)=>{a.d(e,{Zo:()=>u,kt:()=>y});var n=a(667294);function l(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function r(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){l(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,l=function(t,e){if(null==t)return{};var a,n,l={},i=Object.keys(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||(l[a]=t[a]);return l}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(l[a]=t[a])}return l}var p=n.createContext({}),s=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):r(r({},e),t)),a},u=function(t){var e=s(t.components);return n.createElement(p.Provider,{value:e},t.children)},m="mdxType",c={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},k=n.forwardRef((function(t,e){var a=t.components,l=t.mdxType,i=t.originalType,p=t.parentName,u=o(t,["components","mdxType","originalType","parentName"]),m=s(a),k=l,y=m["".concat(p,".").concat(k)]||m[k]||c[k]||i;return a?n.createElement(y,r(r({ref:e},u),{},{components:a})):n.createElement(y,r({ref:e},u))}));function y(t,e){var a=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var i=a.length,r=new Array(i);r[0]=k;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o[m]="string"==typeof t?t:l,r[1]=o;for(var s=2;s<i;s++)r[s]=a[s];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},994523:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var n=a(487462),l=(a(667294),a(603905));const i={},r="27. Development Tools",o={unversionedId:"python/documentation/27-development-tools/readme",id:"python/documentation/27-development-tools/readme",title:"27. Development Tools",description:"27.1. typing - Support for type hints",source:"@site/docs/python/documentation/27-development-tools/readme.md",sourceDirName:"python/documentation/27-development-tools",slug:"/python/documentation/27-development-tools/",permalink:"/python/documentation/27-development-tools/",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/python/documentation/27-development-tools/readme.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"22. Internet Protocols and Support",permalink:"/python/documentation/22-internet-protocols-and-support"},next:{title:"Static Code Analysis",permalink:"/python/documentation/27-development-tools/static-code-analysis"}},p={},s=[{value:"27.1. typing - Support for type hints",id:"271-typing---support-for-type-hints",level:2},{value:"27.3. doctest - Test interactive Python examples",id:"273-doctest---test-interactive-python-examples",level:2},{value:"typing",id:"typing",level:2},{value:"PEP 484 - Type Hints",id:"pep-484---type-hints",level:2},{value:"PEP 526 - Syntax for Variable Annotations (Python 3.6)",id:"pep-526---syntax-for-variable-annotations-python-36",level:2}],u={toc:s},m="wrapper";function c(t){let{components:e,...a}=t;return(0,l.kt)(m,(0,n.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"27-development-tools"},"27. Development Tools"),(0,l.kt)("h2",{id:"271-typing---support-for-type-hints"},"27.1. typing - Support for type hints"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"27.1.1. Type aliases"),(0,l.kt)("li",{parentName:"ul"},"27.1.2. NewType"),(0,l.kt)("li",{parentName:"ul"},"27.1.3. Callable"),(0,l.kt)("li",{parentName:"ul"},"27.1.4. Generics"),(0,l.kt)("li",{parentName:"ul"},"27.1.5. User-defined generic types"),(0,l.kt)("li",{parentName:"ul"},"27.1.6. The Any type"),(0,l.kt)("li",{parentName:"ul"},"27.1.7. Classes, functions, and decorators"),(0,l.kt)("li",{parentName:"ul"},"27.2. pydoc - Documentation generator and online help system")),(0,l.kt)("h2",{id:"273-doctest---test-interactive-python-examples"},"27.3. doctest - Test interactive Python examples"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"27.3.1. Simple Usage: Checking Examples in Docstrings"),(0,l.kt)("li",{parentName:"ul"},"27.3.2. Simple Usage: Checking Examples in a Text File"),(0,l.kt)("li",{parentName:"ul"},"27.3.3. How It Works"),(0,l.kt)("li",{parentName:"ul"},"27.3.3.1. Which Docstrings Are Examined?"),(0,l.kt)("li",{parentName:"ul"},"27.3.3.2. How are Docstring Examples Recognized?"),(0,l.kt)("li",{parentName:"ul"},"27.3.3.3. What's the Execution Context?"),(0,l.kt)("li",{parentName:"ul"},"27.3.3.4. What About Exceptions?"),(0,l.kt)("li",{parentName:"ul"},"27.3.3.5. Option Flags"),(0,l.kt)("li",{parentName:"ul"},"27.3.3.6. Directives"),(0,l.kt)("li",{parentName:"ul"},"27.3.3.7. Warnings"),(0,l.kt)("li",{parentName:"ul"},"27.3.4. Basic API"),(0,l.kt)("li",{parentName:"ul"},"27.3.5. Unittest API"),(0,l.kt)("li",{parentName:"ul"},"27.3.6. Advanced API"),(0,l.kt)("li",{parentName:"ul"},"27.3.6.1. DocTest Objects"),(0,l.kt)("li",{parentName:"ul"},"27.3.6.2. Example Objects"),(0,l.kt)("li",{parentName:"ul"},"27.3.6.3. DocTestFinder objects"),(0,l.kt)("li",{parentName:"ul"},"27.3.6.4. DocTestParser objects"),(0,l.kt)("li",{parentName:"ul"},"27.3.6.5. DocTestRunner objects"),(0,l.kt)("li",{parentName:"ul"},"27.3.6.6. OutputChecker objects"),(0,l.kt)("li",{parentName:"ul"},"27.3.7. Debugging"),(0,l.kt)("li",{parentName:"ul"},"27.3.8. Soapbox"),(0,l.kt)("li",{parentName:"ul"},"27.4. unittest - Unit testing framework"),(0,l.kt)("li",{parentName:"ul"},"27.4.1. Basic example"),(0,l.kt)("li",{parentName:"ul"},"27.4.2. Command-Line Interface"),(0,l.kt)("li",{parentName:"ul"},"27.4.2.1. Command-line options"),(0,l.kt)("li",{parentName:"ul"},"27.4.3. Test Discovery"),(0,l.kt)("li",{parentName:"ul"},"27.4.4. Organizing test code"),(0,l.kt)("li",{parentName:"ul"},"27.4.5. Re-using old test code"),(0,l.kt)("li",{parentName:"ul"},"27.4.6. Skipping tests and expected failures"),(0,l.kt)("li",{parentName:"ul"},"27.4.7. Distinguishing test iterations using subtests"),(0,l.kt)("li",{parentName:"ul"},"27.4.8. Classes and functions"),(0,l.kt)("li",{parentName:"ul"},"27.4.8.1. Test cases"),(0,l.kt)("li",{parentName:"ul"},"27.4.8.1.1. Deprecated aliases"),(0,l.kt)("li",{parentName:"ul"},"27.4.8.2. Grouping tests"),(0,l.kt)("li",{parentName:"ul"},"27.4.8.3. Loading and running tests"),(0,l.kt)("li",{parentName:"ul"},"27.4.8.3.1. load_tests Protocol"),(0,l.kt)("li",{parentName:"ul"},"27.4.9. Class and Module Fixtures"),(0,l.kt)("li",{parentName:"ul"},"27.4.9.1. setUpClass and tearDownClass"),(0,l.kt)("li",{parentName:"ul"},"27.4.9.2. setUpModule and tearDownModule"),(0,l.kt)("li",{parentName:"ul"},"27.4.10. Signal Handling"),(0,l.kt)("li",{parentName:"ul"},"27.5. unittest.mock - mock object library"),(0,l.kt)("li",{parentName:"ul"},"27.5.1. Quick Guide"),(0,l.kt)("li",{parentName:"ul"},"27.5.2. The Mock Class"),(0,l.kt)("li",{parentName:"ul"},"27.5.2.1. Calling"),(0,l.kt)("li",{parentName:"ul"},"27.5.2.2. Deleting Attributes"),(0,l.kt)("li",{parentName:"ul"},"27.5.2.3. Mock names and the name attribute"),(0,l.kt)("li",{parentName:"ul"},"27.5.2.4. Attaching Mocks as Attributes"),(0,l.kt)("li",{parentName:"ul"},"27.5.3. The patchers"),(0,l.kt)("li",{parentName:"ul"},"27.5.3.1. patch"),(0,l.kt)("li",{parentName:"ul"},"27.5.3.2. patch.object"),(0,l.kt)("li",{parentName:"ul"},"27.5.3.3. patch.dict"),(0,l.kt)("li",{parentName:"ul"},"27.5.3.4. patch.multiple"),(0,l.kt)("li",{parentName:"ul"},"27.5.3.5. patch methods: start and stop"),(0,l.kt)("li",{parentName:"ul"},"27.5.3.6. patch builtins"),(0,l.kt)("li",{parentName:"ul"},"27.5.3.7. TEST_PREFIX"),(0,l.kt)("li",{parentName:"ul"},"27.5.3.8. Nesting Patch Decorators"),(0,l.kt)("li",{parentName:"ul"},"27.5.3.9. Where to patch"),(0,l.kt)("li",{parentName:"ul"},"27.5.3.10. Patching Descriptors and Proxy Objects"),(0,l.kt)("li",{parentName:"ul"},"27.5.4. MagicMock and magic method support"),(0,l.kt)("li",{parentName:"ul"},"27.5.4.1. Mocking Magic Methods"),(0,l.kt)("li",{parentName:"ul"},"27.5.4.2. Magic Mock"),(0,l.kt)("li",{parentName:"ul"},"27.5.5. Helpers"),(0,l.kt)("li",{parentName:"ul"},"27.5.5.1. sentinel"),(0,l.kt)("li",{parentName:"ul"},"27.5.5.2. DEFAULT"),(0,l.kt)("li",{parentName:"ul"},"27.5.5.3. call"),(0,l.kt)("li",{parentName:"ul"},"27.5.5.4. create_autospec"),(0,l.kt)("li",{parentName:"ul"},"27.5.5.5. ANY"),(0,l.kt)("li",{parentName:"ul"},"27.5.5.6. FILTER_DIR"),(0,l.kt)("li",{parentName:"ul"},"27.5.5.7. mock_open"),(0,l.kt)("li",{parentName:"ul"},"27.5.5.8. Autospeccing"),(0,l.kt)("li",{parentName:"ul"},"27.5.5.9. Sealing mocks"),(0,l.kt)("li",{parentName:"ul"},"27.6. unittest.mock - getting started"),(0,l.kt)("li",{parentName:"ul"},"27.6.1. Using Mock"),(0,l.kt)("li",{parentName:"ul"},"27.6.1.1. Mock Patching Methods"),(0,l.kt)("li",{parentName:"ul"},"27.6.1.2. Mock for Method Calls on an Object"),(0,l.kt)("li",{parentName:"ul"},"27.6.1.3. Mocking Classes"),(0,l.kt)("li",{parentName:"ul"},"27.6.1.4. Naming your mocks"),(0,l.kt)("li",{parentName:"ul"},"27.6.1.5. Tracking all Calls"),(0,l.kt)("li",{parentName:"ul"},"27.6.1.6. Setting Return Values and Attributes"),(0,l.kt)("li",{parentName:"ul"},"27.6.1.7. Raising exceptions with mocks"),(0,l.kt)("li",{parentName:"ul"},"27.6.1.8. Side effect functions and iterables"),(0,l.kt)("li",{parentName:"ul"},"27.6.1.9. Creating a Mock from an Existing Object"),(0,l.kt)("li",{parentName:"ul"},"27.6.2. Patch Decorators"),(0,l.kt)("li",{parentName:"ul"},"27.6.3. Further Examples"),(0,l.kt)("li",{parentName:"ul"},"27.6.3.1. Mocking chained calls"),(0,l.kt)("li",{parentName:"ul"},"27.6.3.2. Partial mocking"),(0,l.kt)("li",{parentName:"ul"},"27.6.3.3. Mocking a Generator Method"),(0,l.kt)("li",{parentName:"ul"},"27.6.3.4. Applying the same patch to every test method"),(0,l.kt)("li",{parentName:"ul"},"27.6.3.5. Mocking Unbound Methods"),(0,l.kt)("li",{parentName:"ul"},"27.6.3.6. Checking multiple calls with mock"),(0,l.kt)("li",{parentName:"ul"},"27.6.3.7. Coping with mutable arguments"),(0,l.kt)("li",{parentName:"ul"},"27.6.3.8. Nesting Patches"),(0,l.kt)("li",{parentName:"ul"},"27.6.3.9. Mocking a dictionary with MagicMock"),(0,l.kt)("li",{parentName:"ul"},"27.6.3.10. Mock subclasses and their attributes"),(0,l.kt)("li",{parentName:"ul"},"27.6.3.11. Mocking imports with patch.dict"),(0,l.kt)("li",{parentName:"ul"},"27.6.3.12. Tracking order of calls and less verbose call assertions"),(0,l.kt)("li",{parentName:"ul"},"27.6.3.13. More complex argument matching"),(0,l.kt)("li",{parentName:"ul"},"27.7. 2to3 - Automated Python 2 to 3 code translation"),(0,l.kt)("li",{parentName:"ul"},"27.7.1. Using 2to3"),(0,l.kt)("li",{parentName:"ul"},"27.7.2. Fixers"),(0,l.kt)("li",{parentName:"ul"},"27.7.3. lib2to3 - 2to3's library"),(0,l.kt)("li",{parentName:"ul"},"27.8. test - Regression tests package for Python"),(0,l.kt)("li",{parentName:"ul"},"27.8.1. Writing Unit Tests for the test package"),(0,l.kt)("li",{parentName:"ul"},"27.8.2. Running tests using the command-line interface"),(0,l.kt)("li",{parentName:"ul"},"27.9. test.support - Utilities for the Python test suite"),(0,l.kt)("li",{parentName:"ul"},"27.10. test.support.script_helper - Utilities for the Python execution tests")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/development.html"},"https://docs.python.org/3/library/development.html")),(0,l.kt)("h2",{id:"typing"},"typing"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/samuelcolvin/pydantic"},"https://github.com/samuelcolvin/pydantic")),(0,l.kt)("p",null,"Data validation and settings management using Python type hinting."),(0,l.kt)("p",null,"pydanticenforces type hints at runtime, and provides user friendly errors when data is invalid."),(0,l.kt)("p",null,"Define how data should be in pure, canonical python; validate it withpydantic."),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=Vj-iU-8_xLs"},"https://www.youtube.com/watch?v=Vj-iU-8_xLs")),(0,l.kt)("h2",{id:"pep-484---type-hints"},"PEP 484 - Type Hints"),(0,l.kt)("h2",{id:"pep-526---syntax-for-variable-annotations-python-36"},"PEP 526 - Syntax for Variable Annotations (Python 3.6)"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.toptal.com/python/streamline-your-django-settings-with-type-hints-pydantic-tutorial"},"https://www.toptal.com/python/streamline-your-django-settings-with-type-hints-pydantic-tutorial")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=ST33zDM9vOE"},"https://www.youtube.com/watch?v=ST33zDM9vOE")),(0,l.kt)("p",null,"Is Python dynamically or statically typed?"),(0,l.kt)("p",null,"Dynamically typed... but can optionally be statically typed as you want it to be."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Types in Python")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import types\n\ndir(types)\n\ntype(...)\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type systems in general"),(0,l.kt)("li",{parentName:"ul"},"Dynamic typing in Python")),(0,l.kt)("p",null,"Dynamic typing - Arguments and return values of functions can be any type"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Static typing in Python"),(0,l.kt)("li",{parentName:"ul"},"How to use static typing"),(0,l.kt)("li",{parentName:"ul"},"When you should use static typing"),(0,l.kt)("li",{parentName:"ul"},"When you shouldn't use static typing"),(0,l.kt)("li",{parentName:"ul"},"Migrating",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Migrate to Python >= 3.6"),(0,l.kt)("li",{parentName:"ul"},"Install a typechecker locally"),(0,l.kt)("li",{parentName:"ul"},"Start optionally typing your codebase"),(0,l.kt)("li",{parentName:"ul"},"Run a typechecker with your linting"),(0,l.kt)("li",{parentName:"ul"},"Convince all your coworkers to join you")))),(0,l.kt)("p",null,"Type Checkers"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Static",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"mypy (Dropbox)"),(0,l.kt)("li",{parentName:"ul"},"pytype (Google)"),(0,l.kt)("li",{parentName:"ul"},"pyre (Facebook)"),(0,l.kt)("li",{parentName:"ul"},"pyright (Microsoft)"))),(0,l.kt)("li",{parentName:"ul"},"Dynamic",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"enforce, typeguard, typo, ducktype, strictconf, etc")))))}c.isMDXComponent=!0}}]);