"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[39154],{603905:(t,e,a)=>{a.d(e,{Zo:()=>s,kt:()=>N});var r=a(667294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function p(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},l=Object.keys(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var o=r.createContext({}),d=function(t){var e=r.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},s=function(t){var e=d(t.components);return r.createElement(o.Provider,{value:e},t.children)},m="mdxType",k={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,l=t.originalType,o=t.parentName,s=p(t,["components","mdxType","originalType","parentName"]),m=d(a),u=n,N=m["".concat(o,".").concat(u)]||m[u]||k[u]||l;return a?r.createElement(N,i(i({ref:e},s),{},{components:a})):r.createElement(N,i({ref:e},s))}));function N(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var l=a.length,i=new Array(l);i[0]=u;var p={};for(var o in e)hasOwnProperty.call(e,o)&&(p[o]=e[o]);p.originalType=t,p[m]="string"==typeof t?t:n,i[1]=p;for(var d=2;d<l;d++)i[d]=a[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},288945:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>o,contentTitle:()=>i,default:()=>k,frontMatter:()=>l,metadata:()=>p,toc:()=>d});var r=a(487462),n=(a(667294),a(603905));const l={},i="Operators / Wildcards",p={unversionedId:"languages/sql/operators-wildcards",id:"languages/sql/operators-wildcards",title:"Operators / Wildcards",description:"SQL Arithmetic Operators",source:"@site/docs/languages/sql/operators-wildcards.md",sourceDirName:"languages/sql",slug:"/languages/sql/operators-wildcards",permalink:"/languages/sql/operators-wildcards",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/languages/sql/operators-wildcards.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Keys",permalink:"/languages/sql/keys"},next:{title:"Others",permalink:"/languages/sql/others"}},o={},d=[{value:"SQL Arithmetic Operators",id:"sql-arithmetic-operators",level:2},{value:"SQL Bitwise Operators",id:"sql-bitwise-operators",level:2},{value:"SQL Comparison Operators",id:"sql-comparison-operators",level:2},{value:"SQL Compound Operators",id:"sql-compound-operators",level:2},{value:"SQL Logical Operators",id:"sql-logical-operators",level:2},{value:"Wildcard Characters in MS Access",id:"wildcard-characters-in-ms-access",level:2},{value:"Wildcard Characters in SQL Server",id:"wildcard-characters-in-sql-server",level:2}],s={toc:d},m="wrapper";function k(t){let{components:e,...a}=t;return(0,n.kt)(m,(0,r.Z)({},s,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"operators--wildcards"},"Operators / Wildcards"),(0,n.kt)("h2",{id:"sql-arithmetic-operators"},"SQL Arithmetic Operators"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"Operator")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"Description")))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"+"),(0,n.kt)("td",{parentName:"tr",align:null},"Add")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"-"),(0,n.kt)("td",{parentName:"tr",align:null},"Subtract")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"*"),(0,n.kt)("td",{parentName:"tr",align:null},"Multiply")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"/"),(0,n.kt)("td",{parentName:"tr",align:null},"Divide")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"%"),(0,n.kt)("td",{parentName:"tr",align:null},"Modulo")))),(0,n.kt)("h2",{id:"sql-bitwise-operators"},"SQL Bitwise Operators"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"Operator")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"Description")))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"&")),(0,n.kt)("td",{parentName:"tr",align:null},"Bitwise AND")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"\\|")),(0,n.kt)("td",{parentName:"tr",align:null},"Bitwise OR")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"^")),(0,n.kt)("td",{parentName:"tr",align:null},"Bitwise exclusive OR")))),(0,n.kt)("h2",{id:"sql-comparison-operators"},"SQL Comparison Operators"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"Operator")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"Description")))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"=")),(0,n.kt)("td",{parentName:"tr",align:null},"Equal to")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},">")),(0,n.kt)("td",{parentName:"tr",align:null},"Greater than")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"<")),(0,n.kt)("td",{parentName:"tr",align:null},"Less than")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},">"),"="),(0,n.kt)("td",{parentName:"tr",align:null},"Greater than or equal to")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"<"),"="),(0,n.kt)("td",{parentName:"tr",align:null},"Less than or equal to")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"\\"),", !="),(0,n.kt)("td",{parentName:"tr",align:null},"Not equal to")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"\\")),(0,n.kt)("td",{parentName:"tr",align:null},"Null safe equal=operator, but returns1rather thanNULLif both operands are NULL, and 0 rather than NULL if one operand is NULL.")))),(0,n.kt)("h2",{id:"sql-compound-operators"},"SQL Compound Operators"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"Operator")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"Description")))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"+="),(0,n.kt)("td",{parentName:"tr",align:null},"Add equals")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"-="),(0,n.kt)("td",{parentName:"tr",align:null},"Subtract equals")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"*="),(0,n.kt)("td",{parentName:"tr",align:null},"Multiply equals")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"/="),(0,n.kt)("td",{parentName:"tr",align:null},"Divide equals")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"%="),(0,n.kt)("td",{parentName:"tr",align:null},"Modulo equals")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"&="),(0,n.kt)("td",{parentName:"tr",align:null},"Bitwise AND equals")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"^-="),(0,n.kt)("td",{parentName:"tr",align:null},"Bitwise exclusive equals")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"\\|*=")),(0,n.kt)("td",{parentName:"tr",align:null},"Bitwise OR equals")))),(0,n.kt)("h2",{id:"sql-logical-operators"},"SQL Logical Operators"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"Operator")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"Description")))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ALL"),(0,n.kt)("td",{parentName:"tr",align:null},"TRUE if all of the subquery values meet the condition")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"AND"),(0,n.kt)("td",{parentName:"tr",align:null},"TRUE if all the conditions separated by AND is TRUE")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ANY"),(0,n.kt)("td",{parentName:"tr",align:null},"TRUE if any of the subquery values meet the condition")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"BETWEEN"),(0,n.kt)("td",{parentName:"tr",align:null},"TRUE if the operand is within the range of comparisons")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"EXISTS"),(0,n.kt)("td",{parentName:"tr",align:null},"TRUE if the subquery returns one or more records")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"IN"),(0,n.kt)("td",{parentName:"tr",align:null},"TRUE if the operand is equal to one of a list of expressions")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"LIKE"),(0,n.kt)("td",{parentName:"tr",align:null},"TRUE if the operand matches a pattern")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"NOT"),(0,n.kt)("td",{parentName:"tr",align:null},"Displays a record if the condition(s) is NOT TRUE")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"OR"),(0,n.kt)("td",{parentName:"tr",align:null},"TRUE if any of the conditions separated by OR is TRUE")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"SOME"),(0,n.kt)("td",{parentName:"tr",align:null},"TRUE if any of the subquery values meet the condition")))),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://www.w3schools.com/sql/sql_operators.asp"},"https://www.w3schools.com/sql/sql_operators.asp")),(0,n.kt)("h2",{id:"wildcard-characters-in-ms-access"},"Wildcard Characters in MS Access"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"Symbol")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"Description")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"Example")))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"*"),(0,n.kt)("td",{parentName:"tr",align:null},"Represents zero or more characters"),(0,n.kt)("td",{parentName:"tr",align:null},"bl* finds bl, black, blue, and blob")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"?"),(0,n.kt)("td",{parentName:"tr",align:null},"Represents a single character"),(0,n.kt)("td",{parentName:"tr",align:null},"h?t finds hot, hat, and hit")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"[]"),(0,n.kt)("td",{parentName:"tr",align:null},"Represents any single character within the brackets"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"h[oa]t")," finds hot and hat, but not hit")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"!"),(0,n.kt)("td",{parentName:"tr",align:null},"Represents any character not in the brackets"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"h[!oa]t")," finds hit, but not hot and hat")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"-"),(0,n.kt)("td",{parentName:"tr",align:null},"Represents a range of characters"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"c[a-b]t finds cat and cbt"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"#"),(0,n.kt)("td",{parentName:"tr",align:null},"Represents any single numeric character"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"2#5 finds 205, 215, 225, 235, 245, 255, 265, 275, 285, and 295"))))),(0,n.kt)("h2",{id:"wildcard-characters-in-sql-server"},"Wildcard Characters in SQL Server"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"Symbol")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"Description")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"Example")))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"%"),(0,n.kt)("td",{parentName:"tr",align:null},"Represents zero or more characters"),(0,n.kt)("td",{parentName:"tr",align:null},"bl% finds bl, black, blue, and blob")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"_"),(0,n.kt)("td",{parentName:"tr",align:null},"Represents a single character"),(0,n.kt)("td",{parentName:"tr",align:null},"h_t finds hot, hat, and hit")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"[]")),(0,n.kt)("td",{parentName:"tr",align:null},"Represents any single character within the brackets"),(0,n.kt)("td",{parentName:"tr",align:null},"h","[oa]","t finds hot and hat, but not hit")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"^"),(0,n.kt)("td",{parentName:"tr",align:null},"Represents any character not in the brackets"),(0,n.kt)("td",{parentName:"tr",align:null},"h",(0,n.kt)("sup",{parentName:"td",id:"fnref-oa"},(0,n.kt)("a",{parentName:"sup",href:"#fn-oa",className:"footnote-ref"},"oa")),"t finds hit, but not hot and hat")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"-"),(0,n.kt)("td",{parentName:"tr",align:null},"Represents a range of characters"),(0,n.kt)("td",{parentName:"tr",align:null},"c","[a-b]","t finds cat and cbt")))),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://www.w3schools.com/sql/sql_wildcards.asp"},"https://www.w3schools.com/sql/sql_wildcards.asp")))}k.isMDXComponent=!0}}]);