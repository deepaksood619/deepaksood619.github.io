"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7923],{603905:(e,t,n)=>{n.d(t,{Zo:()=>v,kt:()=>y});var a=n(667294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},v=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,v=o(e,["components","mdxType","originalType","parentName"]),u=s(n),h=i,y=u["".concat(l,".").concat(h)]||u[h]||c[h]||r;return n?a.createElement(y,p(p({ref:t},v),{},{components:n})):a.createElement(y,p({ref:t},v))}));function y(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,p=new Array(r);p[0]=h;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:i,p[1]=o;for(var s=2;s<r;s++)p[s]=n[s];return a.createElement.apply(null,p)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},140187:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var a=n(487462),i=(n(667294),n(603905));const r={},p="virtualenv & pip",o={unversionedId:"python/python-intro/virtualenv-and-pip",id:"python/python-intro/virtualenv-and-pip",title:"virtualenv & pip",description:"VirtualEnv",source:"@site/docs/python/python-intro/virtualenv-and-pip.md",sourceDirName:"python/python-intro",slug:"/python/python-intro/virtualenv-and-pip",permalink:"/python/python-intro/virtualenv-and-pip",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/python/python-intro/virtualenv-and-pip.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Time complexities",permalink:"/python/python-intro/time-complexities"},next:{title:"Deep Notes",permalink:"/"}},l={},s=[{value:"VirtualEnv",id:"virtualenv",level:2},{value:"Managing packages with pip",id:"managing-packages-with-pip",level:2},{value:"pip subcommands",id:"pip-subcommands",level:3},{value:"Install all dependencies using requirements.txt file",id:"install-all-dependencies-using-requirementstxt-file",level:3},{value:"Python Virtual Environments",id:"python-virtual-environments",level:2},{value:"virtualenv",id:"virtualenv-1",level:3},{value:"pyenv",id:"pyenv",level:3},{value:"pyenv-virtualenv",id:"pyenv-virtualenv",level:3},{value:"virtualenvwrapper",id:"virtualenvwrapper",level:3},{value:"pyenv-virtualenvwrapper",id:"pyenv-virtualenvwrapper",level:3},{value:"pipenv",id:"pipenv",level:3},{value:"pyenv",id:"pyenv-1",level:3},{value:"venv",id:"venv",level:3},{value:"anaconda / conda",id:"anaconda--conda",level:2},{value:"References",id:"references",level:2}],v={toc:s},u="wrapper";function c(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,a.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"virtualenv--pip"},"virtualenv & pip"),(0,i.kt)("h2",{id:"virtualenv"},"VirtualEnv"),(0,i.kt)("p",null,"virtualenv is a tool to create isolated Python environments. We can create a new Python environment to run a Python/Django/whatever app and install all package dependencies into the virtualenv without affecting your system's site-packages"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# Pip install\n sudo easy_install pip #pip2.7\n brew postinstall python3\n\n# To create virtual env\n python3 -m venv env\n source env/bin/activate\n deactivate\n\n# Setting up 2.7 environment\n pip install virtualenv (for python 2.7)\n virtualenv -p /usr/bin/python2.7 my_project (Creating a 2.7 venv)\n source my_project/bin/activate\n (my_project) $ pip install django==1.9.2\n\n# Deleting environment variables\n    unset <env_var_name>\n\n# To activate virtual env\n source tutorial-env/bin/activate\n\n# To deactivate virtual env\ndeactivate\n")),(0,i.kt)("h2",{id:"managing-packages-with-pip"},"Managing packages with pip"),(0,i.kt)("p",null,"We can install, upgrade, and remove packages using a program calledpip. By defaultpipwill install packages from the Python Package Index, ",(0,i.kt)("a",{parentName:"p",href:"https://pypi.python.org/pypi"},"https://pypi.python.org/pypi"),">"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://prepml.com/blog/making-python-package-scratch/"},(0,i.kt)("strong",{parentName:"a"},"https://prepml.com/blog/making-python-package-scratch/"))),(0,i.kt)("h3",{id:"pip-subcommands"},"pip subcommands"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"1. search\n2. install\n    (tutorial-env) $ pip install novas\n    (tutorial-env) $ pip install requests==2.6.0 (install specific version)\n    (tutorial-env) $ pip install --upgrade requests\n3. uninstall\n    (tutorial-env) $ pip uninstall requests\n4. freeze\n    pip freeze will produce a similar list of the installed packages, but the output uses the format that pip install expects. A common convention is to put this list in a requirements.txt file:\n    (tutorial-env) $ pip freeze > requirements.txt\n(tutorial-env) $ cat requirements.txt\nnovas==3.1.1.3\nnumpy==1.9.2\nrequests==2.7.0\n5. show\n    pip show will display information about a particular package\n    (tutorial-env) $ pip show requests\n6. list\n    pip list will display all of the packages installed in the virtual environment\n    pip list\n    pip list --outdated #show all outdated pip packages in requirements.txt\n\n    pip install pur\n    pur -r requirements.txt\n\n    https://pypi.org/project/pipreqs/\n        Generate pip requirements.txt file based on imports of any project\n\n    https://caniusepython3.com\n7. updating\n    pip3.6 install -U jupyter\n")),(0,i.kt)("h3",{id:"install-all-dependencies-using-requirementstxt-file"},"Install all dependencies using requirements.txt file"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"(tutorial-env) $ pip install -r requirements.txt")),(0,i.kt)("h2",{id:"python-virtual-environments"},"Python Virtual Environments"),(0,i.kt)("h3",{id:"virtualenv-1"},"virtualenv"),(0,i.kt)("p",null,"It works by installing a bunch of files in a directory (eg:env/), and then modifying thePATHenvironment variable to prefix it with a custombindirectory (eg:env/bin/). An exact copy of thepythonorpython3binary is placed in this directory, but Python is programmed to look for libraries relative to its path first, in the environment directory. It's not part of Python's standard library, but is officially blessed by the PyPA (Python Packaging Authority). Once activated, you can install packages in the virtual environment usingpip."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"virtualenv my_project\nsource my_project/bin/activate\n")),(0,i.kt)("h3",{id:"pyenv"},"pyenv"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/yyuu/pyenv"},(0,i.kt)("strong",{parentName:"a"},"pyenv"))," is used to isolate Python versions. For example, you may want to test your code against Python 2.6, 2.7, 3.3, 3.4 and 3.5, so you'll need a way to switch between them. Once activated, it prefixes thePATHenvironment variable with ",(0,i.kt)("inlineCode",{parentName:"p"},"~/.pyenv/shims"),", where there are special files matching the Python commands (python, pip). These are not copies of the Python-shipped commands; they are special scripts that decide on the fly which version of Python to run based on thePYENV_VERSIONenvironment variable, or the.python-version file, or the ~/.pyenv/versionfile.py env also makes the process of downloading and installing multiple Python versions easier, using the commandpyenv install."),(0,i.kt)("h3",{id:"pyenv-virtualenv"},"pyenv-virtualenv"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/yyuu/pyenv-virtualenv"},(0,i.kt)("strong",{parentName:"a"},"pyenv-virtualenv"))," is a plugin forpyenvby the same author aspyenv, to allow you to usepyenvandvirtualenvat the same time conveniently. However, if you're using Python 3.3 or later, pyenv-virtualenvwill try to runpython -m venvif it is available, instead ofvirtualenv. You can usevirtualenvandpyenvtogether withoutpyenv-virtualenv, if you don't want the convenience features."),(0,i.kt)("h3",{id:"virtualenvwrapper"},"virtualenvwrapper"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://pypi.python.org/pypi/virtualenvwrapper"},(0,i.kt)("strong",{parentName:"a"},"virtualenvwrapper"))," is a set of extensions tovirtualenv(see ",(0,i.kt)("a",{parentName:"p",href:"http://virtualenvwrapper.readthedocs.io/en/latest/"},"docs"),"). It gives you commands likemkvirtualenv, lssitepackages, and especiallyworkonfor switching between differentvirtualenvdirectories. This tool is especially useful if you want multiplevirtualenvdirectories."),(0,i.kt)("h3",{id:"pyenv-virtualenvwrapper"},"pyenv-virtualenvwrapper"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/yyuu/pyenv-virtualenvwrapper"},(0,i.kt)("strong",{parentName:"a"},"pyenv-virtualenvwrapper"))," is a plugin forpyenvby the same author aspyenv, to conveniently integratevirtualenvwrapperintopyenv."),(0,i.kt)("h3",{id:"pipenv"},"pipenv"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://pypi.python.org/pypi/pipenv"},(0,i.kt)("strong",{parentName:"a"},"pipenv")),", by Kenneth Reitz (the author ofrequests), is the newest project in this list. It aims to combinePipfile, pipandvirtualenvinto one command on the command-line. Thevirtualenvdirectory typically gets placed in~/.local/share/virtualenvs/XXX, withXXXbeing a hash of the path of the project directory. This is different fromvirtualenv, where the directory is typically in the current working directory."),(0,i.kt)("h3",{id:"pyenv-1"},"pyenv"),(0,i.kt)("p",null,"pyvenv is a script shipped with Python 3 but ",(0,i.kt)("a",{parentName:"p",href:"https://docs.python.org/dev/whatsnew/3.6.html#id8"},"deprecated in Python 3.6")," as it had problems (not to mention the confusing name). In Python 3.6+, the exact equivalent ispython3 -m venv"),(0,i.kt)("h3",{id:"venv"},"venv"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/venv.html"},(0,i.kt)("strong",{parentName:"a"},"venv"))," is a package shipped with Python 3, which you can run usingpython3 -m venv(although for some reason some distros separate it out into a separate distro package, such aspython3-venvon Ubuntu/Debian). It serves a similar purpose tovirtualenv, and works in a very similar way, but it doesn't need to copy Python binaries around (except on Windows). Use this if you don't need to support Python 2. At the time of writing, the Python community seems to be happy withvirtualenvand I haven't heard much talk ofvenv"),(0,i.kt)("h2",{id:"anaconda--conda"},"anaconda / conda"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"conda deactivate\nconda update --all\nconda install --file requirements.txt\nconda install --use-local psycopg2-binary\n")),(0,i.kt)("h2",{id:"references"},"References"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/41573587/what-is-the-difference-between-venv-pyvenv-pyenv-virtualenv-virtualenvwrappe"},"https://stackoverflow.com/questions/41573587/what-is-the-difference-between-venv-pyvenv-pyenv-virtualenv-virtualenvwrappe")))}c.isMDXComponent=!0}}]);