"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[39146],{603905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>b});var r=a(667294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function n(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,i=function(e,t){if(null==e)return{};var a,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var m=r.createContext({}),l=function(e){var t=r.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):n(n({},t),e)),a},d=function(e){var t=l(e.components);return r.createElement(m.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,i=e.mdxType,s=e.originalType,m=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=l(a),u=i,b=p["".concat(m,".").concat(u)]||p[u]||c[u]||s;return a?r.createElement(b,n(n({ref:t},d),{},{components:a})):r.createElement(b,n({ref:t},d))}));function b(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=a.length,n=new Array(s);n[0]=u;var o={};for(var m in t)hasOwnProperty.call(t,m)&&(o[m]=t[m]);o.originalType=e,o[p]="string"==typeof e?e:i,n[1]=o;for(var l=2;l<s;l++)n[l]=a[l];return r.createElement.apply(null,n)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},328047:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>n,default:()=>c,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var r=a(487462),i=(a(667294),a(603905));const s={},n="Time Series Databases",o={unversionedId:"databases/nosql-databases/time-series-db/time-series-databases",id:"databases/nosql-databases/time-series-db/time-series-databases",title:"Time Series Databases",description:"- Optimized for time-stamped or time series data",source:"@site/docs/databases/nosql-databases/time-series-db/time-series-databases.md",sourceDirName:"databases/nosql-databases/time-series-db",slug:"/databases/nosql-databases/time-series-db/time-series-databases",permalink:"/databases/nosql-databases/time-series-db/time-series-databases",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/databases/nosql-databases/time-series-db/time-series-databases.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Write Protocols",permalink:"/databases/nosql-databases/time-series-db/influxdb/write-protocols"},next:{title:"TimeScaleDB",permalink:"/databases/nosql-databases/time-series-db/timescaledb"}},m={},l=[{value:"Time Series Databases",id:"time-series-databases-1",level:2},{value:"Managed TimeSeries Databases",id:"managed-timeseries-databases",level:2},{value:"References",id:"references",level:2}],d={toc:l},p="wrapper";function c(e){let{components:t,...s}=e;return(0,i.kt)(p,(0,r.Z)({},d,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"time-series-databases"},"Time Series Databases"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Optimized for time-stamped or time series data"),(0,i.kt)("li",{parentName:"ul"},"built specifically for handling metrics and events or measurements that are time-stamped."),(0,i.kt)("li",{parentName:"ul"},"optimized for measuring change over time."),(0,i.kt)("li",{parentName:"ul"},"Time series are simply measurements or events that are tracked, monitored, downsampled, and aggregated over time."),(0,i.kt)("li",{parentName:"ul"},"Example - server metrics, application performance monitoring, network data, sensor data, events, clicks, trades in a market, analytics data."),(0,i.kt)("li",{parentName:"ul"},"The key difference with time series data from regular data is that you're always asking questions about it over time."),(0,i.kt)("li",{parentName:"ul"},"Properties that make time series data very different than other data workloads are data lifecycle management, summarization, and large range scans of many records.\nWhat Distinguishes the Time Series Workload?")),(0,i.kt)("p",null,"Time Series Databases have key architectural design properties that make them very different from other databases. These include: time-stamp data storage and compression, data lifecycle management, data summarization, ability to handle large time series dependent scans of many records, and time series aware queries.\n",(0,i.kt)("img",{alt:"image",src:a(206506).Z,width:"1600",height:"433"}),"\n",(0,i.kt)("em",{parentName:"p"},"For example:"),"With a Time Series Database, it is common to request a summary of data over a large time period. This requires going over a range of data points to perform some computation like a percentile increase this month of a metric over the same period in the last six months, summarized by month. This kind of workload is very difficult to optimize for with a distributed key value store. TSDB's are optimized for exactly this use case giving millisecond level query times over months of data.",(0,i.kt)("em",{parentName:"p"},"Another example:"),"With Time Series Databases, it's common to keep high precision data around for a short period of time. This data is aggregated and downsampled into longer term trend data. This means that for every data point that goes into the database, it will have to be deleted after its period of time is up. This kind of data lifecycle management is difficult for application developers to implement on top of regular databases. They must devise schemes for cheaply evicting large sets of data and constantly summarizing that data at scale. With a Time Series Database, this functionality is provided out of the box."),(0,i.kt)("h2",{id:"time-series-databases-1"},"Time Series Databases"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.influxdata.com/"},"InfluxDB")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kx.com/discover/"},"Kdb+")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://oss.oetiker.ch/rrdtool/"},"RRDTool")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/graphite-project/graphite-web"},"Graphite")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://opentsdb.net/"},"OpenTSDB")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://prometheus.io/"},"Prometheus")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://druid.io/"},"Druid")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/kairosdb/kairosdb"},"KairosDB")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://www.mcobject.com/extremedbfamily.shtml"},"eXtremeDB")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://basho.com/products/riak-ts/"},"Riak TS")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://axibase.com/products/axibase-time-series-database/"},"Axibase")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.timescale.com/"},"TimescaleDB")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://fauna.com/"},"FaunaDB")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://www.hawkular.org/"},"Hawkular Metrics")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://www.warp10.io/"},"Warp 10")),(0,i.kt)("li",{parentName:"ul"},"GridDB")),(0,i.kt)("p",null,"GridDB is a distributed Key-Value Store (KVS) database built by Toshiba. It has Key-Container data model and time-series functions which are designed specifically to target large data generated by IoT devices. It can be accessed by C and Java APIs, or TQL, a custom SQL-like query language.\n",(0,i.kt)("a",{parentName:"p",href:"https://dbdb.io/db/griddb"},"https://dbdb.io/db/griddb")),(0,i.kt)("h2",{id:"managed-timeseries-databases"},"Managed TimeSeries Databases"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Amazon Timestream Database")),(0,i.kt)("h2",{id:"references"},"References"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.influxdata.com/time-series-database"},"https://www.influxdata.com/time-series-database")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://misfra.me/2016/04/09/tsdb-list"},"https://misfra.me/2016/04/09/tsdb-list")))}c.isMDXComponent=!0},206506:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/Time-Series-Databases-image1-71504a68619e592a30994378fa728990.jpg"}}]);