"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[37036],{603905:(t,e,n)=>{n.d(e,{Zo:()=>d,kt:()=>k});var a=n(667294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var p=a.createContext({}),u=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},d=function(t){var e=u(t.components);return a.createElement(p.Provider,{value:e},t.children)},s="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},c=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,d=i(t,["components","mdxType","originalType","parentName"]),s=u(n),c=r,k=s["".concat(p,".").concat(c)]||s[c]||m[c]||l;return n?a.createElement(k,o(o({ref:e},d),{},{components:n})):a.createElement(k,o({ref:e},d))}));function k(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,o=new Array(l);o[0]=c;var i={};for(var p in e)hasOwnProperty.call(e,p)&&(i[p]=e[p]);i.originalType=t,i[s]="string"==typeof t?t:r,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},125095:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var a=n(487462),r=(n(667294),n(603905));const l={},o="Deployment and Installation",i={unversionedId:"technologies/brokers/emqtt/deployment-and-installation",id:"technologies/brokers/emqtt/deployment-and-installation",title:"Deployment and Installation",description:"image",source:"@site/docs/technologies/brokers/emqtt/deployment-and-installation.md",sourceDirName:"technologies/brokers/emqtt",slug:"/technologies/brokers/emqtt/deployment-and-installation",permalink:"/technologies/brokers/emqtt/deployment-and-installation",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/technologies/brokers/emqtt/deployment-and-installation.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Conf",permalink:"/technologies/brokers/emqtt/conf"},next:{title:"Plugins",permalink:"/technologies/brokers/emqtt/plugins"}},p={},u=[{value:"TCP Ports Used",id:"tcp-ports-used",level:2},{value:"Configuration Files",id:"configuration-files",level:2},{value:"EMQ X Autodiscovery Strategy",id:"emq-x-autodiscovery-strategy",level:2}],d={toc:u},s="wrapper";function m(t){let{components:e,...l}=t;return(0,r.kt)(s,(0,a.Z)({},d,l,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"deployment-and-installation"},"Deployment and Installation"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image",src:n(880554).Z,width:"600",height:"182"})),(0,r.kt)("p",null,"Load Balancers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"AWS Elastic Load Balancer (ELB)"),(0,r.kt)("li",{parentName:"ul"},"HA proxy"),(0,r.kt)("li",{parentName:"ul"},"Nginx")),(0,r.kt)("p",null,"Following ports are opened for cluster internal communication:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"4369"),(0,r.kt)("th",{parentName:"tr",align:null},"Node discovery port"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"6369"),(0,r.kt)("td",{parentName:"tr",align:null},"Cluster channel")))),(0,r.kt)("h2",{id:"tcp-ports-used"},"TCP Ports Used"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"1883"),(0,r.kt)("th",{parentName:"tr",align:null},"MQTT Port"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"8883"),(0,r.kt)("td",{parentName:"tr",align:null},"MQTT/SSL Port")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"8083"),(0,r.kt)("td",{parentName:"tr",align:null},"MQTT/WebSocket Port")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"8084"),(0,r.kt)("td",{parentName:"tr",align:null},"MQTT/WebSocket/SSL Port")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"8080"),(0,r.kt)("td",{parentName:"tr",align:null},"HTTP Management API Port")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"18083"),(0,r.kt)("td",{parentName:"tr",align:null},"Web Dashboard Port")))),(0,r.kt)("h2",{id:"configuration-files"},"Configuration Files"),(0,r.kt)("p",null,"The main configuration files of theEMQ Xbroker are under 'etc/' folder:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"File")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Description")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"etc/emqx.conf"),(0,r.kt)("td",{parentName:"tr",align:null},"EMQ X3.0 Configuration File")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"etc/acl.conf"),(0,r.kt)("td",{parentName:"tr",align:null},"The default ACL File")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"etc/plugins/*.conf"),(0,r.kt)("td",{parentName:"tr",align:null},"Config Files of Plugins")))),(0,r.kt)("h2",{id:"emq-x-autodiscovery-strategy"},"EMQ X Autodiscovery Strategy"),(0,r.kt)("p",null,"EMQ X3.0 supports node discovery and autocluster with various strategies:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Strategy"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"manual"),(0,r.kt)("td",{parentName:"tr",align:null},"Create cluster manually")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"static"),(0,r.kt)("td",{parentName:"tr",align:null},"Autocluster by static node list")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"mcast"),(0,r.kt)("td",{parentName:"tr",align:null},"Autocluster by UDP Multicast")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"dns"),(0,r.kt)("td",{parentName:"tr",align:null},"Autocluster by DNS A Record")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"etcd"),(0,r.kt)("td",{parentName:"tr",align:null},"Autocluster using etcd")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"k8s"),(0,r.kt)("td",{parentName:"tr",align:null},"Autocluster on Kubernetes")))))}m.isMDXComponent=!0},880554:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/Technologies-Brokers-Deployment-and-Installation-image1-f07a733b6acf54ecb2544ab1680c8cba.jpg"}}]);