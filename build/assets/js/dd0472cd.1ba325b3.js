"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[55229],{603905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(667294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=u(n),m=o,d=c["".concat(s,".").concat(m)]||c[m]||g[m]||r;return n?a.createElement(d,l(l({ref:t},p),{},{components:n})):a.createElement(d,l({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:o,l[1]=i;for(var u=2;u<r;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},943799:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>g,frontMatter:()=>r,metadata:()=>i,toc:()=>u});var a=n(487462),o=(n(667294),n(603905));const r={},l="Hello World",i={unversionedId:"languages/golang/hello-world",id:"languages/golang/hello-world",title:"Hello World",description:"hello.go",source:"@site/docs/languages/golang/hello-world.md",sourceDirName:"languages/golang",slug:"/languages/golang/hello-world",permalink:"/languages/golang/hello-world",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/languages/golang/hello-world.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Examples",permalink:"/languages/golang/examples"},next:{title:"Intro",permalink:"/languages/golang/intro"}},s={},u=[{value:"hello.go",id:"hellogo",level:2},{value:"A Go program basically consists of the following parts",id:"a-go-program-basically-consists-of-the-following-parts",level:2},{value:"Important Points",id:"important-points",level:2},{value:"Naming Rules",id:"naming-rules",level:2}],p={toc:u},c="wrapper";function g(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"hello-world"},"Hello World"),(0,o.kt)("h2",{id:"hellogo"},"hello.go"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'# The main package is the starting point to run the program\n\npackage main\n\n# preprocessor command, tells the compilerto include the files lying in the package fmt\n\nimport "fmt"\n\n# program execution begins here\n\nfunc main() {\n\n# Notice the capital P of Println method. In Go language, a name is exported if it starts with capital letter. Exported means the function or variable/constant is accessible to the importer of the respective package\n\nfmt.Println("Hello, \u4e16\u754c")\n\n}\n\n## Running\n\ngo run hello.go\n\n## Commands\n\ngo mod init github.io/deepaksood619/pcbook\n\ngo test ./... # run all test in all packages\n\ngo test ./serializer/file_test.go\n')),(0,o.kt)("h2",{id:"a-go-program-basically-consists-of-the-following-parts"},"A Go program basically consists of the following parts"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Package Declaration"),(0,o.kt)("li",{parentName:"ul"},"Import Packages"),(0,o.kt)("li",{parentName:"ul"},"Functions"),(0,o.kt)("li",{parentName:"ul"},"Variables"),(0,o.kt)("li",{parentName:"ul"},"Statements and Expressions"),(0,o.kt)("li",{parentName:"ul"},"Comments")),(0,o.kt)("h2",{id:"important-points"},"Important Points"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"One more interesting thing you may notice is thelack of semicolons. In fact, in Go they are optional -- you may use them to separate the statements, but it's not required and generally not advised to use."),(0,o.kt)("li",{parentName:"ul"},"short form of creating vars. the := operatordeclares and assigns a value to a variable at the same time. Using this form you don't have to provide the type of variable - the compiler will figure that out based on the value you passed.")),(0,o.kt)("h2",{id:"naming-rules"},"Naming Rules"),(0,o.kt)("p",null,"Go has a set of naming rules that you'll have to follow:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"a name must begin with a letter"),(0,o.kt)("li",{parentName:"ul"},"if the name begins with a Capital letter, it's considered asexportedand can be usedoutside of the current package. Otherwise, the variable/function/type can be usedonly inside the current package. THIS IS IMPORTANT!")),(0,o.kt)("p",null,"These are all enforced rules. Simple!"),(0,o.kt)("p",null,"One more additional rule set by the community is to usecamelCase. It is also popular to abbreviate obvious variables - using i instead of index etc. That's all you need to know about naming conventions."))}g.isMDXComponent=!0}}]);