"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[96225],{603905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>h});var n=r(667294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(r),m=a,h=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return r?n.createElement(h,s(s({ref:t},u),{},{components:r})):n.createElement(h,s({ref:t},u))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},381359:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=r(487462),a=(r(667294),r(603905));const o={},s="Architecture",i={unversionedId:"devops/kubernetes/architecture",id:"devops/kubernetes/architecture",title:"Architecture",description:"Kubernetes Architecture",source:"@site/docs/devops/kubernetes/architecture.md",sourceDirName:"devops/kubernetes",slug:"/devops/kubernetes/architecture",permalink:"/devops/kubernetes/architecture",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/devops/kubernetes/architecture.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"api-resources",permalink:"/devops/kubernetes/api-resources"},next:{title:"Logging Architecture",permalink:"/devops/kubernetes/cluster-administration/logging-architecture"}},l={},c=[{value:"Kubernetes Architecture",id:"kubernetes-architecture",level:2},{value:"Registry",id:"registry",level:3},{value:"Nodes",id:"nodes",level:2},{value:"Node Controller",id:"node-controller",level:2},{value:"Others",id:"others",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...o}=e;return(0,a.kt)(p,(0,n.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"architecture"},"Architecture"),(0,a.kt)("h2",{id:"kubernetes-architecture"},"Kubernetes Architecture"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Kubernetes Master Node"))),(0,a.kt)("p",null,"API Server"),(0,a.kt)("p",null,"Scheduler"),(0,a.kt)("p",null,"Controller (Coordinator of entire cluster) / watches the desired state it manages"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Kubernetes Worker Nodes"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"kube-proxy (ensure that communication is running between all the containers)"),(0,a.kt)("li",{parentName:"ul"},"kubelet (report health to etcd and the kubernetes master)"),(0,a.kt)("li",{parentName:"ul"},"Supervisord (Docker and kubelet are packaged into this layer. A process manager where you can run multiple processes, inside one parent process)"),(0,a.kt)("li",{parentName:"ul"},"fluentd (responsible for managing the logs and talking to the central logging service)")))),(0,a.kt)("h3",{id:"registry"},"Registry"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"DockerHub")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"GoogleCloud / ECR")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Distributed key-value store ("),"etcd (distributed key value database, single source of truth))"))),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"image",src:r(27849).Z,width:"2071",height:"2645"})),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"image",src:r(133663).Z,width:"1359",height:"638"})),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"image",src:r(632501).Z,width:"1552",height:"869"})),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"image",src:r(28308).Z,width:"1100",height:"488"})),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"image",src:r(259026).Z,width:"1278",height:"770"})),(0,a.kt)("h2",{id:"nodes"},"Nodes"),(0,a.kt)("p",null,"A node is a worker machine in Kubernetes, previously known as aminion. A node may be a VM or physical machine, depending on the cluster. Each node contains the services necessary to run ",(0,a.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/workloads/pods/pod/"},"pods")," and is managed by the master components. The services on a node include the ",(0,a.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/overview/components/#node-components"},"container runtime"),", kubelet and kube-proxy."),(0,a.kt)("h2",{id:"node-controller"},"Node Controller"),(0,a.kt)("p",null,"The node controller is a Kubernetes master component which manages various aspects of nodes."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://learnk8s.io/kubernetes-node-size"},"https://learnk8s.io/kubernetes-node-size")),(0,a.kt)("h2",{id:"others"},"Others"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://cloudyuga.guru/blog/cloud-controller-manager"},"https://cloudyuga.guru/blog/cloud-controller-manager")))}d.isMDXComponent=!0},27849:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/DevOps-Kubernetes-Architecture-image1-c4d49395875a0aaf97fa289ddd0d0d69.jpg"},133663:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/DevOps-Kubernetes-Architecture-image2-e99bd088697c34303ecf6e16ef567d11.jpg"},632501:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/DevOps-Kubernetes-Architecture-image3-cd9bbf3f0dede58bd04422d0567267e3.jpg"},28308:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/DevOps-Kubernetes-Architecture-image4-cd52d4f25162131821cd5f83752eb816.jpg"},259026:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/DevOps-Kubernetes-Architecture-image5-288af5f6921d89a22326a5a1ef9eb293.jpg"}}]);