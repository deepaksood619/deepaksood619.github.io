"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[51716],{603905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(667294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(r),g=o,m=p["".concat(c,".").concat(g)]||p[g]||d[g]||i;return r?n.createElement(m,a(a({ref:t},u),{},{components:r})):n.createElement(m,a({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=g;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},204979:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var n=r(487462),o=(r(667294),r(603905));const i={},a="Logging Architecture",s={unversionedId:"devops/kubernetes/cluster-administration/logging-architecture",id:"devops/kubernetes/cluster-administration/logging-architecture",title:"Logging Architecture",description:"The easiest and most embraced logging method for containerized applications is to write to the standard output and standard error streams.",source:"@site/docs/devops/kubernetes/cluster-administration/logging-architecture.md",sourceDirName:"devops/kubernetes/cluster-administration",slug:"/devops/kubernetes/cluster-administration/logging-architecture",permalink:"/devops/kubernetes/cluster-administration/logging-architecture",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/devops/kubernetes/cluster-administration/logging-architecture.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Architecture",permalink:"/devops/kubernetes/architecture"},next:{title:"Others",permalink:"/devops/kubernetes/cluster-administration/others"}},c={},l=[{value:"References",id:"references",level:2}],u={toc:l},p="wrapper";function d(e){let{components:t,...i}=e;return(0,o.kt)(p,(0,n.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"logging-architecture"},"Logging Architecture"),(0,o.kt)("p",null,"The easiest and most embraced logging method for containerized applications is to write to the ",(0,o.kt)("strong",{parentName:"p"},"standard output and standard error streams"),"."),(0,o.kt)("p",null,"However, the native functionality provided by a container engine or runtime is usually not enough for a complete logging solution. For example, if a container crashes, a pod is evicted, or a node dies, you'll usually still want to access your application's logs. As such, logs should have a separate storage and lifecycle independent of nodes, pods, or containers. This concept is calledcluster-level-logging. Cluster-level logging requires a separate backend to store, analyze, and query logs. Kubernetes provides no native storage solution for log data, but you can integrate many existing logging solutions into your Kubernetes cluster."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"image",src:r(400571).Z,width:"500",height:"400"})),(0,o.kt)("h2",{id:"references"},"References"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/cluster-administration/logging"},"https://kubernetes.io/docs/concepts/cluster-administration/logging")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/moby/moby/issues/7440"},"https://github.com/moby/moby/issues/7440")))}d.isMDXComponent=!0},400571:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/DevOps-Kubernetes-Logging-Architecture-image1-034202eaa15db66ea28e21cbc37943c0.jpg"}}]);