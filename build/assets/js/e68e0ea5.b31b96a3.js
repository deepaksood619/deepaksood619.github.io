"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[50913],{603905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var o=n(667294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),l=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=l(e.components);return o.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=l(n),h=r,m=d["".concat(p,".").concat(h)]||d[h]||u[h]||a;return n?o.createElement(m,s(s({ref:t},c),{},{components:n})):o.createElement(m,s({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=h;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[d]="string"==typeof e?e:r,s[1]=i;for(var l=2;l<a;l++)s[l]=n[l];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},952382:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var o=n(487462),r=(n(667294),n(603905));const a={},s="PEP",i={unversionedId:"python/documentation/pep",id:"python/documentation/pep",title:"PEP",description:"PEP-0 - Python Enhancement Proposals",source:"@site/docs/python/documentation/pep.md",sourceDirName:"python/documentation",slug:"/python/documentation/pep",permalink:"/python/documentation/pep",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/python/documentation/pep.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"33. Python Language Services",permalink:"/python/documentation/33-python-language-services"},next:{title:"Python HowTos",permalink:"/python/documentation/python-howtos"}},p={},l=[{value:"PEP-8 - Python Style Guide",id:"pep-8---python-style-guide",level:2}],c={toc:l},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"pep"},"PEP"),(0,r.kt)("p",null,"PEP-0 - Python Enhancement Proposals"),(0,r.kt)("p",null,"PEP-20 - Zen of Python (import this)"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.python.org/dev/peps/pep-0001/#what-is-a-pep"},"https://www.python.org/dev/peps/pep-0001/#what-is-a-pep")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.python.org/dev/peps/pep-0020"},"https://www.python.org/dev/peps/pep-0020")," (The Zen of Python)"),(0,r.kt)("h2",{id:"pep-8---python-style-guide"},"PEP-8 - Python Style Guide"),(0,r.kt)("p",null,"For Python, ",(0,r.kt)("a",{parentName:"p",href:"https://www.python.org/dev/peps/pep-0008"},"PEP 8")," has emerged as the style guide that most projects adhere to; it promotes a very readable and eye-pleasing coding style. Every Python developer should read it at some point; here are the most important points extracted for you:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Use 4-space indentation, and no tabs.\n4 spaces are a good compromise between small indentation (allows greater nesting depth) and large indentation (easier to read). Tabs introduce confusion, and are best left out."),(0,r.kt)("li",{parentName:"ul"},"Wrap lines so that they don't exceed 79 characters.\nThis helps users with small displays and makes it possible to have several code files side-by-side on larger displays."),(0,r.kt)("li",{parentName:"ul"},"Use blank lines to separate functions and classes, and larger blocks of code inside functions."),(0,r.kt)("li",{parentName:"ul"},"When possible, put comments on a line of their own."),(0,r.kt)("li",{parentName:"ul"},"Use docstrings."),(0,r.kt)("li",{parentName:"ul"},"Use spaces around operators and after commas, but not directly inside bracketing constructs:a=f(1,2)+g(3,4)."),(0,r.kt)("li",{parentName:"ul"},"Name your classes and functions consistently; the convention is to useCamelCasefor classes andlower_case_with_underscoresfor functions and methods. Always useselfas the name for the first method argument (see ",(0,r.kt)("a",{parentName:"li",href:"https://docs.python.org/3/tutorial/classes.html#tut-firstclasses"},"A First Look at Classes")," for more on classes and methods)."),(0,r.kt)("li",{parentName:"ul"},"Don't use fancy encodings if your code is meant to be used in international environments. Python's default, UTF-8, or even plain ASCII work best in any case."),(0,r.kt)("li",{parentName:"ul"},"Likewise, don't use non-ASCII characters in identifiers if there is only the slightest chance people speaking a different language will read or maintain the code.")))}u.isMDXComponent=!0}}]);