"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[14943],{603905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>g});var i=a(667294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,i,n=function(e,t){if(null==e)return{};var a,i,n={},r=Object.keys(e);for(i=0;i<r.length;i++)a=r[i],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)a=r[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=i.createContext({}),m=function(e){var t=i.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=m(e.components);return i.createElement(s.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},k=i.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=m(a),k=n,g=p["".concat(s,".").concat(k)]||p[k]||c[k]||r;return a?i.createElement(g,l(l({ref:t},u),{},{components:a})):i.createElement(g,l({ref:t},u))}));function g(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,l=new Array(r);l[0]=k;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:n,l[1]=o;for(var m=2;m<r;m++)l[m]=a[m];return i.createElement.apply(null,l)}return i.createElement.apply(null,a)}k.displayName="MDXCreateElement"},758055:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>m});var i=a(487462),n=(a(667294),a(603905));const r={},l="Association Rules & Apriori Algorithm",o={unversionedId:"ai/ml-algorithms/association-rules-and-apriori-algorithm",id:"ai/ml-algorithms/association-rules-and-apriori-algorithm",title:"Association Rules & Apriori Algorithm",description:"Association Rule Mining",source:"@site/docs/ai/ml-algorithms/association-rules-and-apriori-algorithm.md",sourceDirName:"ai/ml-algorithms",slug:"/ai/ml-algorithms/association-rules-and-apriori-algorithm",permalink:"/ai/ml-algorithms/association-rules-and-apriori-algorithm",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/ai/ml-algorithms/association-rules-and-apriori-algorithm.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Artificial Neural Networks",permalink:"/ai/ml-algorithms/artificial-neural-networks"},next:{title:"Bagging and Random Forest",permalink:"/ai/ml-algorithms/bagging-and-random-forest"}},s={},m=[{value:"Association Rule Mining",id:"association-rule-mining",level:2},{value:"Definition: Frequent Itemset",id:"definition-frequent-itemset",level:2},{value:"Association Rule Mining Task",id:"association-rule-mining-task",level:2},{value:"Mining Association Rules",id:"mining-association-rules",level:2},{value:"Frequent Itemset Generation Strategies",id:"frequent-itemset-generation-strategies",level:2},{value:"Apriori Algorithm",id:"apriori-algorithm",level:2},{value:"Factors affecting complexity",id:"factors-affecting-complexity",level:2}],u={toc:m},p="wrapper";function c(e){let{components:t,...r}=e;return(0,n.kt)(p,(0,i.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"association-rules--apriori-algorithm"},"Association Rules & Apriori Algorithm"),(0,n.kt)("h2",{id:"association-rule-mining"},"Association Rule Mining"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Given a set of transactions, find rules that will predict the occurrence of an item based on the occurrences of other items in the transaction")),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"image",src:a(889688).Z,width:"1099",height:"296"})),(0,n.kt)("h2",{id:"definition-frequent-itemset"},"Definition: Frequent Itemset"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Itemset"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"A collection of one or more items",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Example: {Milk, Bread, Diaper}"))),(0,n.kt)("li",{parentName:"ul"},"k-itemset",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"An itemset that contains k items"))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Support count (\u03c3)"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Frequency of occurrence of an itemset"),(0,n.kt)("li",{parentName:"ul"},"E.g. \u03c3({Milk, Break, Diaper}) = 2"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Support"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Fraction of transactions that contain an itemset"),(0,n.kt)("li",{parentName:"ul"},"E.g. s({Milk, Bread, Diaper}) = 2/5"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Frequent Itemset"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"An itemset whose support is greater than or equal to a ",(0,n.kt)("em",{parentName:"li"},"minsup")," threshold"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Association Rule"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"An implication expression of the form X->Y, where X and Y are itemsets"),(0,n.kt)("li",{parentName:"ul"},"Example",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"{Milk, Diaper} -> {Beer}"))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Rule Evaluation Metrics"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Support (s)",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Fraction of transactions that contain both X and Y"))),(0,n.kt)("li",{parentName:"ul"},"Confidence (c)",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Measures how often items in Y appear in transactions that contain X"))),(0,n.kt)("li",{parentName:"ul"},"Example")))),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"image",src:a(798578).Z,width:"646",height:"274"})),(0,n.kt)("h2",{id:"association-rule-mining-task"},"Association Rule Mining Task"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Given a set of transactions T, the goal of association rule mining is to find all rules having",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"support >= ",(0,n.kt)("em",{parentName:"li"},"minsup")," threshold"),(0,n.kt)("li",{parentName:"ul"},"confidence >= ",(0,n.kt)("em",{parentName:"li"},"minconf")," threshold"))),(0,n.kt)("li",{parentName:"ul"},"Brute-force approach",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"List all possible association rules"),(0,n.kt)("li",{parentName:"ul"},"Compute the support and confindence for each rule"),(0,n.kt)("li",{parentName:"ul"},"Prune rules that fail the ",(0,n.kt)("em",{parentName:"li"},"minsup")," and ",(0,n.kt)("em",{parentName:"li"},"minconf")," thresholds"),(0,n.kt)("li",{parentName:"ul"},"Computationally prohibitive")))),(0,n.kt)("h2",{id:"mining-association-rules"},"Mining Association Rules"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Two-step approach"),(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Frequent Itemset Generation"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Generate all itemsets whose support >= minsup"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Rule Generation"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Generate high confidence rules from each frequent itemset, where each rule is a binary partitioning of a frequent itemset"))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Frequent itemset generation is still computationally expresive"))),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"image",src:a(951698).Z,width:"1440",height:"810"})),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"image",src:a(883845).Z,width:"1440",height:"810"})),(0,n.kt)("h2",{id:"frequent-itemset-generation-strategies"},"Frequent Itemset Generation Strategies"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Reduce the number of candidates (M)",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Complete search: M = 2^d^"),(0,n.kt)("li",{parentName:"ul"},"Use pruning techniques to reduce M"))),(0,n.kt)("li",{parentName:"ul"},"Reduce the number of transactions (N)",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Reduce size of N as the size of itemset increases"),(0,n.kt)("li",{parentName:"ul"},"Used by DHP and vertical-based mining algorithms"))),(0,n.kt)("li",{parentName:"ul"},"Reduce the number of comparisions (NM)",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Use efficient data structures to store the candidates or transactions"),(0,n.kt)("li",{parentName:"ul"},"No need to match every candidate against every transaction")))),(0,n.kt)("p",null,"DHP - Direct Hashing and Pruning"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"image",src:a(639936).Z,width:"1440",height:"810"})),(0,n.kt)("p",null,"Example - If bat + ball are not frequent, then we can say that bat + ball + gloves is also not frequent."),(0,n.kt)("p",null,"Other way around of Apriori principle - if an itemset is not frequent, then all its superset are also not frequent."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"image",src:a(529370).Z,width:"1440",height:"810"})),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"image",src:a(725749).Z,width:"1440",height:"810"})),(0,n.kt)("h2",{id:"apriori-algorithm"},"Apriori Algorithm"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Let k = 1"),(0,n.kt)("li",{parentName:"ul"},"Generate frequent itemsets of length 1"),(0,n.kt)("li",{parentName:"ul"},"Repeat until no new frequent itemsets are identified",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Generate length (k+1) candidate itemsets from length k frequent itemsets"),(0,n.kt)("li",{parentName:"ul"},"Prune candidate itemsets containing subsets of length k that are infrequent"),(0,n.kt)("li",{parentName:"ul"},"Count the support of each candidate by scanning the DB"),(0,n.kt)("li",{parentName:"ul"},"Eliminate candidates that are infrequent, leaving only those that are frequent")))),(0,n.kt)("h2",{id:"factors-affecting-complexity"},"Factors affecting complexity"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Choice of minimum support threshold",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Lowering support threshold results in more frequent itemsets"),(0,n.kt)("li",{parentName:"ul"},"this may increase number of candidates and max length of frequent itemsets"))),(0,n.kt)("li",{parentName:"ul"},"Dimensionality (number of items) of the data set",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"more space is needed to store support count of each item"),(0,n.kt)("li",{parentName:"ul"},"if number of frequent items also increases, both computation and I/O costs may also increase"))),(0,n.kt)("li",{parentName:"ul"},"Size of database",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Apriori makes multiple passes, run time of algorithm increase with number of transactions"))),(0,n.kt)("li",{parentName:"ul"},"Average transaction width",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"This may increase max length of frequent itemsets and traverals of hash tree (number of subsets in a transaction increases with its width)")))))}c.isMDXComponent=!0},889688:(e,t,a)=>{a.d(t,{Z:()=>i});const i=a.p+"assets/images/Association-Rules-&-Apriori-Algorithm-image1-d156028ae68f1624d4ad12a4f59e79eb.jpg"},798578:(e,t,a)=>{a.d(t,{Z:()=>i});const i=a.p+"assets/images/Association-Rules-&-Apriori-Algorithm-image2-20d271086fc116348690ebee5d300405.jpg"},951698:(e,t,a)=>{a.d(t,{Z:()=>i});const i=a.p+"assets/images/Association-Rules-&-Apriori-Algorithm-image3-256d50bfb5b058479809079b284a5bbd.jpg"},883845:(e,t,a)=>{a.d(t,{Z:()=>i});const i=a.p+"assets/images/Association-Rules-&-Apriori-Algorithm-image4-959e583e395bb1659927d456ab826271.jpg"},639936:(e,t,a)=>{a.d(t,{Z:()=>i});const i=a.p+"assets/images/Association-Rules-&-Apriori-Algorithm-image5-e613e95106fb6c8094eee1c31fd22ec8.jpg"},529370:(e,t,a)=>{a.d(t,{Z:()=>i});const i=a.p+"assets/images/Association-Rules-&-Apriori-Algorithm-image6-8e2d34289a9a1665a78f0509222f7434.jpg"},725749:(e,t,a)=>{a.d(t,{Z:()=>i});const i=a.p+"assets/images/Association-Rules-&-Apriori-Algorithm-image7-ff264c8029bd6f25038acf2f7e9f7996.jpg"}}]);