"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[92988],{603905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var o=n(667294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=o.createContext({}),c=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=c(e.components);return o.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(n),f=i,m=u["".concat(p,".").concat(f)]||u[f]||d[f]||r;return n?o.createElement(m,a(a({ref:t},l),{},{components:n})):o.createElement(m,a({ref:t},l))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,a=new Array(r);a[0]=f;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:i,a[1]=s;for(var c=2;c<r;c++)a[c]=n[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}f.displayName="MDXCreateElement"},79284:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var o=n(487462),i=(n(667294),n(603905));const r={},a="Configuration",s={unversionedId:"devops/kubernetes/concepts-and-overview/configuration/readme",id:"devops/kubernetes/concepts-and-overview/configuration/readme",title:"Configuration",description:"- Configuration Best Practices",source:"@site/docs/devops/kubernetes/concepts-and-overview/configuration/readme.md",sourceDirName:"devops/kubernetes/concepts-and-overview/configuration",slug:"/devops/kubernetes/concepts-and-overview/configuration/",permalink:"/devops/kubernetes/concepts-and-overview/configuration/",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/devops/kubernetes/concepts-and-overview/configuration/readme.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Concepts & Overview",permalink:"/devops/kubernetes/concepts-and-overview/"},next:{title:"Secrets",permalink:"/devops/kubernetes/concepts-and-overview/configuration/secrets"}},p={},c=[{value:"Assigning pods to nodes",id:"assigning-pods-to-nodes",level:2},{value:"Taints and Tolerations",id:"taints-and-tolerations",level:2},{value:"Pods Priority and Preemption",id:"pods-priority-and-preemption",level:2},{value:"Configmaps",id:"configmaps",level:2},{value:"Secrets vs ConfigMaps",id:"secrets-vs-configmaps",level:2}],l={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,o.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"configuration"},"Configuration"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/configuration/overview/"},"Configuration Best Practices")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/configuration/configmap/"},"ConfigMaps")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/configuration/secret/"},"Secrets")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"},"Managing Resources for Containers")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/configuration/pod-overhead/"},"Pod Overhead")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/configuration/resource-bin-packing/"},"Resource Bin Packing for Extended Resources")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/"},"Organizing Cluster Access Using kubeconfig Files")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/"},"Pod Priority and Preemption"))),(0,i.kt)("h2",{id:"assigning-pods-to-nodes"},"Assigning pods to nodes"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector"},"nodeSelector")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#built-in-node-labels"},"Interlude: built-in node labels")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#node-isolation-restriction"},"Node isolation/restriction")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity"},"Affinity and anti-affinity"))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node"},"https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: Pod\nmetadata:\n  name: with-node-affinity\nspec:\n  affinity:\n    nodeAffinity:\n      requiredDuringSchedulingIgnoredDuringExecution:\n        nodeSelectorTerms:\n        - matchExpressions:\n          - key: kubernetes.io/e2e-az-name\n            operator: In\n            values:\n            - e2e-az1\n            - e2e-az2\n      preferredDuringSchedulingIgnoredDuringExecution:\n      - weight: 1\n        preference:\n          matchExpressions:\n          - key: another-node-label-key\n            operator: In\n            values:\n            - another-node-label-value\n  containers:\n  - name: with-node-affinity\n    image: k8s.gcr.io/pause:2.0\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodename"},"nodeName"))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/configuration/assign-pod-node"},"https://kubernetes.io/docs/concepts/configuration/assign-pod-node")),(0,i.kt)("h2",{id:"taints-and-tolerations"},"Taints and Tolerations"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/#taint-based-evictions"},"Taint based Evictions")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/#taint-nodes-by-condition"},"Taint Nodes by Condition"))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/configuration/taint-and-toleration"},"https://kubernetes.io/docs/concepts/configuration/taint-and-toleration")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/aks/operator-best-practices-advanced-scheduler#provide-dedicated-nodes-using-taints-and-tolerations"},"https://docs.microsoft.com/en-us/azure/aks/operator-best-practices-advanced-scheduler#provide-dedicated-nodes-using-taints-and-tolerations")),(0,i.kt)("p",null,"Node affinity is a property of Pods that attracts them to a set of nodes (either as a preference or a hard requirement). Taints are theopposite --they allow a node to repel a set of pods. Tolerations are applied to pods, and allow (but do not require) the pods to schedule onto nodes with matching taints."),(0,i.kt)("h2",{id:"pods-priority-and-preemption"},"Pods Priority and Preemption"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#how-to-use-priority-and-preemption"},"How to use priority and preemption")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#how-to-disable-preemption"},"How to disable preemption")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass"},"PriorityClass")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#pod-priority"},"Pod priority")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#preemption"},"Preemption")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#debugging-pod-priority-and-preemption"},"Debugging Pod Priority and Preemption")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#interactions-of-pod-priority-and-qos"},"Interactions of Pod priority and QoS"))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption"},"https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption")),(0,i.kt)("h2",{id:"configmaps"},"Configmaps"),(0,i.kt)("p",null,"A ConfigMap is an API object used to store non-confidential data in key-value pairs.",(0,i.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/workloads/pods/pod-overview/"},"Pods")," can consume ConfigMaps as environment variables, command-line arguments, or as configuration files in a ",(0,i.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/storage/volumes/"},"volume"),"."),(0,i.kt)("p",null,"A ConfigMap allows you to decouple environment-specific configuration from your ",(0,i.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/reference/glossary/?all=true#term-image"},"container images"),", so that your applications are easily portable."),(0,i.kt)("p",null,"ConfigMaps can be consumed in various ways:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Pod environmental variables from single or multiple ConfigMaps"),(0,i.kt)("li",{parentName:"ul"},"Use ConfigMap values in Pod commands"),(0,i.kt)("li",{parentName:"ul"},"Populate Volume from ConfigMap"),(0,i.kt)("li",{parentName:"ul"},"Add ConfigMap data to specific path in Volume"),(0,i.kt)("li",{parentName:"ul"},"Set file names and access mode in Volume from ConfigMap data"),(0,i.kt)("li",{parentName:"ul"},"Can be used by system components and controllers")),(0,i.kt)("p",null,"Like secrets, you can use ConfigMaps as environment variablesor using a volume mount. Theymust exist prior to being used by a Pod, unless marked asoptional. They also reside in a specific namespace."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"env:\n- name: SPECIAL_LEVEL_KEY\n   valueFrom:\n      configMapKeyRef:\n      name: special-config\n      key: special.how\n")),(0,i.kt)("p",null,"With volumes, youdefine a volume with theconfigMaptype in your podand mount it where it needs to be used."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"volumes:\n- name: config-volume\n   configMap:\n    name: special-config\n")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/configuration/configmap"},"https://kubernetes.io/docs/concepts/configuration/configmap")),(0,i.kt)("h2",{id:"secrets-vs-configmaps"},"Secrets vs ConfigMaps"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Use secrets for things which are actually secret like API keys, credentials, etc"),(0,i.kt)("li",{parentName:"ol"},"Use config map for not-secret configuration data")),(0,i.kt)("p",null,"In the future there will likely be some differentiators for secrets like rotation or support for backing the secret API w/ HSMs, etc. In general we like intent-based APIs, and the intent is definitely different for secret data vs. plain old configs."))}d.isMDXComponent=!0}}]);