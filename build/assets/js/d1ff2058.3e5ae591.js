"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9511],{603905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(667294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(r),m=a,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return r?n.createElement(f,i(i({ref:t},p),{},{components:r})):n.createElement(f,i({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[u]="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},572398:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var n=r(487462),a=(r(667294),r(603905));const o={},i="React Native",c={unversionedId:"frontend/react/react-native",id:"frontend/react/react-native",title:"React Native",description:"Interaction Manager",source:"@site/docs/frontend/react/react-native.md",sourceDirName:"frontend/react",slug:"/frontend/react/react-native",permalink:"/frontend/react/react-native",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/frontend/react/react-native.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"React DOM",permalink:"/frontend/react/react-dom"},next:{title:"React Router",permalink:"/frontend/react/react-router"}},l={},s=[{value:"Interaction Manager",id:"interaction-manager",level:2},{value:"Commands",id:"commands",level:2},{value:"Others",id:"others",level:2}],p={toc:s},u="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"react-native"},"React Native"),(0,a.kt)("h2",{id:"interaction-manager"},"Interaction Manager"),(0,a.kt)("p",null,'TheInteractionManageris the native module responsible for deferring the execution of a function until an "interaction" has finished. We can callInteractionManager.runAfterInteractions(() => {...})to handle this deferral. We can also register our own interactions.'),(0,a.kt)("p",null,"InteractionManageris very important because React Native has two threads. There is a JavaScript UI thread which handles drawing updates to the screen, and another thread used for all tasks not on the UI thread. Since there is only one thread for making UI updates, it can get overloaded and drop frames, especially during things like navigation screen animations. We use theInteractionManagerto ensure that our function is executedafterthese animations occur so that we do not drop frames on the UI thread. Trying to draw a new screen while it is being animated is often too much for the thread to handle."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.toptal.com/react-native/interview-questions"},"https://www.toptal.com/react-native/interview-questions")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.javatpoint.com/react-native-interview-questions"},"https://www.javatpoint.com/react-native-interview-questions")),(0,a.kt)("h2",{id:"commands"},"Commands"),(0,a.kt)("p",null,"react-native init ReactNativeWeb"),(0,a.kt)("p",null,"cd ReactNativeWeb"),(0,a.kt)("p",null,"react-native run-ios"),(0,a.kt)("p",null,"react-native run-android"),(0,a.kt)("h2",{id:"others"},"Others"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"SafeAreaView"),(0,a.kt)("li",{parentName:"ul"},"BackHandler")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://medium.com/corebuild-software/easily-optimise-your-react-native-components-rendering-8deb22176c8a"},"https://medium.com/corebuild-software/easily-optimise-your-react-native-components-rendering-8deb22176c8a")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://shopify.engineering/migrating-our-largest-mobile-app-to-react-native"},"Migrating our Largest Mobile App to React Native (2023)")))}d.isMDXComponent=!0}}]);