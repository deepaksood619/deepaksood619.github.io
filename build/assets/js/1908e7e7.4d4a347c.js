"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[29462],{603905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>p});var a=t(667294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=a.createContext({}),d=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=d(e.components);return a.createElement(s.Provider,{value:n},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},E=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=d(t),E=i,p=m["".concat(s,".").concat(E)]||m[E]||c[E]||r;return t?a.createElement(p,l(l({ref:n},u),{},{components:t})):a.createElement(p,l({ref:n},u))}));function p(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,l=new Array(r);l[0]=E;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[m]="string"==typeof e?e:i,l[1]=o;for(var d=2;d<r;d++)l[d]=t[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}E.displayName="MDXCreateElement"},807525:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var a=t(487462),i=(t(667294),t(603905));const r={},l="DDL - Data Definition Language",o={unversionedId:"languages/sql/ddl-data-definition-language/readme",id:"languages/sql/ddl-data-definition-language/readme",title:"DDL - Data Definition Language",description:"DDL (Data Definition Language)",source:"@site/docs/languages/sql/ddl-data-definition-language/readme.md",sourceDirName:"languages/sql/ddl-data-definition-language",slug:"/languages/sql/ddl-data-definition-language/",permalink:"/languages/sql/ddl-data-definition-language/",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/languages/sql/ddl-data-definition-language/readme.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"DCL - Data Control Language",permalink:"/languages/sql/dcl-data-control-language"},next:{title:"Create Table",permalink:"/languages/sql/ddl-data-definition-language/create-table"}},s={},d=[{value:"DDL (Data Definition Language)",id:"ddl-data-definition-language",level:2}],u={toc:d},m="wrapper";function c(e){let{components:n,...t}=e;return(0,i.kt)(m,(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"ddl---data-definition-language"},"DDL - Data Definition Language"),(0,i.kt)("h2",{id:"ddl-data-definition-language"},"DDL (Data Definition Language)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Create")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Alter")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Drop")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Rename")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Truncate")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Comment"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"ALTER USER\n ALTER USER 'lms_p2021020917'@'%' IDENTIFIED BY '00IN0hBGVZ7ABMFS';\n FLUSH PRIVILEGES;\n\nCREATE DATABASE\n CREATE DATABASE database_name\n\nCREATE INDEX\n CREATE INDEX index_name\n ON table_name (column_name)\n or\n CREATE UNIQUE INDEX index_name\n ON table_name (column_name)\n  CREATE UNIQUE INDEX index_name\n  ON table_name(index_column_1,index_column_2,...);\n\n ALTER TABLE `installment_fip` ADD INDEX `installment_fip_idx_inst_custom_is_del_inst_inst` (`inst_number`,`customer_facing`,`is_delete`,`inst_status`,`inst_date`);\n ALTER TABLE `installment_fip` ADD INDEX `installment_fip_idx_inst_custom_is_del_inst_emi_id` (`inst_number`,`customer_facing`,`is_delete`,`inst_status`,`emi_status_id`);\n ALTER TABLE `st_comment` ADD INDEX `st_comment_idx_status_status_loan_id_id` (`status_type_id`,`status_id`,`loan_id`,`id`);\n ALTER TABLE `st_loan` ADD INDEX `st_loan_idx_customer_id_product_code` (`customer_id`,`product_code`);\n ALTER TABLE `user_logins` ADD INDEX `user_logins_idx_publish_dept` (`publish`,`dept`);\n\n Show Unused indexes\n  select * from sys.schema_unused_indexes;\n\n  https://www.eversql.com/how-to-find-unused-indexes-in-a-mysql-database/\n\nCREATE VIEW\n CREATE VIEW view_name AS\n SELECT column_name(s)\n FROM table_name\n WHERE condition\n\nDROP DATABASE\n DROP DATABASE database_name\n\nDROP INDEX\n DROP INDEX table_name.index_name (SQL Server)\n DROP INDEX index_name ON table_name (MS Access)\n DROP INDEX index_name (DB2/Oracle)\n ALTER TABLE table_name\n DROP INDEX index_name on table_name (MySQL)\n\nDROP TABLE\n DROP TABLE table_name\n\nDROP COLUMN\n ALTER TABLE st_quickwallet_payment DROP COLUMN payment_notes;\n\nTRUNCATE TABLE\n TRUNCATE TABLE table_name\n\n The TRUNCATE TABLE statement removes all the rows from a table more quickly than a DELETE. Logically, TRUNCATE TABLE is similar to the DELETE statement with no WHERE clause.\n\n The TRUNCATE TABLE statement removes all the rows from a table, but the table structure and its columns, constraints, indexes, and so on remain intact.\n\nALTER SCHEMA\n ALTER SCHEMA NewSchema\nTRANSFER OldSchema.TableName;\n")))}c.isMDXComponent=!0}}]);