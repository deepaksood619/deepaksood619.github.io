"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[55941],{603905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>d});var n=a(667294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(a),m=r,d=u["".concat(l,".").concat(m)]||u[m]||h[m]||i;return a?n.createElement(d,s(s({ref:t},p),{},{components:a})):n.createElement(d,s({ref:t},p))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,s=new Array(i);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:r,s[1]=o;for(var c=2;c<i;c++)s[c]=a[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},159697:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var n=a(487462),r=(a(667294),a(603905));const i={},s="Promises",o={unversionedId:"frontend/js-javascript/promises",id:"frontend/js-javascript/promises",title:"Promises",description:"1. Is single threaded",source:"@site/docs/frontend/js-javascript/promises.md",sourceDirName:"frontend/js-javascript",slug:"/frontend/js-javascript/promises",permalink:"/frontend/js-javascript/promises",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/frontend/js-javascript/promises.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Others",permalink:"/frontend/js-javascript/others"},next:{title:"Questions",permalink:"/frontend/js-javascript/questions"}},l={},c=[{value:"What are async and await?",id:"what-are-async-and-await",level:2},{value:"What is callback hell?",id:"what-is-callback-hell",level:2},{value:"What are JavaScript promises?",id:"what-are-javascript-promises",level:2},{value:"What is Node.js promise?",id:"what-is-nodejs-promise",level:2},{value:"What is a promise in JavaScript?",id:"what-is-a-promise-in-javascript",level:2},{value:"What is the use of callback function in JavaScript?",id:"what-is-the-use-of-callback-function-in-javascript",level:2},{value:"What is an async function?",id:"what-is-an-async-function",level:2}],p={toc:c},u="wrapper";function h(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"promises"},"Promises"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Is single threaded")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Run on the same queue as painting, updating styles and handling user actions.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Terminology"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Fulfilled")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Rejected")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Pending")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Settled")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Chaining (Promises can be chained together to execute one after other)")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Parallelism and sequencing"))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://developers.google.com/web/fundamentals/primers/promises#whats-all-the-fuss-about"},"https://developers.google.com/web/fundamentals/primers/promises#whats-all-the-fuss-about")),(0,r.kt)("h2",{id:"what-are-async-and-await"},"What are async and await?"),(0,r.kt)("p",null,"Async/await statements are syntactic sugar created on top of JavaScript Promises. They allow us to write Promise-based code as if it were synchronous, but without blocking the main thread."),(0,r.kt)("h2",{id:"what-is-callback-hell"},"What is callback hell?"),(0,r.kt)("p",null,"In JavaScript, callback hell is an anti-pattern in code that happens as a result of poor structuring of asynchronous code. It is usually seen when programmers try to force a visual top-down structure in their asynchronous callback-based JavaScript code."),(0,r.kt)("h2",{id:"what-are-javascript-promises"},"What are JavaScript promises?"),(0,r.kt)("p",null,"A promise in JavaScript is like a placeholder value that is expected to eventually resolve into the final successful result value or reason for failure."),(0,r.kt)("h2",{id:"what-is-nodejs-promise"},"What is Node.js promise?"),(0,r.kt)("p",null,"A promise may at first glance look like syntactic sugar for a callback but actually, it isn't. A promise may serve the same purpose of a callback in a different way but underneath it is so much different. ",(0,r.kt)("a",{parentName:"p",href:"https://www.promisejs.org"},"https://www.promisejs.org")),(0,r.kt)("h2",{id:"what-is-a-promise-in-javascript"},"What is a promise in JavaScript?"),(0,r.kt)("p",null,"It's the same exact thing as in Node.js. Actually, Node.js is just JavaScript running outside the browser in an environment using Google Chrome's very own JavaScript engine V8."),(0,r.kt)("h2",{id:"what-is-the-use-of-callback-function-in-javascript"},"What is the use of callback function in JavaScript?"),(0,r.kt)("p",null,"JavaScript is a single-threaded language. And since it can't spawn more threads, if an I/O operation is started, it will block the execution of the main (and only) thread. Therefore, it has what is called a callback. A callback is a function passed to an I/O operation that gets called when that operation has been completed."),(0,r.kt)("h2",{id:"what-is-an-async-function"},"What is an async function?"),(0,r.kt)("p",null,"An async function is a function that returns a promise. The special thing about this type of function is that you can use the word await which allows you to pause the execution of a function when a promise is called without having to use the then function to retrieve the value from the promise."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.toptal.com/nodejs/benchmark-nodejs-promise"},"https://www.toptal.com/nodejs/benchmark-nodejs-promise")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=DHvZLI7Db8E"},"JavaScript Promises In 10 Minutes")))}h.isMDXComponent=!0}}]);