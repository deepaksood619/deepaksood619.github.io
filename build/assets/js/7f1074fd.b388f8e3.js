"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[35885],{603905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(667294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=l(n),m=a,h=c["".concat(p,".").concat(m)]||c[m]||y[m]||o;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[c]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},549311:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>y,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(487462),a=(n(667294),n(603905));const o={},i="4. Built-in Types",s={unversionedId:"python/documentation/04-built-in-types",id:"python/documentation/04-built-in-types",title:"4. Built-in Types",description:"4.1. Truth Value Testing",source:"@site/docs/python/documentation/04-built-in-types.md",sourceDirName:"python/documentation",slug:"/python/documentation/04-built-in-types",permalink:"/python/documentation/04-built-in-types",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/python/documentation/04-built-in-types.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"3. Built-in Constants",permalink:"/python/documentation/03-built-in-constants"},next:{title:"6. Text Processing Services",permalink:"/python/documentation/06-text-processing-services"}},p={},l=[{value:"4.4. Numeric Types - int, float, complex",id:"44-numeric-types---int-float-complex",level:2},{value:"4.6. Sequence Types - list, tuple, range",id:"46-sequence-types---list-tuple-range",level:2},{value:"4.9. Set Types - set, frozenset",id:"49-set-types---set-frozenset",level:2},{value:"4.10. Mapping Types - dict",id:"410-mapping-types---dict",level:2},{value:"integers",id:"integers",level:2},{value:"Bytes / bytearray",id:"bytes--bytearray",level:2},{value:"Other Types",id:"other-types",level:2},{value:"FrozenSet",id:"frozenset",level:2},{value:"Set vs FrozenSet",id:"set-vs-frozenset",level:2}],u={toc:l},c="wrapper";function y(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"4-built-in-types"},"4. Built-in Types"),(0,a.kt)("p",null,"4.1. Truth Value Testing"),(0,a.kt)("p",null,"4.2. Boolean Operations - and, or, not"),(0,a.kt)("p",null,"4.3. Comparisions"),(0,a.kt)("h2",{id:"44-numeric-types---int-float-complex"},"4.4. Numeric Types - int, float, complex"),(0,a.kt)("p",null,"4.5. Iterator Types"),(0,a.kt)("h2",{id:"46-sequence-types---list-tuple-range"},"4.6. Sequence Types - list, tuple, range"),(0,a.kt)("p",null,"4.7. Text Sequence Types - str"),(0,a.kt)("p",null,"4.8. Binary Sequence Types - bytes, bytearray, memoryview"),(0,a.kt)("h2",{id:"49-set-types---set-frozenset"},"4.9. Set Types - set, frozenset"),(0,a.kt)("h2",{id:"410-mapping-types---dict"},"4.10. Mapping Types - dict"),(0,a.kt)("p",null,"4.11. Context Manager Types"),(0,a.kt)("p",null,"4.12. Other Built-in Types"),(0,a.kt)("p",null,"4.13. Special Attributes"),(0,a.kt)("h2",{id:"integers"},"integers"),(0,a.kt)("p",null,"1.2-1.0"),(0,a.kt)("p",null,"0.19999999999999996"),(0,a.kt)("p",null,"round(1.2-1.0, 1)"),(0,a.kt)("p",null,"0.2"),(0,a.kt)("p",null,"1.1*3"),(0,a.kt)("p",null,"3.3000000000000003"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://medium.com/code-85/how-to-stop-floating-point-arithmetic-errors-in-python-a98d3a63ccc8"},"https://medium.com/code-85/how-to-stop-floating-point-arithmetic-errors-in-python-a98d3a63ccc8")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.geeksforgeeks.org/floating-point-error-in-python"},"https://www.geeksforgeeks.org/floating-point-error-in-python")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://betterprogramming.pub/floating-point-numbers-are-weird-in-python-heres-how-to-fix-them-51336e4ad51a"},"https://betterprogramming.pub/floating-point-numbers-are-weird-in-python-heres-how-to-fix-them-51336e4ad51a")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3/tutorial/floatingpoint.html"},"https://docs.python.org/3/tutorial/floatingpoint.html")),(0,a.kt)("h2",{id:"bytes--bytearray"},"Bytes / bytearray"),(0,a.kt)("p",null,"Abytesobject is immutable. If you want a binary sequence that can be modified, you should use abytearray."),(0,a.kt)("p",null,"It possible to create abytearrayobject directly from abytesobject, as shown below:"),(0,a.kt)("p",null,"array_of_bytes = bytearray(b'15x80a#')"),(0,a.kt)("p",null,"Thebytesobject is one of the core built-in types for manipulating binary data. Abytesobject is an immutable sequence of single ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Byte"},"byte")," values. Each element in abytesobject is a small integer in the range0to255."),(0,a.kt)("h2",{id:"other-types"},"Other Types"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Classes")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Instances")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Exception"))),(0,a.kt)("h2",{id:"frozenset"},"FrozenSet"),(0,a.kt)("p",null,"Return a new set or frozenset object whose elements are taken from ",(0,a.kt)("em",{parentName:"p"},"iterable"),". The elements of a set must be ",(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3/glossary.html#term-hashable"},"hashable"),". To represent sets of sets, the inner sets must be ",(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/stdtypes.html#frozenset"},"frozenset")," objects. If ",(0,a.kt)("em",{parentName:"p"},"iterable"),"is not specified, a new empty set is returned."),(0,a.kt)("h2",{id:"set-vs-frozenset"},"Set vs FrozenSet"),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/stdtypes.html#set"},"set")," type is mutable - the contents can be changed using methods likeadd() andremove(). Since it is mutable, it has no hash value and cannot be used as either a dictionary key or as an element of another set. The ",(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/stdtypes.html#frozenset"},"frozenset")," type is immutable and ",(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3/glossary.html#term-hashable"},"hashable"),"--- its contents cannot be altered after it is created; it can therefore be used as a dictionary key or as an element of another set."))}y.isMDXComponent=!0}}]);