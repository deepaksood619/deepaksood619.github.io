"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1718],{603905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>k});var l=a(667294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,l,r=function(e,t){if(null==e)return{};var a,l,r={},n=Object.keys(e);for(l=0;l<n.length;l++)a=n[l],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(l=0;l<n.length;l++)a=n[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=l.createContext({}),u=function(e){var t=l.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=u(e.components);return l.createElement(p.Provider,{value:t},e.children)},s="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},d=l.forwardRef((function(e,t){var a=e.components,r=e.mdxType,n=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),s=u(a),d=r,k=s["".concat(p,".").concat(d)]||s[d]||c[d]||n;return a?l.createElement(k,i(i({ref:t},m),{},{components:a})):l.createElement(k,i({ref:t},m))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=a.length,i=new Array(n);i[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[s]="string"==typeof e?e:r,i[1]=o;for(var u=2;u<n;u++)i[u]=a[u];return l.createElement.apply(null,i)}return l.createElement.apply(null,a)}d.displayName="MDXCreateElement"},395979:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>n,metadata:()=>o,toc:()=>u});var l=a(487462),r=(a(667294),a(603905));const n={},i="Editors",o={unversionedId:"devops/terminal-bash/tools/editors",id:"devops/terminal-bash/tools/editors",title:"Editors",description:"Commenting multiple using the terminal",source:"@site/docs/devops/terminal-bash/tools/editors.md",sourceDirName:"devops/terminal-bash/tools",slug:"/devops/terminal-bash/tools/editors",permalink:"/devops/terminal-bash/tools/editors",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/devops/terminal-bash/tools/editors.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Curl",permalink:"/devops/terminal-bash/tools/curl"},next:{title:"Mosh",permalink:"/devops/terminal-bash/tools/mosh"}},p={},u=[{value:"Commenting multiple using the terminal",id:"commenting-multiple-using-the-terminal",level:2},{value:"Uncommenting Multiple Lines",id:"uncommenting-multiple-lines",level:2},{value:"VIM",id:"vim",level:2},{value:"Global",id:"global",level:2},{value:"Cursor movement",id:"cursor-movement",level:2},{value:"Insert mode - inserting/appending text",id:"insert-mode---insertingappending-text",level:2},{value:"Editing",id:"editing",level:2},{value:"Marking text (visual mode)",id:"marking-text-visual-mode",level:2},{value:"Visual commands",id:"visual-commands",level:2},{value:"Registers",id:"registers",level:2},{value:"Marks",id:"marks",level:2},{value:"Macros",id:"macros",level:2},{value:"Cut and paste",id:"cut-and-paste",level:2},{value:"Exiting",id:"exiting",level:2},{value:"Search and replace",id:"search-and-replace",level:2},{value:"Search in multiple files",id:"search-in-multiple-files",level:2},{value:"Working with multiple files",id:"working-with-multiple-files",level:2},{value:"Nano",id:"nano",level:2}],m={toc:u},s="wrapper";function c(e){let{components:t,...a}=e;return(0,r.kt)(s,(0,l.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"editors"},"Editors"),(0,r.kt)("h2",{id:"commenting-multiple-using-the-terminal"},"Commenting multiple using the terminal"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"First, pressESC")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Go to the line from which you want to start commenting. Then, pressctrl + v, this will enable the visual block mode.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"use thedown arrowto select multiple lines that you want to comment.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Now, pressSHIFT + Ito enable insert mode.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Press#and it will add a comment to the first line. Then pressECSand wait for a second,#will be added to all the lines."))),(0,r.kt)("h2",{id:"uncommenting-multiple-lines"},"Uncommenting Multiple Lines"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"PressCTRL + Vto enable visual block mode.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Move down and select the lines till you want to uncomment.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"pressxand it will uncomment all the selected lines at once."))),(0,r.kt)("h2",{id:"vim"},"VIM"),(0,r.kt)("h2",{id:"global"},"Global"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},":help keyword- open help for keyword"),(0,r.kt)("li",{parentName:"ul"},":saveas file- save file as"),(0,r.kt)("li",{parentName:"ul"},":close- close current pane"),(0,r.kt)("li",{parentName:"ul"},"K- open man page for word under the cursor")),(0,r.kt)("h2",{id:"cursor-movement"},"Cursor movement"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"h- move cursor left"),(0,r.kt)("li",{parentName:"ul"},"j- move cursor down"),(0,r.kt)("li",{parentName:"ul"},"k- move cursor up"),(0,r.kt)("li",{parentName:"ul"},"l- move cursor right"),(0,r.kt)("li",{parentName:"ul"},"H- move to top of screen"),(0,r.kt)("li",{parentName:"ul"},"M- move to middle of screen"),(0,r.kt)("li",{parentName:"ul"},"L- move to bottom of screen"),(0,r.kt)("li",{parentName:"ul"},"w- jump forwards to the start of a word"),(0,r.kt)("li",{parentName:"ul"},"W- jump forwards to the start of a word (words can contain punctuation)"),(0,r.kt)("li",{parentName:"ul"},"e- jump forwards to the end of a word"),(0,r.kt)("li",{parentName:"ul"},"E- jump forwards to the end of a word (words can contain punctuation)"),(0,r.kt)("li",{parentName:"ul"},"b- jump backwards to the start of a word"),(0,r.kt)("li",{parentName:"ul"},"B- jump backwards to the start of a word (words can contain punctuation)"),(0,r.kt)("li",{parentName:"ul"},"%- move to matching character (default supported pairs: '()', '{}', '[]' - use:h matchpairsin vim for more info)"),(0,r.kt)("li",{parentName:"ul"},"0- jump to the start of the line"),(0,r.kt)("li",{parentName:"ul"},"^- jump to the first non-blank character of the line"),(0,r.kt)("li",{parentName:"ul"},"$- jump to the end of the line"),(0,r.kt)("li",{parentName:"ul"},"g_- jump to the last non-blank character of the line"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"gg- go to the first line of the document")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"G- go to the last line of the document")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"5G- go to line 5")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"dgg - delete everything from your current line to the top of the file")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"dG - delete all lines at or below the current one")),(0,r.kt)("li",{parentName:"ul"},"fx- jump to next occurrence of character x"),(0,r.kt)("li",{parentName:"ul"},"tx- jump to before next occurrence of character x"),(0,r.kt)("li",{parentName:"ul"},"Fx- jump to previous occurence of character x"),(0,r.kt)("li",{parentName:"ul"},"Tx- jump to after previous occurence of character x"),(0,r.kt)("li",{parentName:"ul"},";- repeat previous f, t, F or T movement"),(0,r.kt)("li",{parentName:"ul"},",- repeat previous f, t, F or T movement, backwards"),(0,r.kt)("li",{parentName:"ul"},"}- jump to next paragraph (or function/block, when editing code)"),(0,r.kt)("li",{parentName:"ul"},"{- jump to previous paragraph (or function/block, when editing code)"),(0,r.kt)("li",{parentName:"ul"},"zz- center cursor on screen"),(0,r.kt)("li",{parentName:"ul"},"Ctrl+e- move screen down one line (without moving cursor)"),(0,r.kt)("li",{parentName:"ul"},"Ctrl+y- move screen up one line (without moving cursor)"),(0,r.kt)("li",{parentName:"ul"},"Ctrl+b- move back one full screen"),(0,r.kt)("li",{parentName:"ul"},"Ctrl+f- move forward one full screen"),(0,r.kt)("li",{parentName:"ul"},"Ctrl+d- move forward 1/2 a screen"),(0,r.kt)("li",{parentName:"ul"},"Ctrl+u- move back 1/2 a screen")),(0,r.kt)("p",null,"TipPrefix a cursor movement command with a number to repeat it. For example,4jmoves down 4 lines."),(0,r.kt)("h2",{id:"insert-mode---insertingappending-text"},"Insert mode - inserting/appending text"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"i- insert before the cursor"),(0,r.kt)("li",{parentName:"ul"},"I- insert at the beginning of the line"),(0,r.kt)("li",{parentName:"ul"},"a- insert (append) after the cursor"),(0,r.kt)("li",{parentName:"ul"},"A- insert (append) at the end of the line"),(0,r.kt)("li",{parentName:"ul"},"o- append (open) a new line below the current line"),(0,r.kt)("li",{parentName:"ul"},"O- append (open) a new line above the current line"),(0,r.kt)("li",{parentName:"ul"},"ea- insert (append) at the end of the word"),(0,r.kt)("li",{parentName:"ul"},"Esc- exit insert mode")),(0,r.kt)("h2",{id:"editing"},"Editing"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"r- replace a single character"),(0,r.kt)("li",{parentName:"ul"},"J- join line below to the current one with one space in between"),(0,r.kt)("li",{parentName:"ul"},"gJ- join line below to the current one without space in between"),(0,r.kt)("li",{parentName:"ul"},"gwip- reflow paragraph"),(0,r.kt)("li",{parentName:"ul"},"cc- change (replace) entire line"),(0,r.kt)("li",{parentName:"ul"},"c$- change (replace) to the end of the line"),(0,r.kt)("li",{parentName:"ul"},"ciw- change (replace) entire word"),(0,r.kt)("li",{parentName:"ul"},"cw- change (replace) to the end of the word"),(0,r.kt)("li",{parentName:"ul"},"s- delete character and substitute text"),(0,r.kt)("li",{parentName:"ul"},"S- delete line and substitute text (same as cc)"),(0,r.kt)("li",{parentName:"ul"},"xp- transpose two letters (delete and paste)"),(0,r.kt)("li",{parentName:"ul"},"u- undo"),(0,r.kt)("li",{parentName:"ul"},"Ctrl+r- redo"),(0,r.kt)("li",{parentName:"ul"},".- repeat last command")),(0,r.kt)("h2",{id:"marking-text-visual-mode"},"Marking text (visual mode)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"v- start visual mode, mark lines, then do a command (like y-yank)"),(0,r.kt)("li",{parentName:"ul"},"V- start linewise visual mode"),(0,r.kt)("li",{parentName:"ul"},"o- move to other end of marked area"),(0,r.kt)("li",{parentName:"ul"},"Ctrl+v- start visual block mode"),(0,r.kt)("li",{parentName:"ul"},"O- move to other corner of block"),(0,r.kt)("li",{parentName:"ul"},"aw- mark a word"),(0,r.kt)("li",{parentName:"ul"},"ab- a block with ()"),(0,r.kt)("li",{parentName:"ul"},"aB- a block with {}"),(0,r.kt)("li",{parentName:"ul"},"ib- inner block with ()"),(0,r.kt)("li",{parentName:"ul"},"iB- inner block with {}"),(0,r.kt)("li",{parentName:"ul"},"Esc- exit visual mode")),(0,r.kt)("h2",{id:"visual-commands"},"Visual commands"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"shift text right")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"<- shift text left")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"y- yank (copy) marked text")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"d- delete marked text")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"~- switch case"))),(0,r.kt)("h2",{id:"registers"},"Registers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},":reg- show registers content"),(0,r.kt)("li",{parentName:"ul"},'"xy- yank into register x'),(0,r.kt)("li",{parentName:"ul"},'"xp- paste contents of register x'),(0,r.kt)("li",{parentName:"ul"},":%y+ - copy all lines")),(0,r.kt)("p",null,"TipRegisters are being stored in ~/.viminfo, and will be loaded again on next restart of vim."),(0,r.kt)("p",null,"TipRegister 0 contains always the value of the last yank command."),(0,r.kt)("h2",{id:"marks"},"Marks"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},":marks- list of marks"),(0,r.kt)("li",{parentName:"ul"},"ma- set current position for mark A"),(0,r.kt)("li",{parentName:"ul"},"`a- jump to position of mark A"),(0,r.kt)("li",{parentName:"ul"},"y`a- yank text to position of mark A")),(0,r.kt)("h2",{id:"macros"},"Macros"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"qa- record macro a"),(0,r.kt)("li",{parentName:"ul"},"q- stop recording macro"),(0,r.kt)("li",{parentName:"ul"},"@a- run macro a"),(0,r.kt)("li",{parentName:"ul"},"@@- rerun last run macro")),(0,r.kt)("h2",{id:"cut-and-paste"},"Cut and paste"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"yy- yank (copy) a line"),(0,r.kt)("li",{parentName:"ul"},"2yy- yank (copy) 2 lines"),(0,r.kt)("li",{parentName:"ul"},"yw- yank (copy) the characters of the word from the cursor position to the start of the next word"),(0,r.kt)("li",{parentName:"ul"},"y$- yank (copy) to end of line"),(0,r.kt)("li",{parentName:"ul"},"p- put (paste) the clipboard after cursor"),(0,r.kt)("li",{parentName:"ul"},"P- put (paste) before cursor"),(0,r.kt)("li",{parentName:"ul"},"dd- delete (cut) a line"),(0,r.kt)("li",{parentName:"ul"},"2dd- delete (cut) 2 lines"),(0,r.kt)("li",{parentName:"ul"},"dw- delete (cut) the characters of the word from the cursor position to the start of the next word"),(0,r.kt)("li",{parentName:"ul"},"D- delete (cut) to the end of the line"),(0,r.kt)("li",{parentName:"ul"},"d$- delete (cut) to the end of the line"),(0,r.kt)("li",{parentName:"ul"},"x- delete (cut) character")),(0,r.kt)("h2",{id:"exiting"},"Exiting"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},":w- write (save) the file, but don't exit"),(0,r.kt)("li",{parentName:"ul"},":w !sudo tee %- write out the current file using sudo"),(0,r.kt)("li",{parentName:"ul"},":wqor:xorZZ- write (save) and quit"),(0,r.kt)("li",{parentName:"ul"},":q- quit (fails if there are unsaved changes)"),(0,r.kt)("li",{parentName:"ul"},":q!orZQ- quit and throw away unsaved changes"),(0,r.kt)("li",{parentName:"ul"},":wqa- write (save) and quit on all tabs")),(0,r.kt)("h2",{id:"search-and-replace"},"Search and replace"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"/pattern- search for pattern"),(0,r.kt)("li",{parentName:"ul"},"?pattern- search backward for pattern"),(0,r.kt)("li",{parentName:"ul"},"vpattern- 'very magic' pattern: non-alphanumeric characters are interpreted as special regex symbols (no escaping needed)"),(0,r.kt)("li",{parentName:"ul"},"n- repeat search in same direction"),(0,r.kt)("li",{parentName:"ul"},"N- repeat search in opposite direction"),(0,r.kt)("li",{parentName:"ul"},":%s/old/new/g- replace all old with new throughout file"),(0,r.kt)("li",{parentName:"ul"},":%s/old/new/gc- replace all old with new throughout file with confirmations"),(0,r.kt)("li",{parentName:"ul"},":noh- remove highlighting of search matches")),(0,r.kt)("h2",{id:"search-in-multiple-files"},"Search in multiple files"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},":vimgrep /pattern/ {file}- search for pattern in multiple files")),(0,r.kt)("p",null,"e.g.:vimgrep /foo/ *",(0,r.kt)("em",{parentName:"p"},"/")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},":cn- jump to the next match"),(0,r.kt)("li",{parentName:"ul"},":cp- jump to the previous match"),(0,r.kt)("li",{parentName:"ul"},":copen- open a window containing the list of matches")),(0,r.kt)("h2",{id:"working-with-multiple-files"},"Working with multiple files"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},":e file- edit a file in a new buffer"),(0,r.kt)("li",{parentName:"ul"},":bnextor:bn- go to the next buffer"),(0,r.kt)("li",{parentName:"ul"},":bprevor:bp- go to the previous buffer"),(0,r.kt)("li",{parentName:"ul"},":bd- delete a buffer (close a file)"),(0,r.kt)("li",{parentName:"ul"},":ls- list all open buffers"),(0,r.kt)("li",{parentName:"ul"},":sp file- open a file in a new buffer and split window"),(0,r.kt)("li",{parentName:"ul"},":vsp file- open a file in a new buffer and vertically split window"),(0,r.kt)("li",{parentName:"ul"},"Ctrl+ws- split window"),(0,r.kt)("li",{parentName:"ul"},"Ctrl+ww- switch windows"),(0,r.kt)("li",{parentName:"ul"},"Ctrl+wq- quit a window"),(0,r.kt)("li",{parentName:"ul"},"Ctrl+wv- split window vertically"),(0,r.kt)("li",{parentName:"ul"},"Ctrl+wh- move cursor to the left window (vertical split)"),(0,r.kt)("li",{parentName:"ul"},"Ctrl+wl- move cursor to the right window (vertical split)"),(0,r.kt)("li",{parentName:"ul"},"Ctrl+wj- move cursor to the window below (horizontal split)"),(0,r.kt)("li",{parentName:"ul"},"Ctrl+wk- move cursor to the window above (horizontal split)")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.freecodecamp.org/news/learn-vim-beginners-tutorial"},"https://www.freecodecamp.org/news/learn-vim-beginners-tutorial")),(0,r.kt)("h2",{id:"nano"},"Nano"),(0,r.kt)("p",null,"ctrl + shift + 6 - Visual mode"),(0,r.kt)("p",null,"ctrl + k - cut text"))}c.isMDXComponent=!0}}]);