"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[39804],{603905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var a=n(667294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,g=u["".concat(s,".").concat(m)]||u[m]||d[m]||l;return n?a.createElement(g,i(i({ref:t},p),{},{components:n})):a.createElement(g,i({ref:t},p))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:r,i[1]=o;for(var c=2;c<l;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},800441:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var a=n(487462),r=(n(667294),n(603905));const l={},i="30. Python Runtime Services",o={unversionedId:"python/documentation/30-python-runtime-services",id:"python/documentation/30-python-runtime-services",title:"30. Python Runtime Services",description:"30.1. sys - System-specific parameters and functions",source:"@site/docs/python/documentation/30-python-runtime-services.md",sourceDirName:"python/documentation",slug:"/python/documentation/30-python-runtime-services",permalink:"/python/documentation/30-python-runtime-services",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/python/documentation/30-python-runtime-services.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"28. Debugging and Profiling",permalink:"/python/documentation/28-debugging-and-profiling"},next:{title:"33. Python Language Services",permalink:"/python/documentation/33-python-language-services"}},s={},c=[{value:"30.1. sys - System-specific parameters and functions",id:"301-sys---system-specific-parameters-and-functions",level:2},{value:"30.6. dataclasses - Data Classes",id:"306-dataclasses---data-classes",level:2},{value:"30.7. contextlib - Utilities for with-statement contexts",id:"307-contextlib---utilities-for-with-statement-contexts",level:2},{value:"30.9. atexit - Exit handlers",id:"309-atexit---exit-handlers",level:2},{value:"Sys Module",id:"sys-module",level:2},{value:"Garbage collection",id:"garbage-collection",level:2},{value:"References",id:"references",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"30-python-runtime-services"},"30. Python Runtime Services"),(0,r.kt)("h2",{id:"301-sys---system-specific-parameters-and-functions"},"30.1. sys - System-specific parameters and functions"),(0,r.kt)("p",null,"30.2. sysconfig - Provide access to Python's configuration information"),(0,r.kt)("p",null,"30.2.1. Configuration variables"),(0,r.kt)("p",null,"30.2.2. Installation paths"),(0,r.kt)("p",null,"30.2.3. Other functions"),(0,r.kt)("p",null,"30.2.4. Using sysconfig as a script"),(0,r.kt)("p",null,"30.3. builtins - Built-in objects"),(0,r.kt)("p",null,"30.4. ",(0,r.kt)("strong",{parentName:"p"},"main")," - Top-level script environment"),(0,r.kt)("p",null,"30.5. warnings - Warning control"),(0,r.kt)("p",null,"30.5.1. Warning Categories"),(0,r.kt)("p",null,"30.5.2. The Warnings Filter"),(0,r.kt)("p",null,"30.5.2.1. Describing Warning Filters"),(0,r.kt)("p",null,"30.5.2.2. Default Warning Filter"),(0,r.kt)("p",null,"30.5.2.3. Overriding the default filter"),(0,r.kt)("p",null,"30.5.3. Temporarily Suppressing Warnings"),(0,r.kt)("p",null,"30.5.4. Testing Warnings"),(0,r.kt)("p",null,"30.5.5. Updating Code For New Versions of Dependencies"),(0,r.kt)("p",null,"30.5.6. Available Functions"),(0,r.kt)("p",null,"30.5.7. Available Context Managers"),(0,r.kt)("h2",{id:"306-dataclasses---data-classes"},"30.6. dataclasses - Data Classes"),(0,r.kt)("p",null,"30.6.1. Module-level decorators, classes, and functions"),(0,r.kt)("p",null,"30.6.2. Post-init processing"),(0,r.kt)("p",null,"30.6.3. Class variables"),(0,r.kt)("p",null,"30.6.4. Init-only variables"),(0,r.kt)("p",null,"30.6.5. Frozen instances"),(0,r.kt)("p",null,"30.6.6. Inheritance"),(0,r.kt)("p",null,"30.6.7. Default factory functions"),(0,r.kt)("p",null,"30.6.8. Mutable default values"),(0,r.kt)("p",null,"30.6.9. Exceptions"),(0,r.kt)("h2",{id:"307-contextlib---utilities-for-with-statement-contexts"},"30.7. contextlib - Utilities for with-statement contexts"),(0,r.kt)("p",null,"30.7.1. Utilities"),(0,r.kt)("p",null,"30.7.2. Examples and Recipes"),(0,r.kt)("p",null,"30.7.2.1. Supporting a variable number of context managers"),(0,r.kt)("p",null,"30.7.2.2. Catching exceptions from ",(0,r.kt)("strong",{parentName:"p"},"enter")," methods"),(0,r.kt)("p",null,"30.7.2.3. Cleaning up in an ",(0,r.kt)("strong",{parentName:"p"},"enter")," implementation"),(0,r.kt)("p",null,"30.7.2.4. Replacing any use of try-finally and flag variables"),(0,r.kt)("p",null,"30.7.2.5. Using a context manager as a function decorator"),(0,r.kt)("p",null,"30.7.3. Single use, reusable and reentrant context managers"),(0,r.kt)("p",null,"30.7.3.1. Reentrant context managers"),(0,r.kt)("p",null,"30.7.3.2. Reusable context managers"),(0,r.kt)("p",null,"30.8. abc - Abstract Base Classes"),(0,r.kt)("h2",{id:"309-atexit---exit-handlers"},"30.9. atexit - Exit handlers"),(0,r.kt)("p",null,"30.9.1. atexit Example"),(0,r.kt)("p",null,"30.10. traceback - Print or retrieve a stack traceback"),(0,r.kt)("p",null,"30.10.1. TracebackException Objects"),(0,r.kt)("p",null,"30.10.2. StackSummary Objects"),(0,r.kt)("p",null,"30.10.3. FrameSummary Objects"),(0,r.kt)("p",null,"30.10.4. Traceback Examples"),(0,r.kt)("p",null,"30.11. ",(0,r.kt)("strong",{parentName:"p"},"future")," - Future statement definitions"),(0,r.kt)("p",null,"30.12. gc - Garbage Collector interface"),(0,r.kt)("p",null,"30.13. inspect - Inspect live objects"),(0,r.kt)("p",null,"30.13.1. Types and members"),(0,r.kt)("p",null,"30.13.2. Retrieving source code"),(0,r.kt)("p",null,"30.13.3. Introspecting callables with the Signature object"),(0,r.kt)("p",null,"30.13.4. Classes and functions"),(0,r.kt)("p",null,"30.13.5. The interpreter stack"),(0,r.kt)("p",null,"30.13.6. Fetching attributes statically"),(0,r.kt)("p",null,"30.13.7. Current State of Generators and Coroutines"),(0,r.kt)("p",null,"30.13.8. Code Objects Bit Flags"),(0,r.kt)("p",null,"30.13.9. Command Line Interface"),(0,r.kt)("p",null,"30.14. site - Site-specific configuration hook"),(0,r.kt)("p",null,"30.14.1. Readline configuration"),(0,r.kt)("p",null,"30.14.2. Module contents"),(0,r.kt)("h2",{id:"sys-module"},"Sys Module"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import sys\n\nsys.getrecursionlimit() #default 3000\n\nsys.setrecursionlimit(86400)\n")),(0,r.kt)("h2",{id:"garbage-collection"},"Garbage collection"),(0,r.kt)("p",null,"Standard CPython's garbage collector has two components, the ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Reference_counting"},"reference counting")," collector and the generationalgarbage collector, known as ",(0,r.kt)("a",{parentName:"p",href:"https://docs.python.org/3.6/library/gc.html"},"gc module"),"."),(0,r.kt)("p",null,"Thereference countingalgorithm is incredibly efficient and straightforward, but it cannot detect reference cycles. That is why Python has a supplemental algorithm called generational cyclic GC, that deals with reference cycles."),(0,r.kt)("p",null,"The reference counting is fundamental to Python and can't be disabled, whereas the cyclic GC is optional and can be used manually."),(0,r.kt)("p",null,"You can always check the number of current references usingsys.getrefcountfunction."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"gc.disable()\n\ngc.isenabled()\n\ngc.enable()\n\ngc.collect()\n")),(0,r.kt)("h2",{id:"references"},"References"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://pythonhosted.org/Pympler/muppy.html"},"https://pythonhosted.org/Pympler/muppy.html")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://rushter.com/blog/python-garbage-collector"},"https://rushter.com/blog/python-garbage-collector")))}d.isMDXComponent=!0}}]);