"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[92559],{603905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>d});var r=a(667294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),o=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},c=function(e){var t=o(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=o(a),u=n,d=m["".concat(l,".").concat(u)]||m[u]||h[u]||i;return a?r.createElement(d,s(s({ref:t},c),{},{components:a})):r.createElement(d,s({ref:t},c))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,s=new Array(i);s[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[m]="string"==typeof e?e:n,s[1]=p;for(var o=2;o<i;o++)s[o]=a[o];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},242473:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>p,toc:()=>o});var r=a(487462),n=(a(667294),a(603905));const i={},s="(2) System Calls",p={unversionedId:"devops/terminal-bash/2-system-calls",id:"devops/terminal-bash/2-system-calls",title:"(2) System Calls",description:"man syscalls",source:"@site/docs/devops/terminal-bash/2-system-calls.md",sourceDirName:"devops/terminal-bash",slug:"/devops/terminal-bash/2-system-calls",permalink:"/devops/terminal-bash/2-system-calls",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/devops/terminal-bash/2-system-calls.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"(1) Linux General / Unix / Linux Commands",permalink:"/devops/terminal-bash/1-linux-general-unix-linux-commands"},next:{title:"(3) Library Functions",permalink:"/devops/terminal-bash/3-library-functions"}},l={},o=[{value:"man syscalls",id:"man-syscalls",level:2},{value:"msync",id:"msync",level:2},{value:"bpf (berkeley packet filter) / eBPF (extended berkeley filter)",id:"bpf-berkeley-packet-filter--ebpf-extended-berkeley-filter",level:2}],c={toc:o},m="wrapper";function h(e){let{components:t,...a}=e;return(0,n.kt)(m,(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"2-system-calls"},"(2) System Calls"),(0,n.kt)("h2",{id:"man-syscalls"},"man syscalls"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"http://man7.org/linux/man-pages/man2/syscalls.2.html"},"http://man7.org/linux/man-pages/man2/syscalls.2.html")),(0,n.kt)("h2",{id:"msync"},"msync"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"msync - synchronize a file with a memory map")),(0,n.kt)("p",null,"msync() flushes changes made to the in-core copy of a file that was mapped into memory using ",(0,n.kt)("a",{parentName:"p",href:"http://man7.org/linux/man-pages/man2/mmap.2.html"},"mmap(2)")," back to the filesystem. Without use of this call, there is no guarantee that changes are written back before ",(0,n.kt)("a",{parentName:"p",href:"http://man7.org/linux/man-pages/man2/munmap.2.html"},"munmap(2)")," is called."),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"http://man7.org/linux/man-pages/man2/msync.2.html"},"http://man7.org/linux/man-pages/man2/msync.2.html")),(0,n.kt)("h2",{id:"bpf-berkeley-packet-filter--ebpf-extended-berkeley-filter"},"bpf (berkeley packet filter) / eBPF (extended berkeley filter)"),(0,n.kt)("p",null,"bpf - perform a command on an extended BPF map or program"),(0,n.kt)("p",null,"TheBerkeley Packet Filter(BPF) provides a raw interface to ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Data_link_layer"},"data link layers"),", permitting raw link-layer packets to be sent and received. It is available on most ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Unix-like"},"Unix-like")," operating systems. In addition, if the driver for the network interface supports ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Promiscuous_mode"},"promiscuous mode"),", it allows the interface to be put into that mode so that all packets on the ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Computer_network"},"network")," can be received, even those destined to other hosts."),(0,n.kt)("p",null,"BPF supports filtering packets, allowing a ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Userspace"},"userspace"),(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Process_(computer_science)"},"process")," to supply a filter program that specifies which packets it wants to receive. For example, a ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Tcpdump"},"tcpdump")," process may only want to receive packets that initiate a TCP connection. BPF only returns packets that pass the filter that the process supplies. This avoids copying unwanted packets from the ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Operating_system"},"operating system"),(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Kernel_(computer_science)"},"kernel")," to the process, greatly improving performance."),(0,n.kt)("p",null,"BPF is sometimes used to refer just to the filtering mechanism, rather than to the entire interface. Some systems, such as ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Linux"},"Linux")," and ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Tru64_UNIX"},"Tru64 UNIX"),", provide a raw interface to the data link layer other than the BPF raw interface but use the BPF filtering mechanisms for that raw interface"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Berkeley_Packet_Filter"},"https://en.wikipedia.org/wiki/Berkeley_Packet_Filter")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://blog.cloudflare.com/cloudflare-architecture-and-how-bpf-eats-the-world"},"https://blog.cloudflare.com/cloudflare-architecture-and-how-bpf-eats-the-world")))}h.isMDXComponent=!0}}]);