"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[39210],{603905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(667294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=l(n),u=a,d=m["".concat(p,".").concat(u)]||m[u]||h[u]||o;return n?r.createElement(d,i(i({ref:t},c),{},{components:n})):r.createElement(d,i({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[m]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},662843:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(487462),a=(n(667294),n(603905));const o={},i="14. File Formats",s={unversionedId:"python/documentation/14-file-formats",id:"python/documentation/14-file-formats",title:"14. File Formats",description:"- 14.1.csv - CSV File Reading and Writing",source:"@site/docs/python/documentation/14-file-formats.md",sourceDirName:"python/documentation",slug:"/python/documentation/14-file-formats",permalink:"/python/documentation/14-file-formats",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/python/documentation/14-file-formats.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"12. Data Persistence",permalink:"/python/documentation/12-data-persistence"},next:{title:"15. Cryptographic Services",permalink:"/python/documentation/15-cryptographic-services"}},p={},l=[{value:"config.ini",id:"configini",level:2},{value:"test.py",id:"testpy",level:2},{value:"Using Python files",id:"using-python-files",level:2},{value:"config.py",id:"configpy",level:2},{value:"main.py",id:"mainpy",level:2},{value:"Using built-in data structure",id:"using-built-in-data-structure",level:2},{value:"Using json",id:"using-json",level:2},{value:"Using dynamicloading",id:"using-dynamicloading",level:2}],c={toc:l},m="wrapper";function h(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"14-file-formats"},"14. File Formats"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3.4/library/csv.html"},"14.1.csv - CSV File Reading and Writing"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3.4/library/csv.html#module-contents"},"14.1.1. Module Contents")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3.4/library/csv.html#dialects-and-formatting-parameters"},"14.1.2. Dialects and Formatting Parameters")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3.4/library/csv.html#reader-objects"},"14.1.3. Reader Objects")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3.4/library/csv.html#writer-objects"},"14.1.4. Writer Objects")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3.4/library/csv.html#examples"},"14.1.5. Examples")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3.4/library/configparser.html"},"14.2.configparser - Configuration file parser"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3.4/library/configparser.html#quick-start"},"14.2.1. Quick Start")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3.4/library/configparser.html#supported-datatypes"},"14.2.2. Supported Datatypes")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3.4/library/configparser.html#fallback-values"},"14.2.3. Fallback Values")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3.4/library/configparser.html#supported-ini-file-structure"},"14.2.4. Supported INI File Structure")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3.4/library/configparser.html#interpolation-of-values"},"14.2.5. Interpolation of values")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3.4/library/configparser.html#mapping-protocol-access"},"14.2.6. Mapping Protocol Access")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3.4/library/configparser.html#customizing-parser-behaviour"},"14.2.7. Customizing Parser Behaviour")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3.4/library/configparser.html#legacy-api-examples"},"14.2.8. Legacy API Examples")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3.4/library/configparser.html#configparser-objects"},"14.2.9. ConfigParser Objects")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3.4/library/configparser.html#rawconfigparser-objects"},"14.2.10. RawConfigParser Objects")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3.4/library/configparser.html#exceptions"},"14.2.11. Exceptions")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3.4/library/netrc.html"},"14.3.netrc - netrc file processing"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3.4/library/netrc.html#netrc-objects"},"14.3.1. netrc Objects")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3.4/library/xdrlib.html"},"14.4.xdrlib - Encode and decode XDR data"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3.4/library/xdrlib.html#packer-objects"},"14.4.1. Packer Objects")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3.4/library/xdrlib.html#unpacker-objects"},"14.4.2. Unpacker Objects")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3.4/library/xdrlib.html#exceptions"},"14.4.3. Exceptions")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3.4/library/plistlib.html"},"14.5.plistlib - Generate and parse Mac OS X.plistfiles"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org/3.4/library/plistlib.html#examples"},"14.5.1. Examples"))))),(0,a.kt)("p",null,"14.2.",(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3.4/library/configparser.html#module-configparser"},"configparser"),"--- Configuration file parser"),(0,a.kt)("p",null,"This module provides the",(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3.4/library/configparser.html#configparser.ConfigParser"},"ConfigParser")," class which implements a basic configuration language which provides a structure similar to what's found in Microsoft Windows INI files. You can use this to write Python programs which can be customized by end users easily."),(0,a.kt)("h2",{id:"configini"},"config.ini"),(0,a.kt)("p",null,"[mysqlDB]","\nhost = '0.0.0.0'\ndb = 'test'\nuser = 'root'\npass = 'pswd'"),(0,a.kt)("h2",{id:"testpy"},"test.py"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"import configparser\nimport MySQLdb.cursors\nconfig = configparser.ConfigParser()\nconfig.read('config.ini')\ndef connect():\n  return MySQLdb.connect(host = config['mysqlDB']['host'],\n                          user = config['mysqlDB']['user'],\n                          passwd = config['mysqlDB']['pass'],\n                           db = config['mysqlDB']['db'])\n")),(0,a.kt)("h2",{id:"using-python-files"},"Using Python files"),(0,a.kt)("h2",{id:"configpy"},"config.py"),(0,a.kt)("p",null,'username = "xy"\npassword = "abcd"'),(0,a.kt)("h2",{id:"mainpy"},"main.py"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"import config\nlogin(config.username, config.password)\n")),(0,a.kt)("h2",{id:"using-built-in-data-structure"},"Using built-in data structure"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"# config.py\nDATABASE_CONFIG = {\n    'host': 'localhost',\n    'dbname': 'company',\n    'user': 'user',\n    'password': 'password',\n    'port': 3306\n}\n\n# main.py\nimport pymysql\nimport config\n\ndef connect_db(dbname):\n    if dbname != config.DATABASE_CONFIG['dbname']:\n        raise ValueError(\"Couldn't not find DB with given name\")\n    conn = pymysql.connect(host=config.DATABASE_CONFIG['host'],\n                            user=config.DATABASE_CONFIG['user'],\n                            password=config.DATABASE_CONFIG['password'],\n                            db=config.DATABASE_CONFIG['dbname'])\n    return conn\n\nconnect_db('company')\n")),(0,a.kt)("h2",{id:"using-json"},"Using json"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'// credentials.json\n{\n  "DEFAULT": {\n    "SECRET_KEY": "secret-key-of-myapp",\n    "ADMIN_NAME": "administrator",\n    "AWS_DEFAULT_REGION": "ap-northeast-2",\n    "MAX_IMAGE_SIZE": 5242880\n  },\n  "TEST": {\n    "TEST_TMP_DIR": "tests",\n    "TEST_TIMEOUT": 20\n  },\n  "CI": {\n    "SERVICE": "travis-ci",\n    "HOOK_URL": "web-hooking-url-from-ci-service"\n  }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"# main_with_json.py\nimport json\n\nwith open('credentials.json', 'r') as f:\n    credentials= json.load(f)\n\nsecret_key = credentials['DEFAULT']['SECRET_KEY'] # 'secret-key-of-myapp'\nci_hook_url = credentials['CI']['HOOK_URL'] # 'web-hooking-url-from-ci-service'\n")),(0,a.kt)("h2",{id:"using-dynamicloading"},"Using dynamicloading"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"# /opt/settings/config.py\nDATABASE_CONFIG = {\n    'host': 'localhost',\n    'dbname': 'company',\n    'user': 'user',\n    'password': 'password',\n    'port': 3306\n}\n\n# main.py\nimport sys\nimport pymysql\n\nsys.path.append('/opt/settings')\nimport config\n\ndef connect_db(dbname):\n    if dbname != config.DATABASE_CONFIG['dbname']:\n        raise ValueError(\"Couldn't not find DB with given name\")\n    conn = pymysql.connect(host=config.DATABASE_CONFIG['host'],\n                            user=config.DATABASE_CONFIG['user'],\n                            password=config.DATABASE_CONFIG['password'],\n                            db=config.DATABASE_CONFIG['dbname'])\n    return conn\n\nconnect_db('company')\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://hackernoon.com/4-ways-to-manage-the-configuration-in-python-4623049e841b"},"https://hackernoon.com/4-ways-to-manage-the-configuration-in-python-4623049e841b")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/configparser.html"},"https://docs.python.org/3/library/configparser.html")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://hackersandslackers.com/simplify-your-python-projects-configuration"},"https://hackersandslackers.com/simplify-your-python-projects-configuration")))}h.isMDXComponent=!0}}]);