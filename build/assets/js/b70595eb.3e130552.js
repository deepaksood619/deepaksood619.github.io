"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[96120],{603905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var r=n(667294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),s=p(n),f=a,d=s["".concat(l,".").concat(f)]||s[f]||u[f]||i;return n?r.createElement(d,o(o({ref:t},m),{},{components:n})):r.createElement(d,o({ref:t},m))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[s]="string"==typeof e?e:a,o[1]=c;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},958040:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var r=n(487462),a=(n(667294),n(603905));const i={},o="Ackermann Function",c={unversionedId:"mathematics/general/ackermann-function",id:"mathematics/general/ackermann-function",title:"Ackermann Function",description:"In computability theory, the**Ackermann function**, named after Wilhelm Ackermann, is one of the simplest  and earliest-discovered examples of a totalcomputable function that is not primitive recursive. All primitive recursive functions are total and computable, but the Ackermann function illustrates that not all total computable functions are primitive recursive.",source:"@site/docs/mathematics/general/ackermann-function.md",sourceDirName:"mathematics/general",slug:"/mathematics/general/ackermann-function",permalink:"/mathematics/general/ackermann-function",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/mathematics/general/ackermann-function.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"General",permalink:"/mathematics/general/"},next:{title:"Advanced Topics",permalink:"/mathematics/general/advanced-topics"}},l={},p=[],m={toc:p},s="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(s,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"ackermann-function"},"Ackermann Function"),(0,a.kt)("p",null,"In ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Computability_theory"},"computability theory"),", the",(0,a.kt)("strong",{parentName:"p"},"Ackermann function"),", named after ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Wilhelm_Ackermann"},"Wilhelm Ackermann"),", is one of the simplest  and earliest-discovered examples of a ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Total_function"},"total"),(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Computable_function"},"computable function")," that is not ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Primitive_recursive_function"},"primitive recursive"),". All primitive recursive functions are total and computable, but the Ackermann function illustrates that not all total computable functions are primitive recursive.\nThis function has a value ackermann(n) < 5, for any value of ",(0,a.kt)("em",{parentName:"p"},"n")," that can be written in this physical universe. So essentially it's a constant time operation"))}u.isMDXComponent=!0}}]);