"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[66440],{603905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>f});var n=a(667294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),l=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(a),m=r,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return a?n.createElement(f,i(i({ref:t},c),{},{components:a})):n.createElement(f,i({ref:t},c))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[d]="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=a[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},721364:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=a(487462),r=(a(667294),a(603905));const o={},i="Pandas Intro",s={unversionedId:"ai/pandas/pandas-intro",id:"ai/pandas/pandas-intro",title:"Pandas Intro",description:"Pandas is an open-source, BSD-licensed Python library providing high-performance, easy-to-use data structures and data analysis tools for the Python programming language.",source:"@site/docs/ai/pandas/pandas-intro.md",sourceDirName:"ai/pandas",slug:"/ai/pandas/pandas-intro",permalink:"/ai/pandas/pandas-intro",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/ai/pandas/pandas-intro.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Others",permalink:"/ai/pandas/others"},next:{title:"user_guide",permalink:"/ai/pandas/user_guide"}},p={},l=[{value:"Concatenation",id:"concatenation",level:2},{value:"Options",id:"options",level:2},{value:"Reference",id:"reference",level:2}],c={toc:l},d="wrapper";function u(e){let{components:t,...o}=e;return(0,r.kt)(d,(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"pandas-intro"},"Pandas Intro"),(0,r.kt)("p",null,"Pandas is an open-source, BSD-licensed Python library providing high-performance, easy-to-use data structures and data analysis tools for the Python programming language."),(0,r.kt)("h2",{id:"concatenation"},"Concatenation"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"pd.",(0,r.kt)("strong",{parentName:"li"},"concat"),"()function: the most multi-purpose and can be used to combine multiple DataFrames along either axis."),(0,r.kt)("li",{parentName:"ul"},"DataFrame.",(0,r.kt)("strong",{parentName:"li"},"append"),"()method: a quick way to add rows to your DataFrame, but not applicable for adding columns."),(0,r.kt)("li",{parentName:"ul"},"pd.",(0,r.kt)("strong",{parentName:"li"},"merge"),"()function: great for joining two DataFrames together when we have one column (key) containing common values."),(0,r.kt)("li",{parentName:"ul"},"DataFrame.",(0,r.kt)("strong",{parentName:"li"},"join"),"()method: a quicker way to join two DataFrames, but works only off index labels rather than columns.")),(0,r.kt)("h2",{id:"options"},"Options"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"pd.options.display.max_columns = None")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image",src:a(869562).Z,width:"727",height:"377"})),(0,r.kt)("h2",{id:"reference"},"Reference"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.dataquest.io/blog/pandas-concatenation-tutorial"},"https://www.dataquest.io/blog/pandas-concatenation-tutorial")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://pandas.pydata.org/docs/getting_started/10min.html"},"https://pandas.pydata.org/docs/getting_started/10min.html")))}u.isMDXComponent=!0},869562:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Pandas-Intro-image1-da8cda0ba2b62a21f197cf1bb54c403a.jpg"}}]);