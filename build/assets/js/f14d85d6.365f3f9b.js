"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[53178],{603905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(667294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),h=a,m=c["".concat(s,".").concat(h)]||c[h]||d[h]||o;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},576540:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(487462),a=(n(667294),n(603905));const o={},i="Super",l={unversionedId:"python/advanced/super",id:"python/advanced/super",title:"Super",description:"Super considered super - pycon 2015",source:"@site/docs/python/advanced/super.md",sourceDirName:"python/advanced",slug:"/python/advanced/super",permalink:"/python/advanced/super",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/python/advanced/super.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Python Versions",permalink:"/python/advanced/python-versions"},next:{title:"Web Scraping",permalink:"/python/advanced/web-scraping"}},s={},p=[{value:"Method Resolution Order (MRO)",id:"method-resolution-order-mro",level:2},{value:"DoughFactory Analogy",id:"doughfactory-analogy",level:2},{value:"Linearization Algorithm",id:"linearization-algorithm",level:2},{value:"Example",id:"example",level:2}],u={toc:p},c="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"super"},"Super"),(0,a.kt)("p",null,"Super considered super - pycon 2015"),(0,a.kt)("p",null,"In python - Inheritance is a tool for code reuse."),(0,a.kt)("p",null,"We can use dependency injection to say to the restaurant that I want this food but you have to get it from somewhere else. (Because they used genetically modified seeds)"),(0,a.kt)("p",null,"When there is multiple inheritance and a diamond diagram and same methods are repeated at either side of the chain, it gets harder"),(0,a.kt)("p",null,"Solution - C3 linearization algorithm (C Cubed Linearization Algorithm)"),(0,a.kt)("h2",{id:"method-resolution-order-mro"},"Method Resolution Order (MRO)"),(0,a.kt)("p",null,"It is an Algorithm used primarily to obtain the order in which methods should be inherited in the presence of multiple Inheritance, and is termed Method Resolution Order (MRO)"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://makina-corpus.com/blog/metier/2014/python-tutorial-understanding-python-mro-class-search-path"},"https://makina-corpus.com/blog/metier/2014/python-tutorial-understanding-python-mro-class-search-path")),(0,a.kt)("p",null,"The name c3 refers to the three important properties of the resulting linearization-"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"A consistent extended precedence graph"),(0,a.kt)("li",{parentName:"ul"},"Preservation of local precedence order"),(0,a.kt)("li",{parentName:"ul"},"Fitting the monotonicity criterion")),(0,a.kt)("p",null,"This algorithm takes an amorphous blob and put it in a straight line"),(0,a.kt)("p",null,"Linearization"),(0,a.kt)("p",null,"Super must be called next one in the line in MRO (Method Resolution Operator)"),(0,a.kt)("h2",{id:"doughfactory-analogy"},"DoughFactory Analogy"),(0,a.kt)("p",null,"Robot Analogy - for not wearing down the robot we use a MockRobot and use DependencyInjection to inject it into the code while running Tests."),(0,a.kt)("p",null,"When we call super in python, it's the children's ancestors that's get called and not it's own parent."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"help(<class>)")," shows MRO"),(0,a.kt)("p",null,"Counter can be used to make an ordered counter, because Counter cannot be used on OrderedDict, so we can use the power of super with MRO to make an OrderedCounter"),(0,a.kt)("h2",{id:"linearization-algorithm"},"Linearization Algorithm"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Children come before parents,"),(0,a.kt)("li",{parentName:"ul"},"Parents stay in order")),(0,a.kt)("p",null,"Co-operative multiple Inheritance"),(0,a.kt)("p",null,"Problems with super"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The last person cannot pass using super because there is no one next in line (use stopper class)"),(0,a.kt)("li",{parentName:"ul"},"Super doesn't work with classes that are not designed to work cooperatively (solution - put a class infront of non-cooperative class that is cooperative)"),(0,a.kt)("li",{parentName:"ul"},"Using positional arguments can mess up with the argument passing (solution- use keyword argument to pass along the attributes)")),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class Adam(object): pass\n\nclass Eve(object): pass\n\nclass Ramon(Adam, Eve): pass\n\nclass Gayle(Adam, Eve): pass\n\nclass Raymond(Ramon, Gayle): pass\n\nclass Dennis(Adam, Eve): pass\n\nclass Sharon(Adam, Eve): pass\n\nclass Rachel(Dennis, Sharon): pass\n\nclass Matthew(Raymond, Rachel): pass\n\nhelp(Matthew)\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=EiOglTERPEo"},"Raymond Hettinger - Super considered super! - PyCon 2015")))}d.isMDXComponent=!0}}]);