"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7404],{603905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var n=r(667294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function m(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},l="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=m(e,["components","mdxType","originalType","parentName"]),l=c(r),u=a,f=l["".concat(p,".").concat(u)]||l[u]||g[u]||o;return r?n.createElement(f,i(i({ref:t},s),{},{components:r})):n.createElement(f,i({ref:t},s))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var m={};for(var p in t)hasOwnProperty.call(t,p)&&(m[p]=t[p]);m.originalType=e,m[l]="string"==typeof e?e:a,i[1]=m;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},211028:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>m,toc:()=>c});var n=r(487462),a=(r(667294),r(603905));const o={},i="Metaprogramming",m={unversionedId:"computer-science/programming-concepts/metaprogramming",id:"computer-science/programming-concepts/metaprogramming",title:"Metaprogramming",description:"Metaprogramming is a programming technique in which computer programs have the ability to treat programs as data. It means a program can be designed to read, generate, analyze or transform other programs, or even itself while running. In some cases, it allows programmers to minimize the number of lines of code to express a solution, thus reducing the development time. It also allows programs greater flexibility to efficiently handle new situations without recompilation.",source:"@site/docs/computer-science/programming-concepts/metaprogramming.md",sourceDirName:"computer-science/programming-concepts",slug:"/computer-science/programming-concepts/metaprogramming",permalink:"/computer-science/programming-concepts/metaprogramming",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/computer-science/programming-concepts/metaprogramming.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Marshalling",permalink:"/computer-science/programming-concepts/marshalling"},next:{title:"Others",permalink:"/computer-science/programming-concepts/others"}},p={},c=[],s={toc:c},l="wrapper";function g(e){let{components:t,...r}=e;return(0,a.kt)(l,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"metaprogramming"},"Metaprogramming"),(0,a.kt)("p",null,"Metaprogramming is a programming technique in which computer programs have the ability to treat programs as data. It means a program can be designed to read, generate, analyze or transform other programs, or even itself while running. In some cases, it allows programmers to minimize the number of lines of code to express a solution, thus reducing the development time. It also allows programs greater flexibility to efficiently handle new situations without recompilation.\nMetaprogramming can be used to move computations from run-time to compile-time, to generate code using compile time computations, and to enable ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Self-modifying_code"},"self-modifying code"),". The language in which the metaprogram is written is called the ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Metalanguage"},(0,a.kt)("strong",{parentName:"a"},"metalanguage")),". The language of the programs that are manipulated is called the ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Object_language"},(0,a.kt)("em",{parentName:"a"},"object language")),". The ability of a programming language to be its own metalanguage is called ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Reflection_(computer_science)"},(0,a.kt)("em",{parentName:"a"},"reflection"))," or ",(0,a.kt)("em",{parentName:"p"},"reflexivity"),". Reflection is a valuable language feature to facilitate metaprogramming."))}g.isMDXComponent=!0}}]);