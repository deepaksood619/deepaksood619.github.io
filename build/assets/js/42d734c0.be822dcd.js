"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[44292],{603905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>y});var r=a(667294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,o=function(e,t){if(null==e)return{};var a,r,o={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,o=e.mdxType,n=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(a),m=o,y=d["".concat(l,".").concat(m)]||d[m]||u[m]||n;return a?r.createElement(y,s(s({ref:t},p),{},{components:a})):r.createElement(y,s({ref:t},p))}));function y(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=a.length,s=new Array(n);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:o,s[1]=i;for(var c=2;c<n;c++)s[c]=a[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},408679:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>n,metadata:()=>i,toc:()=>c});var r=a(487462),o=(a(667294),a(603905));const n={},s="Course - Advanced Database Systems",i={unversionedId:"databases/others/course-advanced-database-systems",id:"databases/others/course-advanced-database-systems",title:"Course - Advanced Database Systems",description:"1. Course Introduction and History of Databases",source:"@site/docs/databases/others/course-advanced-database-systems.md",sourceDirName:"databases/others",slug:"/databases/others/course-advanced-database-systems",permalink:"/databases/others/course-advanced-database-systems",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/databases/others/course-advanced-database-systems.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Others",permalink:"/databases/others/"},next:{title:"Course - AWS Certified Database - Specialty",permalink:"/databases/others/course-aws-certified-database-specialty"}},l={},c=[{value:"Query Optimizer",id:"query-optimizer",level:2}],p={toc:c},d="wrapper";function u(e){let{components:t,...a}=e;return(0,o.kt)(d,(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"course---advanced-database-systems"},"Course - Advanced Database Systems"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Course Introduction and History of Databases"),(0,o.kt)("li",{parentName:"ol"},"In-Memory Databases"),(0,o.kt)("li",{parentName:"ol"},"Multi-Version Concurrency Control (Design Decisions)"),(0,o.kt)("li",{parentName:"ol"},"Multi-Version Concurrency Control (Protocols)"),(0,o.kt)("li",{parentName:"ol"},"Multi-Version Concurrency Control (Garbage Collection)"),(0,o.kt)("li",{parentName:"ol"},"OLTP Indexes (B+Tree Data Structures)"),(0,o.kt)("li",{parentName:"ol"},"OLTP Indexes (Trie Data Structures)"),(0,o.kt)("li",{parentName:"ol"},"Storage Models, Data Layout, & System Catalogs"),(0,o.kt)("li",{parentName:"ol"},"Database Compression"),(0,o.kt)("li",{parentName:"ol"},"Recovery Protocols"),(0,o.kt)("li",{parentName:"ol"},"Networking Protocols"),(0,o.kt)("li",{parentName:"ol"},"Scheduling"),(0,o.kt)("li",{parentName:"ol"},"Query Execution & Processing"),(0,o.kt)("li",{parentName:"ol"},"Query Compilation"),(0,o.kt)("li",{parentName:"ol"},"Vectorized Execution"),(0,o.kt)("li",{parentName:"ol"},"Vectorization vs. Compilation"),(0,o.kt)("li",{parentName:"ol"},"Parallel Join Algorithms (Hashing)"),(0,o.kt)("li",{parentName:"ol"},"Parallel Join Algorithms (Sorting)"),(0,o.kt)("li",{parentName:"ol"},"Optimizer Implementation (Overview)"),(0,o.kt)("li",{parentName:"ol"},"Optimizer Implementation (Top-Down vs. Bottom-Up)"),(0,o.kt)("li",{parentName:"ol"},"Optimizer Implementation (Alternative Approaches)"),(0,o.kt)("li",{parentName:"ol"},"Cost Models"),(0,o.kt)("li",{parentName:"ol"},"Larger-than-Memory Databases"),(0,o.kt)("li",{parentName:"ol"},"Server-side Logic Execution"),(0,o.kt)("li",{parentName:"ol"},"Databases on New Hardware")),(0,o.kt)("h2",{id:"query-optimizer"},"Query Optimizer"),(0,o.kt)("p",null,"Building a really good query optimizer and query execution system in a distributed database system is hard. It requires a number of sophisticated components including statistics, cardinality estimation, plan space search, the right storage structures, fast query execution operators, intelligent shuffle, both broadcast and point-to-point data transmission, and more."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.youtube.com/playlist?list=PLSE8ODhjZXjasmrEd2_Yi1deeE360zv5O"},"15-721 Advanced Database Systems (Spring 2020)")))}u.isMDXComponent=!0}}]);