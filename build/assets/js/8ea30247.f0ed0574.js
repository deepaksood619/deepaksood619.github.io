"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[39716],{603905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>b});var a=n(667294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),u=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,b=p["".concat(i,".").concat(m)]||p[m]||d[m]||l;return n?a.createElement(b,o(o({ref:t},c),{},{components:n})):a.createElement(b,o({ref:t},c))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[p]="string"==typeof e?e:r,o[1]=s;for(var u=2;u<l;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},612545:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var a=n(487462),r=(n(667294),n(603905));const l={},o="TOML",s={unversionedId:"languages/others/toml",id:"languages/others/toml",title:"TOML",description:"Tom's Obvious, Minimal Language",source:"@site/docs/languages/others/toml.md",sourceDirName:"languages/others",slug:"/languages/others/toml",permalink:"/languages/others/toml",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/languages/others/toml.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"TLA+",permalink:"/languages/others/tla-plus"},next:{title:"Web Assembly",permalink:"/languages/others/web-assembly"}},i={},u=[{value:"Example",id:"example",level:2},{value:"This is a TOML document",id:"this-is-a-toml-document",level:2},{value:"Indentation (tabs and/or spaces) is allowed but not required",id:"indentation-tabs-andor-spaces-is-allowed-but-not-required",level:2},{value:"Line breaks are OK when inside arrays",id:"line-breaks-are-ok-when-inside-arrays",level:2},{value:"Spec",id:"spec",level:2},{value:"Uses",id:"uses",level:2},{value:"References",id:"references",level:2}],c={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"toml"},"TOML"),(0,r.kt)("p",null,"Tom's Obvious, Minimal Language"),(0,r.kt)("p",null,"TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics. TOML is designed to map unambiguously to a hash table. TOML should be easy to parse into data structures in a wide variety of languages."),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("h2",{id:"this-is-a-toml-document"},"This is a TOML document"),(0,r.kt)("p",null,'title = "TOML Example"'),(0,r.kt)("p",null,"[owner]",'\nname = "Tom Preston-Werner"\ndob = 1979-05-27T07:32:00-08:00 # First class dates'),(0,r.kt)("p",null,"[database]",'\nserver = "192.168.1.1"\nports = ',"[ 8001, 8001, 8002 ]","\nconnection_max = 5000\nenabled = true"),(0,r.kt)("p",null,"[servers]"),(0,r.kt)("h2",{id:"indentation-tabs-andor-spaces-is-allowed-but-not-required"},"Indentation (tabs and/or spaces) is allowed but not required"),(0,r.kt)("p",null,"[servers.alpha]",'\nip = "10.0.0.1"\ndc = "eqdc10"'),(0,r.kt)("p",null,"[servers.beta]",'\nip = "10.0.0.2"\ndc = "eqdc10"'),(0,r.kt)("p",null,"[clients]","\ndata = [ ",'["gamma", "delta"]',", ","[1, 2]"," ]"),(0,r.kt)("h2",{id:"line-breaks-are-ok-when-inside-arrays"},"Line breaks are OK when inside arrays"),(0,r.kt)("p",null,"hosts = ",'[\n"alpha",\n"omega"\n]'),(0,r.kt)("h2",{id:"spec"},"Spec"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"TOML is case sensitive."),(0,r.kt)("li",{parentName:"ul"},"A TOML file must be a valid UTF-8 encoded Unicode document."),(0,r.kt)("li",{parentName:"ul"},"Whitespace means tab (0x09) or space (0x20)."),(0,r.kt)("li",{parentName:"ul"},"Newline means LF (0x0A) or CRLF (0x0D0A).")),(0,r.kt)("h2",{id:"uses"},"Uses"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Telegraf Configuration")),(0,r.kt)("h2",{id:"references"},"References"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/toml-lang/toml"},"https://github.com/toml-lang/toml")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://learnxinyminutes.com/docs/toml"},"https://learnxinyminutes.com/docs/toml")))}d.isMDXComponent=!0}}]);