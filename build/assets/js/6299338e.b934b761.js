"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7079],{603905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>w});var a=r(667294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,i=function(e,t){if(null==e)return{};var r,a,i={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,i=e.mdxType,n=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=p(r),d=i,w=m["".concat(s,".").concat(d)]||m[d]||c[d]||n;return r?a.createElement(w,l(l({ref:t},u),{},{components:r})):a.createElement(w,l({ref:t},u))}));function w(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=r.length,l=new Array(n);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:i,l[1]=o;for(var p=2;p<n;p++)l[p]=r[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},579115:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>n,metadata:()=>o,toc:()=>p});var a=r(487462),i=(r(667294),r(603905));const n={},l="System Design - Twitter",o={unversionedId:"computer-science/interview-question/system-design-twitter",id:"computer-science/interview-question/system-design-twitter",title:"System Design - Twitter",description:"System Design: How to design Twitter? Interview question at Facebook, Google, Microsoft",source:"@site/docs/computer-science/interview-question/system-design-twitter.md",sourceDirName:"computer-science/interview-question",slug:"/computer-science/interview-question/system-design-twitter",permalink:"/computer-science/interview-question/system-design-twitter",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/computer-science/interview-question/system-design-twitter.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"System Design - TinyURL",permalink:"/computer-science/interview-question/system-design-tinyurl"},next:{title:"System Design - Uber Lyft ride sharing services",permalink:"/computer-science/interview-question/system-design-uber-lyft-ride-sharing-services"}},s={},p=[{value:"Core Features",id:"core-features",level:2},{value:"Database",id:"database",level:2},{value:"Characteristics",id:"characteristics",level:2},{value:"Optimized Solution",id:"optimized-solution",level:2},{value:"TwitterBot / Twitter Bot",id:"twitterbot--twitter-bot",level:2}],u={toc:p},m="wrapper";function c(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"system-design---twitter"},"System Design - Twitter"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=KmAyPUv9gOY"},"System Design: How to design Twitter? Interview question at Facebook, Google, Microsoft")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=wYk0xPP_P_8"},"Twitter system design | twitter Software architecture | twitter interview questions"),"\n",(0,i.kt)("img",{alt:"image",src:r(881734).Z,width:"795",height:"554"})),(0,i.kt)("h2",{id:"core-features"},"Core Features"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Tweeting")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Timeline"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"User (Own tweets in profile)"),(0,i.kt)("li",{parentName:"ul"},"Home (All tweets from people you follow)"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Following")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Full Text Search")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"HashTags")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Push Notifications")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Text Notifications")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"How to incorporate Advertisments"))),(0,i.kt)("h2",{id:"database"},"Database"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Tweets database")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Users database"))),(0,i.kt)("p",null,"Problem with this structure is that to get a tweet corresponding to user, if would take a lot of time because there would be a big select query. (Every time we open twitter home statement)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"This is not feasible")),(0,i.kt)("h2",{id:"characteristics"},"Characteristics"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Twitter is ready heavy (showing home profile for a user should be super fast)"),(0,i.kt)("li",{parentName:"ul"},"Prefer availability over consitency. (Eventual Consistency - Consistency over a time frame)")),(0,i.kt)("h2",{id:"optimized-solution"},"Optimized Solution"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"When we tweet we do a Put / Post request"),(0,i.kt)("li",{parentName:"ul"},"Request goes to a Load Balancer",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Does Fan Out - put tweet on every follower home timeline (in-memory DB / Redis)"))),(0,i.kt)("li",{parentName:"ul"},"Twitter has redis cluster",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Every user has a redis database"),(0,i.kt)("li",{parentName:"ul"},"Every redis database for each user is replicated 3 times"),(0,i.kt)("li",{parentName:"ul"},"Every redis database is in-memory"),(0,i.kt)("li",{parentName:"ul"},"Can store the redis database for a period of time tied to user login activity"),(0,i.kt)("li",{parentName:"ul"},"If a user has 100 followers than 3*100 = 300 redis databases will be updated"),(0,i.kt)("li",{parentName:"ul"},"Problem - If a celebrity tweet there would be million of updates."),(0,i.kt)("li",{parentName:"ul"},"Solution - Can use a mixed approach, where sql can be used for very large updates."),(0,i.kt)("li",{parentName:"ul"},"In-memory + Syncronous calls"))),(0,i.kt)("li",{parentName:"ul"},"Followers",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Followers table will give all the redis database hashes where we have to update the home profile"))),(0,i.kt)("li",{parentName:"ul"},"Tradeoffs",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Read heavy"),(0,i.kt)("li",{parentName:"ul"},"Eventual consistency"),(0,i.kt)("li",{parentName:"ul"},"Space"))),(0,i.kt)("li",{parentName:"ul"},"Accessing Timeline",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Get Request"),(0,i.kt)("li",{parentName:"ul"},"Load Balancer",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Very fast hash lookup for getting redis databases"))),(0,i.kt)("li",{parentName:"ul"},"One of the three redis databases reponds with bob's timeline")))),(0,i.kt)("h2",{id:"twitterbot--twitter-bot"},"TwitterBot / Twitter Bot"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.labnol.org/twitter-bots-tutorial-4796"},"https://www.labnol.org/twitter-bots-tutorial-4796")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.labnol.org/twitter-search-examples-203"},"https://www.labnol.org/twitter-search-examples-203")))}c.isMDXComponent=!0},881734:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/System-Design-Twitter-image1-e33c1d566304132324641698e1bf94a3.jpg"}}]);