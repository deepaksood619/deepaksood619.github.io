"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6749],{603905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>k});var n=a(667294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),d=u(a),c=r,k=d["".concat(s,".").concat(c)]||d[c]||p[c]||i;return a?n.createElement(k,l(l({ref:t},m),{},{components:a})):n.createElement(k,l({ref:t},m))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},566994:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var n=a(487462),r=(a(667294),a(603905));const i={},l="Design of Key-Value Stores",o={unversionedId:"ai/data-science/big-data/design-of-key-value-stores",id:"ai/data-science/big-data/design-of-key-value-stores",title:"Design of Key-Value Stores",description:"- We will discuss the design and insight of key-value/NoSQL stores for today's cloud storage systems.",source:"@site/docs/ai/data-science/big-data/design-of-key-value-stores.md",sourceDirName:"ai/data-science/big-data",slug:"/ai/data-science/big-data/design-of-key-value-stores",permalink:"/ai/data-science/big-data/design-of-key-value-stores",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/ai/data-science/big-data/design-of-key-value-stores.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Design of HBase",permalink:"/ai/data-science/big-data/design-of-hbase"},next:{title:"Design of Zookeeper",permalink:"/ai/data-science/big-data/design-of-zookeeper"}},s={},u=[{value:"The Key-Value Abstration",id:"the-key-value-abstration",level:2},{value:"Is it a kind of database?",id:"is-it-a-kind-of-database",level:2},{value:"Mismatch with today&#39;s workloads",id:"mismatch-with-todays-workloads",level:2},{value:"Needs of Today&#39;s Workloads",id:"needs-of-todays-workloads",level:2},{value:"Key-value / NoSQL Data Model",id:"key-value--nosql-data-model",level:2},{value:"Column-Oriented Storage",id:"column-oriented-storage",level:2},{value:"See Also",id:"see-also",level:2}],m={toc:u},d="wrapper";function p(e){let{components:t,...i}=e;return(0,r.kt)(d,(0,n.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"design-of-key-value-stores"},"Design of Key-Value Stores"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"We will discuss the design and insight of key-value/NoSQL stores for today's cloud storage systems."),(0,r.kt)("li",{parentName:"ul"},"We will also discuss Apache Cassandra and different consistency solutions")),(0,r.kt)("h2",{id:"the-key-value-abstration"},"The Key-Value Abstration"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"(Business) Key -> Value")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"(flipkart.com) item number -> information about it")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"(easemytrip.com) Flight number -> information about flight, e.g., availability")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"(twitter.com) tweet id -> information about tweet")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"(mybank.com) account number -> information about it")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"It's a dictionary datastructure"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Insert, lookup, and delete by key"),(0,r.kt)("li",{parentName:"ul"},"Example: hash table, binary tree"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"But distributed")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Seems familiar? Remember ",(0,r.kt)("strong",{parentName:"p"},"Distributed Hash Tables (DHT) in P2P systems"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Key-value stores reuse many techniques from DHTs"))),(0,r.kt)("h2",{id:"is-it-a-kind-of-database"},"Is it a kind of database?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"RDMSs have been around for ages"),(0,r.kt)("li",{parentName:"ul"},"MySQL is the most popular among them"),(0,r.kt)("li",{parentName:"ul"},"Data stored in tables"),(0,r.kt)("li",{parentName:"ul"},"Schema-based, i.e., structured tables"),(0,r.kt)("li",{parentName:"ul"},"Each row (data item) in a table has a primary key that is unique within that table"),(0,r.kt)("li",{parentName:"ul"},"Queried using ",(0,r.kt)("strong",{parentName:"li"},"SQL (Structured Query Language)")),(0,r.kt)("li",{parentName:"ul"},"Supports joins")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image",src:a(873222).Z,width:"1440",height:"1080"})),(0,r.kt)("h2",{id:"mismatch-with-todays-workloads"},"Mismatch with today's workloads"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Data: Large and unstructured:")," Difficult to come out with schemas where the data can fit"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Lots of random reads and writes:")," Coming from millions of clients"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Sometimes write-heavy:")," Lot more writes compare to read"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Foreign keys rarely needed")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Joins infrequent"))),(0,r.kt)("h2",{id:"needs-of-todays-workloads"},"Needs of Today's Workloads"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Speed (Lightning fast writes)"),(0,r.kt)("li",{parentName:"ul"},"Avoid Single Point of Failuer (SPoF) (Fault tolerant)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Low TCO (Total cost of operation and Total cost of ownership)")),(0,r.kt)("li",{parentName:"ul"},"Fewer system administrators"),(0,r.kt)("li",{parentName:"ul"},"Incremental Scalability",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Adding more nodes adds linear capabilities"))),(0,r.kt)("li",{parentName:"ul"},"Scale out, not scale up")),(0,r.kt)("h2",{id:"key-value--nosql-data-model"},"Key-value / NoSQL Data Model"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"NoSQL = Not Only SQL"),(0,r.kt)("li",{parentName:"ul"},"Necessaary API operations: get(key) and put(key, value)",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},'And some extended operations, e.g., "CQL" in Cassandra key-value store'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Tables"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Column families")," in Cassandra, ",(0,r.kt)("strong",{parentName:"li"},"Table")," in HBase, ",(0,r.kt)("strong",{parentName:"li"},"Collection")," in MongoDB"),(0,r.kt)("li",{parentName:"ul"},"Like RDBMS tables, but ..."),(0,r.kt)("li",{parentName:"ul"},"May be unstructured: May not have schemas",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Some columns may be missing from some rows"))),(0,r.kt)("li",{parentName:"ul"},"Don't always support joins or have foreign keys"),(0,r.kt)("li",{parentName:"ul"},"Can have index tables, just like RDBMSs")))),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image",src:a(795715).Z,width:"1440",height:"1080"})),(0,r.kt)("h2",{id:"column-oriented-storage"},"Column-Oriented Storage"),(0,r.kt)("p",null,"NoSQL systems often use column-oriented storage"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"RDMSs store an entire row together (on disk or at a server)"),(0,r.kt)("li",{parentName:"ul"},"NoSQL systems typically store a column together (or a group of columns)",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Entries within a column are indexed and easy to locate, given a key"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Why useful?"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Range searches within a column are fast since you don't need to fetch the entire database"),(0,r.kt)("li",{parentName:"ul"},"E.g., Get me all blog_ids from the blog table that were updated within the past month",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Search in the last_updated column, fetch corresponding blog_id column"),(0,r.kt)("li",{parentName:"ul"},"Don't need to fetch the other columns")))))),(0,r.kt)("h2",{id:"see-also"},"See Also"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Computer Science > Databases > Casandra > Design")))}p.isMDXComponent=!0},873222:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Big-Data_Design-of-Key-Value-Stores-image1-3b1f89a5ff8bb2bd4f3aac5b19727611.jpg"},795715:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Big-Data_Design-of-Key-Value-Stores-image2-d2c3723175ceef9121c9a2e34d9db12c.jpg"}}]);