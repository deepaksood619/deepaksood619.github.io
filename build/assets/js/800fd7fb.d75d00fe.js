"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[70238],{603905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>m});var a=r(667294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=a.createContext({}),c=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),p=c(r),k=n,m=p["".concat(i,".").concat(k)]||p[k]||d[k]||o;return r?a.createElement(m,l(l({ref:t},s),{},{components:r})):a.createElement(m,l({ref:t},s))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=k;var u={};for(var i in t)hasOwnProperty.call(t,i)&&(u[i]=t[i]);u.originalType=e,u[p]="string"==typeof e?e:n,l[1]=u;for(var c=2;c<o;c++)l[c]=r[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}k.displayName="MDXCreateElement"},171561:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>u,toc:()=>c});var a=r(487462),n=(r(667294),r(603905));const o={},l="Azure",u={unversionedId:"cloud/others/azure/readme",id:"cloud/others/azure/readme",title:"Azure",description:'Azure Portal "How To" Series',source:"@site/docs/cloud/others/azure/readme.md",sourceDirName:"cloud/others/azure",slug:"/cloud/others/azure/",permalink:"/cloud/others/azure/",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/cloud/others/azure/readme.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Anthos",permalink:"/cloud/others/anthos"},next:{title:"Commands",permalink:"/cloud/others/azure/commands"}},i={},c=[{value:"Commands",id:"commands",level:2},{value:"# for tunneling to kubernetes-dashboard",id:"-for-tunneling-to-kubernetes-dashboard",level:2},{value:"Upgrade",id:"upgrade",level:2},{value:"ACR",id:"acr",level:2},{value:"IP Allocations",id:"ip-allocations",level:2},{value:"az network public-ip create --resource-group staticpublicip --name kongproxyPublicIP --allocation-method static --sku Standard",id:"az-network-public-ip-create---resource-group-staticpublicip---name-kongproxypublicip---allocation-method-static---sku-standard",level:2},{value:"Create secret to pull from private registry",id:"create-secret-to-pull-from-private-registry",level:2},{value:"ACI (Azure Container Instances)",id:"aci-azure-container-instances",level:2},{value:"AKS Virtual Kubelet",id:"aks-virtual-kubelet",level:2},{value:"Create",id:"create",level:2},{value:"Delete",id:"delete",level:2},{value:"Node Pools",id:"node-pools",level:2}],s={toc:c},p="wrapper";function d(e){let{components:t,...r}=e;return(0,n.kt)(p,(0,a.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"azure"},"Azure"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://www.youtube.com/playlist?list=PLLasX02E8BPBKgXP4oflOL29TtqTzwhxR"},'Azure Portal "How To" Series')),(0,n.kt)("h2",{id:"commands"},"Commands"),(0,n.kt)("p",null,"brew update && brew install azure-cli"),(0,n.kt)("p",null,"az login"),(0,n.kt)("p",null,"az aks install-cli"),(0,n.kt)("p",null,"az aks get-credentials --resource-group Technology --name kubernetes-cluster"),(0,n.kt)("p",null,"az --version"),(0,n.kt)("p",null,"brew update && brew upgrade azure-cli"),(0,n.kt)("h2",{id:"-for-tunneling-to-kubernetes-dashboard"},"# for tunneling to kubernetes-dashboard"),(0,n.kt)("p",null,"az aks browse --resource-group Technology --name prod-cluster"),(0,n.kt)("h2",{id:"upgrade"},"Upgrade"),(0,n.kt)("p",null,"az aks get-upgrades --resource-group Technology --name dev-kubernetes-cluster --output table"),(0,n.kt)("h2",{id:"acr"},"ACR"),(0,n.kt)("p",null,'az acr list --resource-group Technology --query "[].{acrLoginServer:loginServer}" --output table'),(0,n.kt)("h2",{id:"ip-allocations"},"IP Allocations"),(0,n.kt)("p",null,"az aks show --resource-group Technology --name dev-kubernetes-cluster --query nodeResourceGroup -o tsv"),(0,n.kt)("p",null,"az network public-ip create --resource-group MC_Technology_dev-kubernetes-cluster_southindia --name kafka1PublicIP --allocation-method static"),(0,n.kt)("p",null,"az network public-ip create --resource-group staticpublicip --name kongPublicIP --allocation-method static"),(0,n.kt)("h2",{id:"az-network-public-ip-create---resource-group-staticpublicip---name-kongproxypublicip---allocation-method-static---sku-standard"},"az network public-ip create --resource-group staticpublicip --name kongproxyPublicIP --allocation-method static --sku Standard"),(0,n.kt)("p",null,"az network public-ip show --resource-group MC_Technology_dev-kubernetes-cluster_southindia --name kafkaPublicIP"),(0,n.kt)("p",null,"az network public-ip delete --resource-group MC_Technology_dev-kubernetes-cluster_southindia --name testPublicIP"),(0,n.kt)("p",null,"az network public-ip list"),(0,n.kt)("p",null,"az network public-ip list --resource-group MC_Technology_dev-kubernetes-cluster_southindia"),(0,n.kt)("p",null,"az group create --location centralindia --name staticpublicip"),(0,n.kt)("p",null,'az role assignment create --assignee 727ba8c8-fa02-440c-ab02-58cb14eb1420 --role "Network Contributor" --scope /subscriptions/3809021a-75e6-4568-8445-2a37bfd143dd/resourceGroups/staticpublicip'),(0,n.kt)("p",null,"az aks update-credentials --resource-group Technology --name dev-kubernetes-cluster --reset-service-principal --service-principal $SP_ID --client-secret $SP_SECRET"),(0,n.kt)("p",null,"SP_ID=$(az aks show --resource-group Technology --name prod-cluster --query servicePrincipalProfile.clientId -o tsv)"),(0,n.kt)("p",null,"az ad sp create-for-rbac --skip-assignment"),(0,n.kt)("p",null,"ELK"),(0,n.kt)("p",null,"az keyvault create --name example-kubernetes-vault --resource-group Technology"),(0,n.kt)("p",null,"az network public-ip create -n kibana-public --resource-group=Technology --allocation-method=static --dns-name=kibana-public"),(0,n.kt)("p",null,"az network public-ip create -n kibana-ip --resource-group=Technology --allocation-method=static --dns-name=kibana.example.com"),(0,n.kt)("p",null,"az network public-ip create -n elk-ip --resource-group=Technology --allocation-method=static"),(0,n.kt)("p",null,"52.172.150.153"),(0,n.kt)("p",null,"az keyvault certificate import --name kibana-certificate --vault-name example-kubernetes-vault -f ${DOMAIN}.pfx --tags domain=${DOMAIN}"),(0,n.kt)("p",null,"az keyvault secret set --name kibana-certificate-key-password --vault-name example-kubernetes-vault"),(0,n.kt)("p",null,"az redis create --name dev-logscache --location southindia --resource-group Technology --sku Standard --vm-size C1"),(0,n.kt)("p",null,"helm delete --purge elasticsearch"),(0,n.kt)("p",null,"./deploy.sh -n elk -v example-kubernetes-vault"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/Azure/helm-elasticstack"},"https://github.com/Azure/helm-elasticstack")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/Azure/acs-engine/blob/master/docs/kubernetes/monitoring#monitoring-kubernetes-clusters"},"https://github.com/Azure/acs-engine/blob/master/docs/kubernetes/monitoring#monitoring-kubernetes-clusters")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/cli/azure/network/public-ip?view=azure-cli-latest"},"https://docs.microsoft.com/en-us/cli/azure/network/public-ip?view=azure-cli-latest")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/aks/cluster-autoscaler"},"https://docs.microsoft.com/en-us/azure/aks/cluster-autoscaler")),(0,n.kt)("h2",{id:"create-secret-to-pull-from-private-registry"},"Create secret to pull from private registry"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'# gcr reg addition\n\nkubectl create secret docker-registry gcrreg --docker-server=gcr.io --docker-username=_json_key --docker-password="$(cat ~/json-key-file.json)" --docker-email=username@example.com -n smap\n\nkubectl patch serviceaccount default -p \'{"imagePullSecrets": [{"name": "gcrreg"}]}\' -n smap\n')),(0,n.kt)("h2",{id:"aci-azure-container-instances"},"ACI (Azure Container Instances)"),(0,n.kt)("p",null,"Easily run containers on Azure without managing servers"),(0,n.kt)("p",null,"Develop apps fast without managing virtual machines or having to learn new tools - it's just your application, in a container, running in the cloud."),(0,n.kt)("p",null,"Azure Container Instances (ACI) provide a hosted environment for running containers in Azure. When using ACI, there is no need to manage the underlying compute infrastructure, Azure handles this management for you. When running containers in ACI, you are charged by the second for each running container."),(0,n.kt)("h2",{id:"aks-virtual-kubelet"},"AKS Virtual Kubelet"),(0,n.kt)("h2",{id:"create"},"Create"),(0,n.kt)("p",null,"az aks install-connector --resource-group Technology --name dev-kubernetes-cluster --connector-name virtual-kubelet --os-type Linux"),(0,n.kt)("h2",{id:"delete"},"Delete"),(0,n.kt)("p",null,"az aks remove-connector --resource-group Technology --name dev-kubernetes-cluster --connector-name virtual-kubelet --os-type Linux"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/aks/virtual-kubelet#installation"},"https://docs.microsoft.com/en-us/azure/aks/virtual-kubelet#installation")),(0,n.kt)("h2",{id:"node-pools"},"Node Pools"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/aks/use-multiple-node-pools"},"https://docs.microsoft.com/en-us/azure/aks/use-multiple-node-pools")))}d.isMDXComponent=!0}}]);