"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[60068],{603905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var r=n(667294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},c="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),c=p(n),m=a,d=c["".concat(u,".").concat(m)]||c[m]||f[m]||l;return n?r.createElement(d,o(o({ref:t},s),{},{components:n})):r.createElement(d,o({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[c]="string"==typeof e?e:a,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},218245:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>f,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var r=n(487462),a=(n(667294),n(603905));const l={},o="Map, reduce, filter",i={unversionedId:"python/python-intro/map-reduce-filter",id:"python/python-intro/map-reduce-filter",title:"Map, reduce, filter",description:"Map",source:"@site/docs/python/python-intro/map-reduce-filter.md",sourceDirName:"python/python-intro",slug:"/python/python-intro/map-reduce-filter",permalink:"/python/python-intro/map-reduce-filter",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/python/python-intro/map-reduce-filter.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Loops",permalink:"/python/python-intro/loops"},next:{title:"Mathematics",permalink:"/python/python-intro/mathematics"}},u={},p=[{value:"Map",id:"map",level:2},{value:"Filter",id:"filter",level:2},{value:"Reduce",id:"reduce",level:2}],s={toc:p},c="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"map-reduce-filter"},"Map, reduce, filter"),(0,a.kt)("h2",{id:"map"},"Map"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"fahrenheit = map(lambda x: (float(9)/5)*x + 32, Celsius)\n\na = [1,2,3,4]\nb = [17,12,11,10]\nc = [-1,-4,5,9]\nmap(lambda x,y:x+y, a,b)\n[18, 14, 14, 14]\nmap(lambda x,y,z:x+y+z, a,b,c)\n[17, 10, 19, 23]\nmap(lambda x,y,z:x+y-z, a,b,c)\n[19, 18, 9, 5]\n")),(0,a.kt)("h2",{id:"filter"},"Filter"),(0,a.kt)("p",null,"The function filter(function, list) offers an elegant way to filter out all the elements of a list, for which the function ",(0,a.kt)("em",{parentName:"p"},"function")," returns True."),(0,a.kt)("p",null,"The function filter(f,l) needs a function f as its first argument. f returns a Boolean value, i.e. either True or False. This function will be applied to every element of the list",(0,a.kt)("em",{parentName:"p"},"l"),". Only if f returns True will the element of the list be included in the result list."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"fib = [0,1,1,2,3,5,8,13,21,34,55]\nresult = filter(lambda x: x % 2, fib)\nprint result\n[1, 1, 3, 5, 13, 21, 55]\nresult = filter(lambda x: x % 2 == 0, fib)\nprint result\n[0, 2, 8, 34]\n")),(0,a.kt)("h2",{id:"reduce"},"Reduce"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"import functools\nfunctools.reduce\n")),(0,a.kt)("p",null,"The function reduce(func, seq) continually applies the function func() to the sequence seq. It returns a single value."),(0,a.kt)("p",null,"If seq = ","[ s~1~, s~2~, s~3~, ... , s~n~]",", calling reduce(func, seq) works like this:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"At first the first two elements of seq will be applied to func, i.e. func(s~1~,s~2~) The list on which reduce() works looks now like this: ","[ func(s~1~, s~2~), s~3~, ... , s~n~]"),(0,a.kt)("li",{parentName:"ul"},"In the next step func will be applied on the previous result and the third element of the list, i.e. func(func(s~1~, s~2~),s~3~)\nThe list looks like this now: ","[ func(func(s~1~, s~2~),s~3~), ... , s~n~]"),(0,a.kt)("li",{parentName:"ul"},"Continue like this until just one element is left and return this element as the result of reduce()")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"reduce(lambda x,y: x+y, [47,11,42,13])\n113\n")),(0,a.kt)("p",null,"Determining the maximum of a list of numerical values by using reduce:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"f = lambda a, b: a if (a > b) else b\nreduce(f, [47,11,42,102,13])\n102\n>>>\n")),(0,a.kt)("p",null,"Calculating the sum of the numbers from 1 to 100:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"reduce(lambda x, y: x + y, range(1,101))\n5050\n")))}f.isMDXComponent=!0}}]);