"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5054],{603905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var a=n(667294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),c=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),d=r,k=u["".concat(i,".").concat(d)]||u[d]||m[d]||o;return n?a.createElement(k,l(l({ref:t},p),{},{components:n})):a.createElement(k,l({ref:t},p))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[u]="string"==typeof e?e:r,l[1]=s;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},545920:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(487462),r=(n(667294),n(603905));const o={},l="kubectl Commands",s={unversionedId:"devops/kubernetes/kubectl-commands",id:"devops/kubernetes/kubectl-commands",title:"kubectl Commands",description:"Debugging",source:"@site/docs/devops/kubernetes/kubectl-commands.md",sourceDirName:"devops/kubernetes",slug:"/devops/kubernetes/kubectl-commands",permalink:"/devops/kubernetes/kubectl-commands",draft:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/main/docs/devops/kubernetes/kubectl-commands.md",tags:[],version:"current",lastUpdatedAt:1677955187,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Intro",permalink:"/devops/kubernetes/intro"},next:{title:"KubeEdge",permalink:"/devops/kubernetes/kubeedge"}},i={},c=[{value:"Debugging",id:"debugging",level:2},{value:"Commands",id:"commands",level:2},{value:"<code>kubectl [command] [TYPE] [NAME] [flags]</code>",id:"kubectl-command-type-name-flags",level:3},{value:"Basic Commands (Beginner)",id:"basic-commands-beginner",level:2},{value:"create",id:"create",level:3},{value:"expose",id:"expose",level:3},{value:"run",id:"run",level:3},{value:"set",id:"set",level:3},{value:"Basic Commands (Intermediate)",id:"basic-commands-intermediate",level:2},{value:"get Display one or many resources",id:"get-display-one-or-many-resources",level:3},{value:"Troubleshooting and Debugging Commands",id:"troubleshooting-and-debugging-commands",level:2},{value:"Other Commands",id:"other-commands",level:2},{value:"api-resources",id:"api-resources",level:3},{value:"config",id:"config",level:3},{value:"version",id:"version",level:3},{value:"options",id:"options",level:3},{value:"Usage",id:"usage",level:3},{value:"Commands",id:"commands-1",level:2},{value:"Experimental commands",id:"experimental-commands",level:2},{value:"Kubectl dashboard",id:"kubectl-dashboard",level:2},{value:"Kubernetes dashboard",id:"kubernetes-dashboard",level:3},{value:"Decoding a Secret",id:"decoding-a-secret",level:3},{value:"Example - Counter every 1 sec",id:"example---counter-every-1-sec",level:2},{value:"Kubectl apply vs create",id:"kubectl-apply-vs-create",level:3},{value:"Tab Completion in iterm zsh / Auto complete",id:"tab-completion-in-iterm-zsh--auto-complete",level:3},{value:"Storage Class",id:"storage-class",level:3},{value:"Cleanup / clean up commands",id:"cleanup--clean-up-commands",level:2},{value:"Requests and Limits",id:"requests-and-limits",level:2},{value:"References",id:"references",level:2}],p={toc:c},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"kubectl-commands"},"kubectl Commands"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kgpo -A --watch | ts '[%Y-%m-%d %H:%M:%S]'\nk rollout restart deployment/ticket-api -n prod\n\nkubectl run test --rm -it --image get -- bash\nkubectl run test --rm -it --image python:3.8 -- bash\nkubectl run test --rm -it --image curlimages/curl -- sh\nkubectl run nginx --image=nginx --restart=Never -n test\nkubectl run nginx --image=nginx:1.17.4 --restart=Never --port=80\nkubectl run busybox --image=busybox --restart=Never -- ls\nkubectl run busybox --image=busybox --restart=Never -- /bin/sh -c \"sleep 3600\"\nkubectl run busybox --image=nginx --restart=Never -it --rm -- echo \"How are you\"\nkubectl run busybox --image=nginx --restart=Never -it --rm -- sh\nkubectl run nginx --image=nginx --restart=Never --port=80 --expose\nkubectl run nginx --image=nginx --restart=Never --requests='cpu=100m,memory=256Mi' --limits='cpu=200m,memory=512Mi'\nkubectl run nginx --image=nginx --restart=Never --serviceaccount=myuser\nkubectl run nginx1 --image=nginx --restart=Never --labels=app=v1\n\nkubectl exec -it troubleshoot- -- /bin/sh\nkubectl exec -it busybox -- wget -o- <IP Address>\n\nkubectl create deploy nginx --image=nginx --dry-run -o yaml\nkubectl create quota myrq --hard=cpu=1,memory=1G,pods=2 --dry-run -o yaml\nkubectl create configmap config --from-literal=foo=lala --from-literal=foo2=lolo\nkubectl create cm config2 --from-file=config.txt\nkubectl create cm config4 --from-file=special=config4.txt\nkubectl create cm config3 --from-env-file=config.env\nkubectl create secret generic mysecret --from-literal=password=mypass\nkubectl create secret generic mysecret2 --from-file=username\nkubectl create sa myuser\nkubectl create job pi --image=perl -- perl -Mbignum=bpi -wle 'print bpi(2000)'\nkubectl create cronjob busybox --image=busybox --schedule=\"*/1 * * * *\" -- /bin/sh -c 'date; echo Hello from the Kubernetes cluster'\n\nkubectl expose deploy foo --port=6262 --target-port=8080\n\nkubectl delete po nginx --grace-period=0 --force\nkubectl delete deploy/nginx hpa/nginx\n\nkubectl get po nginx --v=7 (6 to 10)\nkubectl get po nginx --show-labels\nkubectl get po -l app\nkubectl get po --label-columns=app\n\nkubectl get po -l app=v2\nkubectl get po -l 'app in (v2,v1)'\nkubectl get po --selector=app=v2\nkubectl get pods --sort-by=.metadata.name (sorted by name)\nkubectl get pods--sort-by=.metadata.creationTimestamp (sorted by creationTimestamp)\nkubectl get po -o=custom-columns=\"POD_NAME:.metadata.name, POD_STATUS:.status.containerStatuses[].state\" (custom columns)\n\n# Annotations\nkubectl annotate po nginx1 nginx2 nginx3 description='my description'\nkubectl get pods -o custom-columns=Name:metadata.name,ANNOTATIONS:metadata.annotations.description\nkubectl describe po nginx1 | grep -i 'annotations'\nkubectl annotate po nginx{1..3} description-\n\nkubectl label po nginx app=nginx\nkubectl label po nginx1 nginx2 nginx3 app-\nkubectl label po nginx{1..3} app-\nkubectl label po -l app app-\n\nkubectl label po nginx2 app=v2 --overwrite\n\n# Rollouts / rollbacks\nkubectl set image pod/nginx nginx=nginx:1.15-alpine\nkubectl rollout status deploy nginx\nkubectl rollout history deploy nginx\nkubectl rollout history deploy nginx --revision=4\n\nkubectl rollout undo deploy nginx\nkubectl rollout undo deploy nginx --to-revision=2\n\nkubectl rollout pause deploy nginx\nkubectl rollout resume deploy nginx\nkubectl rollout restart deployment/frontend #Rolling restart of frontend deploy\n\nkubectl scale deploy nginx --replicas=5\nkubectl scale sts airflow-worker --replicas=5\n\nkubectl autoscale deploy nginx --min=5 --max=10 --cpu-percent=80\n\nkubectl explain po.spec\n\nkubectl top pod busybox --containers > file.log\n\nwget -O- http://10.1.0.89:8080\n\n")),(0,r.kt)("h2",{id:"debugging"},"Debugging"),(0,r.kt)("p",null,"exit code=137 means that either (1) something killed the container that hosted the TE or (2) something killed the process with SIGKILL (kill -9) (We can figure that out by taking theexit codeand deduct 128 from it to get the actual signal number, i.e.137-128=9)"),(0,r.kt)("h2",{id:"commands"},"Commands"),(0,r.kt)("h3",{id:"kubectl-command-type-name-flags"},(0,r.kt)("inlineCode",{parentName:"h3"},"kubectl [command] [TYPE] [NAME] [flags]")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"command"),": Specifies the operation that you want to perform on one or more resources, for example ",(0,r.kt)("strong",{parentName:"p"},"create"),", ",(0,r.kt)("strong",{parentName:"p"},"get"),", ",(0,r.kt)("strong",{parentName:"p"},"describe"),", ",(0,r.kt)("strong",{parentName:"p"},"delete"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"TYPE"),": Specifies the",(0,r.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/reference/kubectl/overview/#resource-types"},"resource type"),". Resource types are case-insensitive and you can specify the singular, plural, or abbreviated forms.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"NAME"),": Specifies the name of the resource. Names are case-sensitive. If the name is omitted, details for all resources are displayed, for example",(0,r.kt)("strong",{parentName:"p"},"$ kubectl get pods"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"flags"),": Specifies optional flags. For example, you can use the ",(0,r.kt)("strong",{parentName:"p"},"-s")," or ",(0,r.kt)("strong",{parentName:"p"},"--server")," flags to specify the address and port of the Kubernetes API server."))),(0,r.kt)("h2",{id:"basic-commands-beginner"},"Basic Commands (Beginner)"),(0,r.kt)("h3",{id:"create"},"create"),(0,r.kt)("p",null,"Create a resource from a file or from stdin"),(0,r.kt)("p",null,"Imperative management of kubernetes objects using configuration files"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl create deploy nginx --image nginx:latest\nkubectl create deploy python-test --image python:3.8\nkubectl create deployment troubleshoot --image=nginx\nkubectl create job --from=cronjob/loanetl loanetl-manual-002 -n apps\nkubectl create secret tls example-com-tls --cert=tls.crt --key=tls.key\nkubectl create secret tls ca-key-pair --key=ca.key --cert=ca.crt\n\n# Create a pod based on the JSON passed into stdin\ncat pod.json | kubectl create -f -\n\n# Edit the data in docker-registry.yaml in JSON then create the resource using the edited data\n\nkubectl create -f docker-registry.yaml --edit -o json\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"clusterrole Create a ClusterRole."),(0,r.kt)("li",{parentName:"ul"},"clusterrolebinding Create a ClusterRoleBinding for a particular ClusterRole"),(0,r.kt)("li",{parentName:"ul"},"configmap Create a configmap from a local file, directory or literal value"),(0,r.kt)("li",{parentName:"ul"},"cronjob Create a cronjob with the specified name."),(0,r.kt)("li",{parentName:"ul"},"deployment Create a deployment with the specified name."),(0,r.kt)("li",{parentName:"ul"},"job Create a job with the specified name."),(0,r.kt)("li",{parentName:"ul"},"namespace Create a namespace with the specified name"),(0,r.kt)("li",{parentName:"ul"},"poddisruptionbudget Create a pod disruption budget with the specified name."),(0,r.kt)("li",{parentName:"ul"},"priorityclass Create a priorityclass with the specified name."),(0,r.kt)("li",{parentName:"ul"},"quota Create a quota with the specified name."),(0,r.kt)("li",{parentName:"ul"},"role Create a role with single rule."),(0,r.kt)("li",{parentName:"ul"},"rolebinding Create a RoleBinding for a particular Role or ClusterRole"),(0,r.kt)("li",{parentName:"ul"},"secret Create a secret using specified subcommand"),(0,r.kt)("li",{parentName:"ul"},"service Create a service using specified subcommand."),(0,r.kt)("li",{parentName:"ul"},"serviceaccount Create a service account with the specified name")),(0,r.kt)("h3",{id:"expose"},"expose"),(0,r.kt)("p",null,"Take a replication controller, service, deployment or pod and expose it as a new Kubernetes Service"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'kubectl expose deployment hello-nginx --type=NodePort\nkubectl expose deployment hello-server --type="LoadBalancer"\n')),(0,r.kt)("h3",{id:"run"},"run"),(0,r.kt)("p",null,"Run a particular image on the cluster"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl run hello-nginx --image=nginx --port=80\nkubectl run -t -i kub-log --image=deepaksood619/kubernetes_logger:latest\n")),(0,r.kt)("h3",{id:"set"},"set"),(0,r.kt)("p",null,"Set specific features on objects"),(0,r.kt)("p",null,'run-container Run a particular image on the cluster. This command is deprecated, use "run" instead'),(0,r.kt)("h2",{id:"basic-commands-intermediate"},"Basic Commands (Intermediate)"),(0,r.kt)("h3",{id:"get-display-one-or-many-resources"},"get Display one or many resources"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"kubectl get nodes")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'# show public ip of nodes\nkubectl get nodes -o wide | awk {\'print $1" " $2 " " $7\'} | column -t\nkubectl get pods -o wide\nkubectl get pods --show-labels\nkubectl get deployments\nkubectl get services\nkubectl get replicasets\nkubectl get svc\nkubectl get events\nkubectl get crd\nkubectl get endpoints (ep)\nkubectl get pods -A (kubectl get pods --all-namespaces)\n\n-w for watch\n\n## explain Documentation of resources\nkubectl explain deployment\nkubectl explain deployment --recursive\nkubectl explain deployment.spec.strategy\nkubectl explain deploy.spec.strategy (works with short names too)\n\nedit Edit a resource on the server\n\n## delete Delete resources by filenames, stdin, resources and names, or by resources and label selector\n\nkubectl delete service -l run=kubernetes-bootcamp\nkubectl delete deployment hello-python\nkubectl delete daemonsets,replicasets,services,deployments,pods,rc,pvc,cm --all\n\n## Deploy Commands\n\n## rollout Manage the rollout of a resource\n\nrolling-update Perform a rolling update of the given ReplicationController\nk rollout history deployment.v1.apps/kg-kong -n kong\nk rollout undo deployment.v1.apps/kg-kong -n kong\n\n## *scale* Set a new size for a Deployment, ReplicaSet, Replication Controller, or Job\n\nkubectl scale --replicas=3 deployment/hello-nginx\nkubectl scale --replicas=10 deployment/kub-log\n\n## autoscale Auto-scale a Deployment, ReplicaSet, or ReplicationController\n\nkubectl autoscale deployment foo --min=2 --max=10 --cpu-percent=70\n\n# Autoscale pod foo with a minimum of 2 and maximum of 10 replicas when CPU utilization is equal to or greater than 70%\n\n## Cluster Management Commands\n\ncertificate Modify certificate resources.\n\n## *cluster-info* Display cluster info\n\n## top Display Resource (CPU/Memory/Storage) usage\n\nkubectl top node\nkubectl top pod\n\n## cordon Mark node as unschedulable. Used for maintenance of cluster\n\n## uncordon Mark node as schedulable. Used after maintenance\n\n## drain Drain node. Removes pods from node via graceful termination for maintenance\n\nkubectl drain aks-agentpool-10140213-9 --ignore-daemonsets\n\n## taint Update the taints on one or more nodes. Taint a node so they can only run dedicated workloads or certain pods that need specialized hardware\n\nkubectl taint nodes aks-agentpool-10140213-9 node=historical:NoSchedule\n\n# to overwrite previous taint\n\nkubectl taint nodes --overwrite aks-agentpool-10140213-0 node=example-0:NoSchedule\n\n# to remove a taint\nkubectl taint nodes aks-agentpool-10140213-9 node=NoSchedule-\n\ntolerations:\n- key: "key"\noperator: "Equal"\nvalue: "value"\neffect: "NoSchedule"\n')),(0,r.kt)("h2",{id:"troubleshooting-and-debugging-commands"},"Troubleshooting and Debugging Commands"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'*describe* Show details of a specific resource or group of resources\n\nkubectl describe node\nkubectl describe pod\nkubectl describe pod <pod_name> #get pod name using kubectl get pods\nkubectl describe service hello-nginx\nkubectl describe deployments <deployment_name>\n\n## logs Print the logs for a container in a pod\n\nkubectl logs counter\nkubectl logs --previous counter # --previous command to retrieve logs from a previous instantiation of a container\nkubectl logs -p alert-trent-7c55c54cb-6gjhc -n consumers\nkubectl logs --since-time=\'2019-04-23T12:30:36.750121287Z\' --timestamps ke-cp-kafka-connect658bfcd6fb-852fv -c cp-kafka-connect-server -n kafka\nkubectl logs busybox\nkubectl logs busybox -p #previous logs\nklo -l app=admin-panel -c celery -n prod --prefix\n\n## attach Attach to a running container\nkubectl attach -it kafka-manager-5f54d74d89-mdxh4 -n kafka\n\n## exec Execute a command in a container\nkubectl exec monolith --stdin --tty -c monolith /bin/sh\nkubectl exec -it druid-republisher-fd8bb77bd-zgjf7 -- /bin/bash\nkubectl exec -n kafka -it my-kafka-connect-cp-kafka-connect-5ff6d9758d-gjk22 -c cp-kafka-connect-server -- /bin/bash\nkubectl exec example-0 cfurl <http://10.8.0.1:9101>\n\n## port-forward Forward one or more local ports to a pod\n\nkubectl port-forward svc/emqx-service 18083:18083 --namespace kube-system\nkubectl port-forward svc/kafka-manager 8000:80 -n kafka\nkubectl port-forward <service_name> <host_port>:<service_running_port> -n kafka\n\nproxy Run a proxy to the Kubernetes API server\n\ncp Copy files and directories to and from containers\nkubectl cp busybox:/etc/passwd ./passwd\n\n# copy data from container to local\nkubectl cp prod/admin-panel-0:/app/dumpdata.sql Downloads/Office/backup/dumpdata.sql\n\n# Copy /tmp/foo_dir local directory to /tmp/bar_dir in a remote pod in the default namespace\nkubectl cp /tmp/foo_dir<some-pod>:/tmp/bar_dir\n\n# Copy /tmp/foo local file to /tmp/bar in a remote pod in a specific container\nkubectl cp/tmp/foo<some-pod>:/tmp/bar-c<specific-container>\n\n# Copy /tmp/foo local file to /tmp/bar in a remote pod in namespace <some-namespace>\nkubectl cp /tmp/foo<some-namespace>/<some-pod>:/tmp/bar\n\n# Copy /tmp/foo from a remote pod to /tmp/bar locally\nkubectl cp <some-namespace>/<some-pod>:/tmp/foo/tmp/bar\n\nauth Inspect authorization\n\n## Advanced Commands\n\n## apply Apply a configuration to a resource by filename or stdin\n\nDeclarative management of kubernetes objects using configuration files\n\nkubectl apply -f k8s/vernemq-statefulset.yaml --dry-run\nkubectl apply -f k8s/locust-service.yaml --force\n\n# patch Update field(s) of a resource using strategic merge patch\n\n# for performing rolling update on statefulset\n\n## kubectl patch statefulset web -p \'{"spec":{"updateStrategy":{"type":"RollingUpdate"}}}\'\n\nreplace Replace a resource by filename or stdin\n\nconvert Convert config files between different API versions\n\n## Settings Commands\n\n## *label* Update the labels on a resource\n\nkubectl label pod $POD_NAME app=v1\nkubectl label nodes aks-agentpool-10140213-9 node=historical\nkubectl label nodes aks-agentpool-10140213-0 node=example\nkubectl label node aks-agentpool-10140213-0 node-\n\nannotate Update the annotations on a resource\n\ncompletion Output shell completion code for the specified shell (bash or zsh)\n')),(0,r.kt)("h2",{id:"other-commands"},"Other Commands"),(0,r.kt)("h3",{id:"api-resources"},"api-resources"),(0,r.kt)("p",null,"Print all api-resources available in the cluster"),(0,r.kt)("p",null,'api-versions Print the supported API versions on the server, in the form of "group/version"'),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"admissionregistration.k8s.io/v1beta1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"apiextensions.k8s.io/v1beta1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"apiregistration.k8s.io/v1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"apiregistration.k8s.io/v1beta1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"apps/v1"),(0,r.kt)("p",{parentName:"li"},"  apps/v1 is the most popular API group in Kubernetes, and it includes functionality related to running applications on Kubernetes, like Deployments, RollingUpdates, and ReplicaSets.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"apps/v1beta1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"apps/v1beta2")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"authentication.k8s.io/v1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"authentication.k8s.io/v1beta1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"authorization.k8s.io/v1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"authorization.k8s.io/v1beta1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"autoscaling/v1"),(0,r.kt)("p",{parentName:"li"},"  autoscaling/v1 allows pods to be autoscaled based on different resource usage metrics")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"autoscaling/v2beta1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"autoscaling/v2beta2")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"azmon.container.insights/v1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"batch/v1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"batch/v1 is related to batch processing and and jobs")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"batch/v1beta1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"batch/v1beta1 is the beta release of batch/v1"))),(0,r.kt)("p",null,"certificates.k8s.io/v1beta1"),(0,r.kt)("p",null,"certificates.k8s.io/v1beta1 validates network certificates for secure communication in your cluster."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"coordination.k8s.io/v1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"coordination.k8s.io/v1beta1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"enterprises.upmc.com/v1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"events.k8s.io/v1beta1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"extensions/v1beta1"),(0,r.kt)("p",{parentName:"li"},"  extensions/v1beta1 includes many new, commonly used features. In Kubernetes 1.6, some of these features were relocated fromextensionsto specific API groups like apps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"metrics.k8s.io/v1beta1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"monitoring.coreos.com/v1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"networking.k8s.io/v1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"node.k8s.io/v1beta1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"policy/v1beta1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"policy/v1beta1 enables setting a pod disruption budget and new pod security rules")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"rbac.authorization.k8s.io/v1"),(0,r.kt)("p",{parentName:"li"},"  rbac.authorization.k8s.io/v1 includes extra functionality for Kubernetes RBAC - (role-based access control)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"rbac.authorization.k8s.io/v1beta1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"scheduling.k8s.io/v1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"scheduling.k8s.io/v1beta1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"storage.k8s.io/v1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"storage.k8s.io/v1beta1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"v1"),(0,r.kt)("p",{parentName:"li"},"  v1 was the first stable release of the Kubernetes API. It contains many core objects."))),(0,r.kt)("h3",{id:"config"},"config"),(0,r.kt)("p",null,"Modify kubeconfig files"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"current-context Displays the current-context")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"delete-cluster Delete the specified cluster from the kubeconfig")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"delete-context Delete the specified context from the kubeconfig")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"get-clusters Display clusters defined in the kubeconfig")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"get-contexts Describe one or many contexts")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"rename-context Renames a context from the kubeconfig file.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"set Sets an individual value in a kubeconfig file")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"set-cluster Sets a cluster entry in kubeconfig")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"set-context Sets a context entry in kubeconfig"),(0,r.kt)("p",{parentName:"li"},"  permanently save the namespace for all subsequent kubectl commands in that context.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"kubectl config set-context --current --namespace=monitoring**")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"set-credentials Sets a user entry in kubeconfig")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"unset Unsets an individual value in a kubeconfig file")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"use-context Sets the current-context in a kubeconfig file")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"view Display merged kubeconfig settings or a specified kubeconfig file")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"kubectl config current-context")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"kubectl config use-context docker-for-desktop")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"kubectl config set-context $(kubectl config current-context) --namespace=blue")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"kubectl config delete-cluster my-cluster")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"kubectl config delete-context my-cluster-context")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"help Help about any command")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"plugin Runs a command-line plugin"))),(0,r.kt)("h3",{id:"version"},"version"),(0,r.kt)("p",null,"Print the client and server version information"),(0,r.kt)("h3",{id:"options"},"options"),(0,r.kt)("h3",{id:"usage"},"Usage"),(0,r.kt)("p",null,"kubectl ","[flags][options]"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"kubectl apply -f service.yaml"),(0,r.kt)("li",{parentName:"ul"},"kubectl edit deployment <container_name>"),(0,r.kt)("li",{parentName:"ul"},"kubectl history deployment <container_name>")),(0,r.kt)("h2",{id:"commands-1"},"Commands"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get secret eager-otter-grafana -o yaml\nkubectl get secret --namespace default eager-otter-grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo\n\n# Adding Secrets for pulling images from private registry\n    https://container-solutions.com/using-google-container-registry-with-kubernetes/\n\nkubectl create secret docker-registry gcr-json-key --docker-server=gcr.io --docker-username=_json_key --docker-password=\"$(cat ~/json-key-file.json)\" --docker-email=deepak.sood@zenatix.com\n\nkubectl patch serviceaccount default -p '{\"imagePullSecrets\": [{\"name\": \"gcr-json-key\"}]}'\n\nkubectl patch serviceaccount default -p '{\"imagePullSecrets\": [{\"name\": \"gcr-json-key\"}]}' -n zenalytix\n\n# CPU Requests\nkubectl get po --all-namespaces -o=jsonpath=\"{range .items[*]}{.metadata.namespace}:{.metadata.name}{'\\n'}{range .spec.containers[*]}  {.name}:{.resources.requests.cpu}{'\\n'}{end}{'\\n'}{end}\"\n\n# Memory Requests\nkubectl get po --all-namespaces -o=jsonpath=\"{range .items[*]}{.metadata.namespace}:{.metadata.name}{'\\n'}{range .spec.containers[*]}  {.name}:{.resources.requests.memory}{'\\n'}{end}{'\\n'}{end}\"\n\n# CPU Limits\nkubectl get po --all-namespaces -o=jsonpath=\"{range .items[*]}{.metadata.namespace}:{.metadata.name}{'\\n'}{range .spec.containers[*]}  {.name}:{.resources.limits.cpu}{'\\n'}{end}{'\\n'}{end}\"\n")),(0,r.kt)("h2",{id:"experimental-commands"},"Experimental commands"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"kubectl diff -f k8s/vernemq-statefulset.yaml")),(0,r.kt)("h2",{id:"kubectl-dashboard"},"Kubectl dashboard"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl edit svc/kubernetes-dashboard -n kube-system\n\nAdd - loadBalancerIP: 52.172.40.253\nChange - type: LoadBalancer\n\nkubectl apply -f <https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml>\n\nkubectl proxy\n\n<https://github.com/kubernetes/dashboard>\n\n# Get bearer token\nkubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-user | awk '{print $1}')\n\neyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJ0dGwtY29udHJvbGxlci10b2tlbi1zcTYyaiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJ0dGwtY29udHJvbGxlciIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjZhMzFmZDYwLTMzNGQtMTFlOS04OTk4LTAyNTAwMDAwMDAwMSIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTp0dGwtY29udHJvbGxlciJ9.bmsdSGQH2Pgn50DbyAOKSD25GZW6A51vxcPGmFpJn1ZBkD4GQxqt4g36dJGsuD4TAHnPUOecQxuGBNJYZrpxP9qbvByqd5AfllTTHRIp170oNO65f7bN9sNfXbQev0CbxU5zOoDUoLz7KuA1qKX1chiPTq2TioRd-g6tUc9Ly1qpg7nbt4LKMCw0Kyg7H9g2Pi7s484IHvtWtrDMOsoYaix1baeujMYq4pSE8X_MNA_IPYlkF9GdpjX2OMJmsXSXlCr7-hV9gkIporAVqozLL-Upxknpt-2jfIZ5UYmgoCC4dOXTTzAe9FaMAr50ipiQzj1b7ENVtn5hMYboyuvieQ\n")),(0,r.kt)("h3",{id:"kubernetes-dashboard"},"Kubernetes dashboard"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy"},"http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy")),(0,r.kt)("h3",{id:"decoding-a-secret"},"Decoding a Secret"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get secret mysecret -o yaml\necho 'MWYyZDFlMmU2N2Rm' | base64 --decode\n")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/configuration/secret/#decoding-a-secret"},"https://kubernetes.io/docs/concepts/configuration/secret/#decoding-a-secret")),(0,r.kt)("h2",{id:"example---counter-every-1-sec"},"Example - Counter every 1 sec"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: Pod\nmetadata:\n    name: counter\nspec:\n    containers:\n        - name: count\n        image: busybox\nargs: [/bin/sh, -c, 'i=0; while true; do echo \"$i: $(date)\"; i=$((i+1)); sleep 1; done']\n")),(0,r.kt)("h3",{id:"kubectl-apply-vs-create"},"Kubectl apply vs create"),(0,r.kt)("p",null,"Those are two different approaches.kubectl createis what we call",(0,r.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/tutorials/object-management-kubectl/imperative-object-management-configuration/"},"Imperative Management"),". On this approach you tell the Kubernetes API what you want to create, replace or delete, not how you want your K8s cluster world to look like."),(0,r.kt)("p",null,"kubectl applyis part of the",(0,r.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/tutorials/object-management-kubectl/declarative-object-management-configuration/"},"Declarative Management")," approach, where changes that you may have applied to a live object (i.e. throughscale) are maintained even if youapplyother changes to the object."),(0,r.kt)("h3",{id:"tab-completion-in-iterm-zsh--auto-complete"},"Tab Completion in iterm zsh / Auto complete"),(0,r.kt)("p",null,"Add ~/.zshrc file"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"source <(kubectl completion zsh)")),(0,r.kt)("h3",{id:"storage-class"},"Storage Class"),(0,r.kt)("p",null,"Setting default storage class"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'kubectl patch storageclass <your-class-name> -p \'{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"false"}}}\'\n\nkubectl patch storageclass <your-class-name> -p \'{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}\'\n')),(0,r.kt)("h2",{id:"cleanup--clean-up-commands"},"Cleanup / clean up commands"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get pv | grep Released\nkubectl delete pv $(kubectl get pv | grep Released | awk {'print $1'})\nkubectl delete -n uat pvc $(kubectl get pvc -n uat | awk {'print $1'})\n\nDelete unused PVCs\nkubectl describe -A pvc | grep -E \"^Name:.*$|^Namespace:.*$|^Used By:.*$\" | grep -B 2 \"<none>\" | grep -E \"^Name:.*$|^Namespace:.*$\"\nkubectl describe -A pvc | grep -E \"^Name:.*$|^Namespace:.*$|^Used By:.*$\" | grep -B 2 \"<none>\" | grep -E \"^Name:.*$|^Namespace:.*$\" | cut -f2 -d: | paste -d \" \" - - | xargs -n2 bash -c 'kubectl -n ${1} delete pvc ${0}'\n\n#remove old replicasets\nkubectl get --all-namespaces rs -o json|jq -r '.items[] | select(.spec.replicas | contains(0)) | \"kubectl delete rs --namespace=\\(.metadata.namespace) \\(.metadata.name)\"'\n\n#remove jobs\nkubectl delete job $(kubectl get jobs| awk '$3 ~ 1' | awk '{print $1}')\nkubectl delete job $(kubectl get jobs -n maintenance | awk '{print $1}') -n maintenance\nkubectl delete job $(kubectl get jobs -n zenalytix | awk '$3 ~ 0' | awk '{print $1}') -n zenalytix\n\nkubectl delete pod $(kubectl get pods -l app=alertdriver -n zenalytix | awk '{print $1}') -n zenalytix\n\n# Delete namespace stuck at terminating state\n    (\nNAMESPACE=your-rogue-namespace\nkubectl proxy &\nkubectl get namespace $NAMESPACE -o json |jq '.spec = {\"finalizers\":[]}' >temp.json\ncurl -k -H \"Content-Type: application/json\" -X PUT --data-binary @temp.json 127.0.0.1:8001/api/v1/namespaces/$NAMESPACE/finalize\n)\n\n# delete pods using regex\nkubectl get pods -n crons --no-headers=true | awk '/app-rating-report/{print $1}' | xargs kubectl delete -n crons pod\n\n# delete all pods with Error status\nkubectl get pods -n crons --no-headers=true | awk '/Error/{print $1}' | xargs kubectl delete -n crons pod\n\n# completed pods\n    kubectl get pod --field-selector=status.phase==Succeeded\n    kubectl delete pod --field-selector=status.phase==Succeeded\n\n    kubectl get pods | grep Completed | awk '{print $1}' | xargs kubectl delete pod\n    kubectl get pods -n crons | grep -iv Running | awk '{print $1}' | xargs kubectl delete -n crons pod\n\n#remove evicted pods\nkubectl get pods -n <namespace> | grep Evicted | awk '{print $1}' | xargs kubectl delete pod -n <namespace>\nkubectl get pods -n apps | grep Evicted  | awk '{print $1}' | xargs kubectl delete pod -n apps\nkubectl get pods -A | grep Evicted  | awk '{print $1}' | xargs kubectl delete pod -A\n\n# Delete pods older than X seconds\nkubectl get pods -n crons -o go-template --template '{{range .items}}{{.metadata.name}} {{.metadata.creationTimestamp}}{{\"\\n\"}}{{end}}' | awk '$2 <= \"'$(date -d 'yesterday' -Ins --utc | sed 's/+0000/Z/')'\" { print $1 }' | xargs --no-run-if-empty kubectl delete pod -n crons\n\nkubectl get pods -n crons -o go-template --template '{{range .items}}{{.metadata.name}} {{.metadata.creationTimestamp}}{{\"\\n\"}}{{end}}' | awk '$2 <= \"'$(date -v-120M \"+%Y-%m-%dT%H:%M:%S\")'\" { print $1 }' | xargs --no-run-if-empty kubectl delete pod -n crons\n")),(0,r.kt)("h2",{id:"requests-and-limits"},"Requests and Limits"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import re\nimport subprocess\n\ndef get_total_requests(node_name):\nresult = subprocess.check_output(\"kubectl get pods --all-namespaces \"\nf\"-o wide --field-selector spec.nodeName={node_name} \"\n\"| awk '{print $1,$2,$4}'\", shell=True)\n\nresult = result.decode('utf-8')\nresult = result.split('n')\npods = []\n\nfor i in range(1, len(result) - 1):\nnamespace, pod_name, state = result[i].split()\n\nif state == 'Running':\npods.append((pod_name, namespace))\n\ntotal_ram = 0\ntotal_cpu = 0\n\nfor pod in pods:\npod_name, namespace = pod\nquery = f\"kubectl get pod {pod_name} -n {namespace} -o=jsonpath='\"\nr'{.spec.containers[*].resources.requests.cpu}{\"n\"}'\n\"{.spec.containers[*].resources.requests.memory}'\"\nresult = subprocess.check_output(query, shell=True)\n\nresult = result.decode('utf-8')\ncpu_requests, memory_requests = result.split('n')\n\ncpu_requests = cpu_requests.split()\nmemory_requests = memory_requests.split()\ntotal_cpu_pod = total_ram_pod = 0\n\nfor cpu_request in cpu_requests:\ntotal_cpu_pod += int(re.search(r'd+', cpu_request).group())\n\nfor ram_request in memory_requests:\ntotal_ram_pod += int(re.search(r'd+', ram_request).group())\n\nprint(f'{pod_name}: {total_cpu_pod} {total_ram_pod}')\ntotal_cpu += total_cpu_pod\ntotal_ram += total_ram_pod\n\nprint(f'requested_cpu: {total_cpu} nrequested_ram: {total_ram}')\n")),(0,r.kt)("h2",{id:"references"},"References"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://rominirani.com/tutorial-getting-started-with-kubernetes-with-docker-on-mac-7f58467203fd"},"https://rominirani.com/tutorial-getting-started-with-kubernetes-with-docker-on-mac-7f58467203fd")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/reference/kubectl/cheatsheet"},"https://kubernetes.io/docs/reference/kubectl/cheatsheet")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/reference/kubectl/overview"},"https://kubernetes.io/docs/reference/kubectl/overview")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/dgkanatsios/CKAD-exercises"},"https://github.com/dgkanatsios/CKAD-exercises")))}m.isMDXComponent=!0}}]);