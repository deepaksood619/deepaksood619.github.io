"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[19521],{486693:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>n,metadata:()=>r,toc:()=>g});const r=JSON.parse('{"id":"computer-science/programming-paradigms/behavioral-strategy","title":"Behavioral - Strategy","description":"image","source":"@site/docs/computer-science/programming-paradigms/behavioral-strategy.md","sourceDirName":"computer-science/programming-paradigms","slug":"/computer-science/programming-paradigms/behavioral-strategy","permalink":"/computer-science/programming-paradigms/behavioral-strategy","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/computer-science/programming-paradigms/behavioral-strategy.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1701793554000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Behavioral - State","permalink":"/computer-science/programming-paradigms/behavioral-state"},"next":{"title":"Concurrency - Reactor","permalink":"/computer-science/programming-paradigms/concurrency-reactor"}}');var s=a(474848),i=a(28453);const n={},c="Behavioral - Strategy",o={},g=[];function d(e){const t={a:"a",h1:"h1",header:"header",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"behavioral---strategy",children:"Behavioral - Strategy"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"image",src:a(991337).A+"",width:"1410",height:"1069"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"image",src:a(211742).A+"",width:"1410",height:"1069"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"image",src:a(213051).A+"",width:"1410",height:"1069"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"image",src:a(131464).A+"",width:"1410",height:"1069"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"image",src:a(259077).A+"",width:"1570",height:"1190"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"image",src:a(71226).A+"",width:"1410",height:"1069"})}),"\n",(0,s.jsx)(t.p,{children:"A strategy is a behavioral design pattern that defines a family of similar algorithms and places each of them in its own class, after which the algorithms can be interchanged right during the execution of the program.\nPros:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:'"hot" algorithm replacement on the fly;'}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"the algorithms' code and data isolation from other classes."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Cons:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["complicates the program due to the additional classes.",(0,s.jsx)(t.strong,{children:"References"})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://py.checkio.org/blog/design-patterns-part-1",children:"https://py.checkio.org/blog/design-patterns-part-1"})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},991337:(e,t,a)=>{a.d(t,{A:()=>r});const r=a.p+"assets/images/Behavioral-Strategy-image1-f344df7ddf17874edbc665df226c7f8d.jpg"},211742:(e,t,a)=>{a.d(t,{A:()=>r});const r=a.p+"assets/images/Behavioral-Strategy-image2-78e5a151d85db3dfe235924947e2fe6b.jpg"},213051:(e,t,a)=>{a.d(t,{A:()=>r});const r=a.p+"assets/images/Behavioral-Strategy-image3-873f8a77a8ea432e8b484407ea14993e.jpg"},131464:(e,t,a)=>{a.d(t,{A:()=>r});const r=a.p+"assets/images/Behavioral-Strategy-image4-cf2cc1c46ad604b9d2520abe8c771a74.jpg"},259077:(e,t,a)=>{a.d(t,{A:()=>r});const r=a.p+"assets/images/Behavioral-Strategy-image5-88bc793856952a181ef2a6cc1d68e4c3.jpg"},71226:(e,t,a)=>{a.d(t,{A:()=>r});const r=a.p+"assets/images/Behavioral-Strategy-image6-b628c9871384ae0552be6c53edd370b2.jpg"},28453:(e,t,a)=>{a.d(t,{R:()=>n,x:()=>c});var r=a(296540);const s={},i=r.createContext(s);function n(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:n(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);