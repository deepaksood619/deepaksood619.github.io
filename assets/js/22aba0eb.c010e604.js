"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[42128],{540691:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>n,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"data-structures/hashtable/hyperloglog","title":"HyperLogLog","description":"HyperLogLog is a streaming algorithm used for estimating the number of distinct elements (the cardinality) of very large data sets. HyperLogLog counter can count one billion distinct items with an accuracy of 2% using only 1.5 KB of memory. It is based on the bit pattern observation that for a stream of randomly distributed numbers, if there is a number x with the maximum of leading 0 bits k, the cardinality of the stream is very likely equal to 2^k.","source":"@site/docs/data-structures/hashtable/hyperloglog.md","sourceDirName":"data-structures/hashtable","slug":"/data-structures/hashtable/hyperloglog","permalink":"/data-structures/hashtable/hyperloglog","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/data-structures/hashtable/hyperloglog.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1701793554000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Hashing","permalink":"/data-structures/hashtable/hashing"},"next":{"title":"Kademlia","permalink":"/data-structures/hashtable/kademlia"}}');var r=a(474848),s=a(28453);const n={},i="HyperLogLog",c={},l=[];function u(e){const t={a:"a",h1:"h1",header:"header",p:"p",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"hyperloglog",children:"HyperLogLog"})}),"\n",(0,r.jsx)(t.p,{children:"HyperLogLog is a streaming algorithm used for estimating the number of distinct elements (the cardinality) of very large data sets. HyperLogLog counter can count one billion distinct items with an accuracy of 2% using only 1.5 KB of memory. It is based on the bit pattern observation that for a stream of randomly distributed numbers, if there is a number x with the maximum of leading 0 bits k, the cardinality of the stream is very likely equal to 2^k."}),"\n",(0,r.jsx)(t.p,{children:"HyperLogLog, it's a statistical data structure that derives approximations- in O(1) time complexity and O(log(log(n)) space complexity. The catch is that you get about 1.5% accuracy, configurable of course by taking up more space. As an example, 1.3KB can estimate the cardinality of tens of billions of unique values with an accuracy of a few percent."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://dzone.com/articles/introduction-probabilistic-0",children:"https://dzone.com/articles/introduction-probabilistic-0"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://www.youtube.com/watch?v=lJYufx0bfpw",children:"A problem so hard even Google relies on Random Chance - YouTube"})})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>n,x:()=>i});var o=a(296540);const r={},s=o.createContext(r);function n(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);