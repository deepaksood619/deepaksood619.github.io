"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[42566],{134501:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"python/django/commands","title":"Commands","description":"- migrate, which is responsible for applying and unapplying migrations.","source":"@site/docs/python/django/commands.md","sourceDirName":"python/django","slug":"/python/django/commands","permalink":"/python/django/commands","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/python/django/commands.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1701793554000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Cheatsheet","permalink":"/python/django/cheatsheet"},"next":{"title":"Content Types","permalink":"/python/django/content-types"}}');var s=t(474848),o=t(28453);const i={},r="Commands",d={},l=[];function c(n){const e={a:"a",code:"code",h1:"h1",header:"header",li:"li",pre:"pre",ul:"ul",...(0,o.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"commands",children:"Commands"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"python -m django --version\n\ngunicorn mysite.wsgi:application\n\ndaphene mysite.asgi:application\n\n## Creating a project\n# for creating project in current directory\ndjango-admin startproject mysite .\n\n## Start development server\npython manage.py runserver\n\n## Creating apps\npython manage.py startapp polls\n\n## Creating sub applications\ncd app\n\npython ../manage.py startapp sub_app\n\n## Playing with the API (Shell)\npython manage.py shell\n\n## Shell Plus\npython manage.py shell_plus\n\n## Collect static files\npython manage.py collectstatic -c\n\n## Creating admin\npython manage.py createsuperuser\n\nhttp://localhost:8000/admin\n\n## Running tests\npython manage.py test <app_name>\n\npython manage.py test polls\n\npython -Wd manage.py test (This will show all deprecation warnings)\n\n## Finding django source files\npython -c \"import django; print(django.__path__)\"\n\n## Shell commands\nfrom polls.models import Question, Choice\n\nQuestion.objects.all()\n\nQ = Question(question_text=\"What's new?\", pub_date=timezone.now())\nQ.save()\n\nQ.id\nQ.question_text\nQ.pub_date\nQ.question_text=\"What's up?\"\nQ.save()\n\nQuestion.objects.all()\nQuestion.objects.filter(id=1)\nQuestion.objects.filter(question_text__startswith='What')\n\nCurrent_year = timezone.now().year\nQuestion.objects.get(pub_date__year=current_year)\n\nQ = Question.objects.get(pk=1)\nQ.choice_set.all()\nQ.choice_set.create(choice_text='Not much', votes=0)\nQ.question\nQ.choice_set.count()\n\n## To override model's toString\ndef __str__(self):\n    return self.question_text\n\n## Forgot Password\npython manage.py shell\nfrom django.contrib.auth.models import User\nuser = User.objects.all()[0]\nuser.set_password('new_password')\nuser.save()\n\n## django-admin commands\n[django]\n    check\n    compilemessages\n    collectstatic\n    collectstatic --noinput -c (Generate static files to serve)\n    createcachetable\n    dbshell\n    diffsettings\n    dumpdata\n    python manage.py dumpdata > dumpdata.sql\n    flush\n    findstatic\n    inspectdb\n    loaddata\n    loaddata initial_data (Searches for and loads the contents of the named fixture into the database)\n    makemessages\n    makemigrations (creating new migrations)\n    migrate (applying and unapplying migrations)\n    migrate home_device zero (Uninstall migrations from an application)\n\n    The migrate command takes all the migrations that haven\u2019t been applied (Django tracks which ones are applied using a special table in your database called django_migrations) and runs them against your database - essentially, synchronizing the changes you made to your models with the schema in the database.\n    Migrations are very powerful and let you change your models over time, as you develop your project, without the need to delete your database or tables and make new ones - it specializes in upgrading your database live, without losing data.\n\n    runserver\n    sendtestemail\n    shell\n    showmigrations (lists a project\u2019s migrations and their status)\n    sqlflush\n    sqlmigrate (displays the SQL statements for a migration)\n    sqlsequencereset\n    squashmigrations\n    startapp\n    startproject\n    test\n    testserver\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"https://docs.djangoproject.com/en/3.2/ref/django-admin/#django-admin-migrate",children:"migrate"}),", which is responsible for applying and unapplying migrations."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"https://docs.djangoproject.com/en/3.2/ref/django-admin/#django-admin-makemigrations",children:"makemigrations"}),", which is responsible for creating new migrations based on the changes you have made to your models."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"https://docs.djangoproject.com/en/3.2/ref/django-admin/#django-admin-sqlmigrate",children:"sqlmigrate"}),", which displays the SQL statements for a migration."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"https://docs.djangoproject.com/en/3.2/ref/django-admin/#django-admin-showmigrations",children:"showmigrations"}),", which lists a project's migrations and their status."]}),"\n"]})]})}function p(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(c,{...n})}):c(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>i,x:()=>r});var a=t(296540);const s={},o=a.createContext(s);function i(n){const e=a.useContext(o);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:i(n.components),a.createElement(o.Provider,{value:e},n.children)}}}]);