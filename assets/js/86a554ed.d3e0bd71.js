"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[17845],{986506:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>n,metadata:()=>r,toc:()=>d});var a=i(785893),s=i(511151);const n={},o="Others",r={id:"databases/nosql-databases/druid/others",title:"Others",description:"Plywood",source:"@site/docs/databases/nosql-databases/druid/others.md",sourceDirName:"databases/nosql-databases/druid",slug:"/databases/nosql-databases/druid/others",permalink:"/databases/nosql-databases/druid/others",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/databases/nosql-databases/druid/others.md",tags:[],version:"current",lastUpdatedAt:1701793554,formattedLastUpdatedAt:"Dec 5, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Druid",permalink:"/databases/nosql-databases/druid/intro"},next:{title:"Paper",permalink:"/databases/nosql-databases/druid/paper"}},l={},d=[{value:"Plywood",id:"plywood",level:2},{value:"Turnilo",id:"turnilo",level:2},{value:"Tranquility",id:"tranquility",level:2},{value:"Imply Pivot",id:"imply-pivot",level:2}];function u(e){const t={a:"a",h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"others",children:"Others"}),"\n",(0,a.jsx)(t.h2,{id:"plywood",children:"Plywood"}),"\n",(0,a.jsx)(t.p,{children:"Plywood is a JavaScript library that simplifies building interactive visualizations and applications for large data sets. Plywood acts as a middle-layer between data visualizations and data stores."}),"\n",(0,a.jsxs)(t.p,{children:["Plywood is architected around the principles of nested ",(0,a.jsx)(t.a,{href:"http://www.jstatsoft.org/article/view/v040i01/v40i01.pdf",children:"Split-Apply-Combine"}),", a powerful divide-and-conquer algorithm that can be used to construct all types of data visualizations. Plywood comes with its own ",(0,a.jsx)(t.a,{href:"https://github.com/implydata/plywood/blob/master/docs/expressions",children:"expression language"})," where a single Plywood expression can translate to multiple database queries, and where results are returned in a nested data structure so they can be easily consumed by visualization libraries such as ",(0,a.jsx)(t.a,{href:"http://d3js.org/",children:"D3.js"}),"."]}),"\n",(0,a.jsx)(t.p,{children:"You can use Plywood in the browser and/or in node.js to easily create your own visualizations and applications."}),"\n",(0,a.jsx)(t.p,{children:"Plywood also acts as a very advanced query planner for Druid, and Plywood will determine the most optimal way to execute Druid queries."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.a,{href:"https://github.com/implydata/plywood",children:"https://github.com/implydata/plywood"})}),"\n",(0,a.jsx)(t.h2,{id:"turnilo",children:"Turnilo"}),"\n",(0,a.jsx)(t.p,{children:"Business intelligence, data exploration and visualization web application for Druid"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.a,{href:"https://github.com/allegro/turnilo",children:"https://github.com/allegro/turnilo"})}),"\n",(0,a.jsx)(t.h2,{id:"tranquility",children:"Tranquility"}),"\n",(0,a.jsx)(t.p,{children:"Tranquility helps you send real-time event streams to Druid and handles partitioning, replication, service discovery, and schema rollover, seamlessly and without downtime."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.a,{href:"https://github.com/druid-io/tranquility",children:"https://github.com/druid-io/tranquility"})}),"\n",(0,a.jsx)(t.h2,{id:"imply-pivot",children:"Imply Pivot"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Imply Pivot is a web-based analytics application on Druid"}),"\n",(0,a.jsx)(t.li,{children:"It provides interactive, point-and-click visualizations as well as a SQL query UI"}),"\n",(0,a.jsx)(t.li,{children:"It is only available with the Imply distribution of Druid"}),"\n"]})]})}function c(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},511151:(e,t,i)=>{i.d(t,{Z:()=>r,a:()=>o});var a=i(667294);const s={},n=a.createContext(s);function o(e){const t=a.useContext(n);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(n.Provider,{value:t},e.children)}}}]);