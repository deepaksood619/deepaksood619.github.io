"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[47756],{11233:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"computer-science/interview-question/system-design-tinyurl","title":"System Design - TinyURL","description":"System Design : Design a service like TinyUrl","source":"@site/docs/computer-science/interview-question/system-design-tinyurl.md","sourceDirName":"computer-science/interview-question","slug":"/computer-science/interview-question/system-design-tinyurl","permalink":"/computer-science/interview-question/system-design-tinyurl","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/computer-science/interview-question/system-design-tinyurl.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1700454456000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"System Design - Parking Lot","permalink":"/computer-science/interview-question/system-design-parking-lot"},"next":{"title":"System Design - Twitter","permalink":"/computer-science/interview-question/system-design-twitter"}}');var t=i(474848),r=i(28453);const l={},a="System Design - TinyURL",c={},o=[{value:"Problem Statement",id:"problem-statement",level:2},{value:"API",id:"api",level:2},{value:"Application layer",id:"application-layer",level:2},{value:"Load Balancer",id:"load-balancer",level:2},{value:"Worker URL",id:"worker-url",level:2},{value:"Cache",id:"cache",level:2},{value:"How to generate a tinyURL",id:"how-to-generate-a-tinyurl",level:2},{value:"Database",id:"database",level:2},{value:"Non Functional",id:"non-functional",level:2},{value:"Functional",id:"functional",level:2},{value:"Capacity Estimation",id:"capacity-estimation",level:2},{value:"Cache",id:"cache-1",level:2}];function d(e){const n={a:"a",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"system-design---tinyurl",children:"System Design - TinyURL"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://www.youtube.com/watch?v=fMZMm_0ZhK4",children:"System Design : Design a service like TinyUrl"})}),"\n",(0,t.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,t.jsx)(n.p,{children:"Given a long url return a short url, and given a short url return the corresponding long url"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"How to generate 7-8 Characters long and is unique"}),"\n",(0,t.jsx)(n.li,{children:"How to design the persistance layer (where you would store the short url and long url)"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,t.jsx)(n.p,{children:"createTiny(longUrl) -> tinyUrl"}),"\n",(0,t.jsx)(n.p,{children:"getLong(tinyUrl) -> longUrl"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Add Expiration time"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"application-layer",children:"Application layer"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"image",src:i(24230).A+"",width:"999",height:"617"})}),"\n",(0,t.jsx)(n.h2,{id:"load-balancer",children:"Load Balancer"}),"\n",(0,t.jsx)(n.p,{children:"Delegate requests to one of the worker threads"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Software"}),"\n",(0,t.jsx)(n.li,{children:"Software + Hardware"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"worker-url",children:"Worker URL"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Take longer url generate tiny url and store it in persistance layer and return tiny url"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Take shorter url fetch it's corresponding long url and return back long url."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"cache",children:"Cache"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"memcached"}),"\n",(0,t.jsx)(n.li,{children:"redis"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"how-to-generate-a-tinyurl",children:"How to generate a tinyURL"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Characters - a-zA-Z0-9 (Use a BASE 62 encoding since A-Za-z0-9 total are 62 characters.)"}),"\n",(0,t.jsx)(n.li,{children:"Length of generated tinyURL - 7 characters long"}),"\n",(0,t.jsx)(n.li,{children:"Total combinations - 62^7 - 3.5 trillion (million requests/second - 40 days, 1000 requests/second - 110 years exhaust)"}),"\n",(0,t.jsx)(n.li,{children:"Any number from 0 to 3.5 trillion can be represented by 43 bits"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"image",src:i(940081).A+"",width:"999",height:"581"})}),"\n",(0,t.jsx)(n.h2,{id:"database",children:"Database"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Key as tiny url"}),"\n",(0,t.jsx)(n.li,{children:"value as longer url"}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Generate random tiny url & check db"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Technique 1"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"get a random tiny url and put tiny url with long url in database."}),"\n",(0,t.jsx)(n.p,{children:"Problem - Other worker thread can do the same"}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Technique 2"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Put if absent"}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"Technique 3"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"put (tiny, long)"}),"\n",(0,t.jsx)(n.p,{children:"get(tiny) - if both are same than service worker is done"}),"\n",(0,t.jsx)(n.p,{children:"Otherwise again do put(tiny, long) and repeat"}),"\n",(0,t.jsx)(n.p,{children:"Problem - For every put you have to do atleast one get.\n2. Pick first 43 bits of MD5"}),"\n",(0,t.jsx)(n.p,{children:"We calculate the MD5 of longer url then take the first 43 bits of that md5 and use that to generate the tiny url"}),"\n",(0,t.jsx)(n.p,{children:"MD5 is a hashing function that generate 128 bit long hash."}),"\n",(0,t.jsx)(n.p,{children:"Probability of collision - smaller if more bits are taken, but than the length of tiny url gets longer.\nUse md5 to generate tinyurl and than check database for collision.\nAdvantage of random generation vs MD5"}),"\n",(0,t.jsx)(n.p,{children:"Save some space in database"}),"\n",(0,t.jsxs)(n.p,{children:["If two users want to generate two tiny urls for same long string, so in 1st technique there will be two tiny urls with 2 records, but in 2nd technique both will have same MD5 with same first 43 bits so we can have some ",(0,t.jsx)(n.strong,{children:"deduping (to remove duplicate entries from a list or database),"})," so we have to store only one row instead of two row in the database.\nConvert 43 bits to 7 characters long url"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Convert 43 bits binray to decimal"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Convert decimal to base 62 (divide by 62 and mod by 62) - will get number from 0 to 61"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Map 0 - 61 to characters"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Counter"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Single Host"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"a single maintainer is responsible to maintain the counter"}),"\n",(0,t.jsx)(n.li,{children:"Can be a database or a zookeeper instance"}),"\n",(0,t.jsx)(n.li,{children:"Every worker thread requests a counter maintainer to give it a counter, and using that counter worker creates the tiny url"}),"\n",(0,t.jsx)(n.li,{children:"Problem - Single point of contact, single point of failure, single point of bottleneck"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"All Host"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Every worker will be responsible to generate a unique number according to there worker id, timestamp and some uniqueness"}),"\n",(0,t.jsx)(n.li,{children:"Problem - Can cause collision if requests increases"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Range Based"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"We divide the total 3.5 trillion combinations into ranges, every worker will be alloted each range. Ranges can be divided into billions which will also be divided into millions"}),"\n",(0,t.jsx)(n.li,{children:"These all allotments of ranges is maintained by zookeeper"}),"\n",(0,t.jsx)(n.li,{children:"It guarantees that there are no collisions."}),"\n",(0,t.jsx)(n.li,{children:"Also can add some random bits to increase security."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"image",src:i(968276).A+"",width:"1000",height:"518"})}),"\n",(0,t.jsxs)(n.p,{children:["Get requests can be cached using CDN\n",(0,t.jsx)(n.a,{href:"https://www.youtube.com/watch?v=josjRSBqEBI",children:"Paste bin system design | Software architecture for paste bin"})]}),"\n",(0,t.jsx)(n.h2,{id:"non-functional",children:"Non Functional"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Durability"}),"\n",(0,t.jsx)(n.li,{children:"HA"}),"\n",(0,t.jsx)(n.li,{children:"Low latency"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"functional",children:"Functional"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Paste + Size max 10 MB"}),"\n",(0,t.jsx)(n.li,{children:"Custom URL Path"}),"\n",(0,t.jsx)(n.li,{children:"Paste expiry"}),"\n",(0,t.jsx)(n.li,{children:"User login / Anonymous"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"capacity-estimation",children:"Capacity Estimation"}),"\n",(0,t.jsx)(n.p,{children:"Assumptions"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Pastes: 100K / day"}),"\n",(0,t.jsx)(n.li,{children:"Reads: 10X per paste\nTraffic"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Hits: 100000/24 = 4166.6667 / hour"}),"\n",(0,t.jsx)(n.p,{children:"100000/(24*3600) = 1.1574 / sec"}),"\n",(0,t.jsx)(n.p,{children:"Read: 1000000/(24*3600) = 11.5741 / sec"}),"\n",(0,t.jsx)(n.p,{children:"Buffer: 30% more = 20 rps\nData Storage"}),"\n",(0,t.jsx)(n.p,{children:"10 MB * 100K = 1000 GB / day (worst)"}),"\n",(0,t.jsx)(n.p,{children:"100 KB * 100K = 10 GB / day (avg)"}),"\n",(0,t.jsx)(n.p,{children:"365 * 1000GB = 365 TB / year"}),"\n",(0,t.jsx)(n.h2,{id:"cache-1",children:"Cache"}),"\n",(0,t.jsx)(n.p,{children:"Save key, s3 location, along with some amount of data, that can quickly show some data to user while full data is fetched from s3\nPaste"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"pasteid"}),"\n",(0,t.jsx)(n.li,{children:"content"}),"\n",(0,t.jsx)(n.li,{children:"s3_link"}),"\n",(0,t.jsx)(n.li,{children:"created_at"}),"\n",(0,t.jsx)(n.li,{children:"expire_at\nUser"}),"\n",(0,t.jsx)(n.li,{children:"id"}),"\n",(0,t.jsx)(n.li,{children:"name"}),"\n",(0,t.jsx)(n.li,{children:"created"}),"\n",(0,t.jsx)(n.li,{children:"metadata"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"image",src:i(562911).A+"",width:"999",height:"631"})}),"\n",(0,t.jsx)(n.p,{children:"DKGS - Distributed Key Generation Service"}),"\n",(0,t.jsx)(n.p,{children:"8 byte/8char"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Millisec timestamp - 41 bits"}),"\n",(0,t.jsx)(n.li,{children:"Node ID - 10 bits"}),"\n",(0,t.jsx)(n.li,{children:"Local counter in each node - 12 bits"}),"\n",(0,t.jsx)(n.li,{children:"= 64 bit random id for each key"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Async cleanup service"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Every hour run through whole database to get expired keys and delete the same from s3/blob storage"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},24230:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/System-Design-TinyURL-image1-4c920dd286f2957dfe0ace0f168f3667.jpg"},940081:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/System-Design-TinyURL-image2-3158dd6caf51f18a1c6d95f18a06aab4.jpg"},968276:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/System-Design-TinyURL-image3-65e5851e879506db7871bcac10b4f029.jpg"},562911:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/System-Design-TinyURL-image4-e895b9f836bf25d8995bdfba9571a252.jpg"},28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var s=i(296540);const t={},r=s.createContext(t);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);