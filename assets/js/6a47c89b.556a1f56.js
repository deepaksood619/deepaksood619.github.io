"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[36027],{709302:(e,i,r)=>{r.r(i),r.d(i,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"computer-science/operating-system/others","title":"Others","description":"Interrupt Coelesing","source":"@site/docs/computer-science/operating-system/others.md","sourceDirName":"computer-science/operating-system","slug":"/computer-science/operating-system/others","permalink":"/computer-science/operating-system/others","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/computer-science/operating-system/others.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1701793554000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Microprocessor","permalink":"/computer-science/operating-system/microprocessor"},"next":{"title":"Parallel Processing","permalink":"/computer-science/operating-system/parallel-processing"}}');var n=r(474848),s=r(28453);const a={},o="Others",d={},c=[{value:"Interrupt Coelesing",id:"interrupt-coelesing",level:2},{value:"Bank Switching",id:"bank-switching",level:2},{value:"Copy on Write (CoW / COW)",id:"copy-on-write-cow--cow",level:2},{value:"Virtual Hard Drive",id:"virtual-hard-drive",level:2},{value:"Wayland",id:"wayland",level:2},{value:"Weston",id:"weston",level:2},{value:"Handle",id:"handle",level:2}];function h(e){const i={a:"a",h1:"h1",h2:"h2",header:"header",p:"p",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsx)(i.h1,{id:"others",children:"Others"})}),"\n",(0,n.jsx)(i.h2,{id:"interrupt-coelesing",children:"Interrupt Coelesing"}),"\n",(0,n.jsx)(i.h2,{id:"bank-switching",children:"Bank Switching"}),"\n",(0,n.jsxs)(i.p,{children:["Bank switching is a technique used in computer design to increase the amount of usable memory beyond the amount directly addressable by the ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Microprocessor",children:"processor"}),".It can be used to configure a system differently at different times; for example, a ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Read-only_memory",children:"ROM"})," required to ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Booting",children:"start a system"})," from diskette could be switched out when no longer needed. In video game systems, bank switching allowed larger games to be developed for play on existing consoles."]}),"\n",(0,n.jsxs)(i.p,{children:["Bank switching originated in ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Minicomputer",children:"minicomputer"})," systems.Many modern ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Microcontroller",children:"microcontrollers"})," and ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Microprocessor",children:"microprocessors"})," use bank switching to manage ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Random-access_memory",children:"random-access memory"}),", non-volatile memory, input-output devices and system management registers in small ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Embedded_system",children:"embedded systems"}),". The technique was common in ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/8-bit",children:"8-bit"}),(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Microcomputer",children:"microcomputer"})," systems. Bank-switching may also be used to work around limitations in address bus width, where some hardware constraint prevents straightforward addition of more address lines. Some control-oriented microprocessors use a bank-switching technique to access internal I/O and control registers, which limits the number of register address bits that must be used in every instruction."]}),"\n",(0,n.jsxs)(i.p,{children:["Unlike memory management by ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Paging",children:"paging"}),", data is not exchanged with a mass storage device like ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Disk_storage",children:"disk storage"}),". Data remains in quiescent storage in a memory area that is not currently accessible to the processor (although it may be accessible to the video display, ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Direct_memory_access",children:"DMA controller"}),", or other subsystems of the computer)."]}),"\n",(0,n.jsx)(i.h2,{id:"copy-on-write-cow--cow",children:"Copy on Write (CoW / COW)"}),"\n",(0,n.jsxs)(i.p,{children:["Copy-on-write(CoWorCOW), sometimes referred to asimplicit sharingorshadowing, is a resource-management technique used in ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Computer_programming",children:"computer programming"}),' to efficiently implement a "duplicate" or "copy" operation on modifiable resources.If a resource is duplicated but not modified, it is not necessary to create a new resource; the resource can be shared between the copy and the original. Modifications must still create a copy, hence the technique: the copy operation is deferred to the first write. By sharing resources in this way, it is possible to significantly reduce the resource consumption of unmodified copies, while adding a small overhead to resource-modifying operations.']}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Copy-on-write",children:"https://en.wikipedia.org/wiki/Copy-on-write"})}),"\n",(0,n.jsx)(i.h2,{id:"virtual-hard-drive",children:"Virtual Hard Drive"}),"\n",(0,n.jsxs)(i.p,{children:["VHD(Virtual Hard Disk) is a ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/File_format",children:"file format"})," which represents a virtual ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Hard_disk_drive",children:"hard disk drive"}),"(HDD). It may contain what is found on a physical HDD, such as ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Disk_partition",children:"disk partitions"})," and a ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/File_system",children:"file system"}),", which in turn can contain ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Computer_file",children:"files"})," and ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Folder_(computing)",children:"folders"}),". It is typically used as the hard disk of a ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Virtual_machine",children:"virtual machine"})]}),"\n",(0,n.jsx)(i.h2,{id:"wayland",children:"Wayland"}),"\n",(0,n.jsx)(i.p,{children:"Wayland is intended as a simpler replacement for X, easier to develop and maintain. GNOME and KDE are expected to be ported to it.\nWayland is a protocol for a compositor to talk to its clients as well as a C library implementation of that protocol. The compositor can be a standalone display server running on Linux kernel modesetting and evdev input devices, an X application, or a wayland client itself. The clients can be traditional applications, X servers (rootless or fullscreen) or other display servers."}),"\n",(0,n.jsx)(i.p,{children:"Part of the Wayland project is also the Weston reference implementation of a Wayland compositor. Weston can run as an X client or under Linux KMS and ships with a few demo clients. The Weston compositor is a minimal and fast compositor and is suitable for many embedded and mobile use cases."}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.a,{href:"https://wayland.freedesktop.org/",children:"https://wayland.freedesktop.org"})}),"\n",(0,n.jsx)(i.h2,{id:"weston",children:"Weston"}),"\n",(0,n.jsxs)(i.p,{children:["Weston is the reference implementation of a Wayland compositor also developed by the Wayland project. It is written in ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/C_(programming_language)",children:"C"})," and published under the ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/MIT_License",children:"MIT License"}),". Weston has official support for only the ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Linux",children:"Linux"})," operating system due to Weston's dependence on certain features of the ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Linux_kernel",children:"Linux kernel"}),", such as ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/KMS_driver",children:"kernel mode-setting"}),", ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Graphics_Execution_Manager",children:"Graphics Execution Manager"}),"(GEM), and ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Udev",children:"udev"}),", which have not been implemented in other Unix-like operating systems. When running on Linux, handling of the input hardware relies on ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Evdev",children:"evdev"}),", while the handling of buffers relies on ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Generic_Buffer_Management",children:"Generic Buffer Management"}),"(GBM). However, in 2013 a prototype port of Weston to ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/FreeBSD",children:"FreeBSD"})," was announced."]}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Wayland_(display_server_protocol)#Weston",children:"https://en.wikipedia.org/wiki/Wayland_(display_server_protocol)#Weston"})}),"\n",(0,n.jsx)(i.h2,{id:"handle",children:"Handle"}),"\n",(0,n.jsxs)(i.p,{children:["In ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Computer_programming",children:"computer programming"}),", ahandleis an abstract ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Reference_(computer_science)",children:"reference"})," to a ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/System_resource",children:"resource"}),". Handles are used when ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Application_software",children:"application software"})," references blocks of ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Memory_(computing)",children:"memory"})," or objects managed by another system, such as a ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Database",children:"database"})," or an ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Operating_system",children:"operating system"}),". A resource handle can be an ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Opaque_data_type",children:"opaque"}),(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Identifier",children:"identifier"}),", in which case it is often an ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Integer",children:"integer"})," number (often an ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Array_index",children:"array index"}),' in an array or "table" that is used to manage that type of resource), or it can be a ',(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Pointer_(computer_programming)",children:"pointer"})," that allows access to further information."]}),"\n",(0,n.jsxs)(i.p,{children:["Common resource handles are ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/File_descriptor",children:"file descriptors"}),", ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Network_socket",children:"network sockets"}),", ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Database_connection",children:"database connections"}),", ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Process_identifier",children:"process identifiers"}),"(PIDs), and ",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Job_ID",children:"job IDs"}),". Process IDs and job IDs are explicitly visible integers, while file descriptors and sockets (which are often implemented as a form of file descriptor) are represented as integers, but are typically considered opaque. In traditional implementations, file descriptors are indices into a (per-process)",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/File_descriptor_table",children:"file descriptor table"}),", thence a (system-wide)",(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/File_table",children:"file table"}),"."]}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Handle_(computing)",children:"https://en.wikipedia.org/wiki/Handle_(computing)"})})]})}function p(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},28453:(e,i,r)=>{r.d(i,{R:()=>a,x:()=>o});var t=r(296540);const n={},s=t.createContext(n);function a(e){const i=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),t.createElement(s.Provider,{value:i},e.children)}}}]);