"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[97102],{890826:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"python/documentation/30-python-runtime-services","title":"30. Python Runtime Services","description":"30.1. sys - System-specific parameters and functions","source":"@site/docs/python/documentation/30-python-runtime-services.md","sourceDirName":"python/documentation","slug":"/python/documentation/30-python-runtime-services","permalink":"/python/documentation/30-python-runtime-services","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/python/documentation/30-python-runtime-services.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1701793554000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"28. Debugging and Profiling","permalink":"/python/documentation/28-debugging-and-profiling"},"next":{"title":"33. Python Language Services","permalink":"/python/documentation/33-python-language-services"}}');var i=t(474848),r=t(28453);const c={},a="30. Python Runtime Services",l={},o=[{value:"30.1. sys - System-specific parameters and functions",id:"301-sys---system-specific-parameters-and-functions",level:2},{value:"30.6. dataclasses - Data Classes",id:"306-dataclasses---data-classes",level:2},{value:"30.7. contextlib - Utilities for with-statement contexts",id:"307-contextlib---utilities-for-with-statement-contexts",level:2},{value:"30.9. atexit - Exit handlers",id:"309-atexit---exit-handlers",level:2},{value:"Sys Module",id:"sys-module",level:2},{value:"Garbage collection",id:"garbage-collection",level:2},{value:"References",id:"references",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"30-python-runtime-services",children:"30. Python Runtime Services"})}),"\n",(0,i.jsx)(n.h2,{id:"301-sys---system-specific-parameters-and-functions",children:"30.1. sys - System-specific parameters and functions"}),"\n",(0,i.jsx)(n.p,{children:"30.2. sysconfig - Provide access to Python's configuration information"}),"\n",(0,i.jsx)(n.p,{children:"30.2.1. Configuration variables"}),"\n",(0,i.jsx)(n.p,{children:"30.2.2. Installation paths"}),"\n",(0,i.jsx)(n.p,{children:"30.2.3. Other functions"}),"\n",(0,i.jsx)(n.p,{children:"30.2.4. Using sysconfig as a script"}),"\n",(0,i.jsx)(n.p,{children:"30.3. builtins - Built-in objects"}),"\n",(0,i.jsxs)(n.p,{children:["30.4. ",(0,i.jsx)(n.strong,{children:"main"})," - Top-level script environment"]}),"\n",(0,i.jsx)(n.p,{children:"30.5. warnings - Warning control"}),"\n",(0,i.jsx)(n.p,{children:"30.5.1. Warning Categories"}),"\n",(0,i.jsx)(n.p,{children:"30.5.2. The Warnings Filter"}),"\n",(0,i.jsx)(n.p,{children:"30.5.2.1. Describing Warning Filters"}),"\n",(0,i.jsx)(n.p,{children:"30.5.2.2. Default Warning Filter"}),"\n",(0,i.jsx)(n.p,{children:"30.5.2.3. Overriding the default filter"}),"\n",(0,i.jsx)(n.p,{children:"30.5.3. Temporarily Suppressing Warnings"}),"\n",(0,i.jsx)(n.p,{children:"30.5.4. Testing Warnings"}),"\n",(0,i.jsx)(n.p,{children:"30.5.5. Updating Code For New Versions of Dependencies"}),"\n",(0,i.jsx)(n.p,{children:"30.5.6. Available Functions"}),"\n",(0,i.jsx)(n.p,{children:"30.5.7. Available Context Managers"}),"\n",(0,i.jsx)(n.h2,{id:"306-dataclasses---data-classes",children:"30.6. dataclasses - Data Classes"}),"\n",(0,i.jsx)(n.p,{children:"30.6.1. Module-level decorators, classes, and functions"}),"\n",(0,i.jsx)(n.p,{children:"30.6.2. Post-init processing"}),"\n",(0,i.jsx)(n.p,{children:"30.6.3. Class variables"}),"\n",(0,i.jsx)(n.p,{children:"30.6.4. Init-only variables"}),"\n",(0,i.jsx)(n.p,{children:"30.6.5. Frozen instances"}),"\n",(0,i.jsx)(n.p,{children:"30.6.6. Inheritance"}),"\n",(0,i.jsx)(n.p,{children:"30.6.7. Default factory functions"}),"\n",(0,i.jsx)(n.p,{children:"30.6.8. Mutable default values"}),"\n",(0,i.jsx)(n.p,{children:"30.6.9. Exceptions"}),"\n",(0,i.jsx)(n.h2,{id:"307-contextlib---utilities-for-with-statement-contexts",children:"30.7. contextlib - Utilities for with-statement contexts"}),"\n",(0,i.jsx)(n.p,{children:"30.7.1. Utilities"}),"\n",(0,i.jsx)(n.p,{children:"30.7.2. Examples and Recipes"}),"\n",(0,i.jsx)(n.p,{children:"30.7.2.1. Supporting a variable number of context managers"}),"\n",(0,i.jsxs)(n.p,{children:["30.7.2.2. Catching exceptions from ",(0,i.jsx)(n.strong,{children:"enter"})," methods"]}),"\n",(0,i.jsxs)(n.p,{children:["30.7.2.3. Cleaning up in an ",(0,i.jsx)(n.strong,{children:"enter"})," implementation"]}),"\n",(0,i.jsx)(n.p,{children:"30.7.2.4. Replacing any use of try-finally and flag variables"}),"\n",(0,i.jsx)(n.p,{children:"30.7.2.5. Using a context manager as a function decorator"}),"\n",(0,i.jsx)(n.p,{children:"30.7.3. Single use, reusable and reentrant context managers"}),"\n",(0,i.jsx)(n.p,{children:"30.7.3.1. Reentrant context managers"}),"\n",(0,i.jsx)(n.p,{children:"30.7.3.2. Reusable context managers"}),"\n",(0,i.jsx)(n.p,{children:"30.8. abc - Abstract Base Classes"}),"\n",(0,i.jsx)(n.h2,{id:"309-atexit---exit-handlers",children:"30.9. atexit - Exit handlers"}),"\n",(0,i.jsx)(n.p,{children:"30.9.1. atexit Example"}),"\n",(0,i.jsx)(n.p,{children:"30.10. traceback - Print or retrieve a stack traceback"}),"\n",(0,i.jsx)(n.p,{children:"30.10.1. TracebackException Objects"}),"\n",(0,i.jsx)(n.p,{children:"30.10.2. StackSummary Objects"}),"\n",(0,i.jsx)(n.p,{children:"30.10.3. FrameSummary Objects"}),"\n",(0,i.jsx)(n.p,{children:"30.10.4. Traceback Examples"}),"\n",(0,i.jsxs)(n.p,{children:["30.11. ",(0,i.jsx)(n.strong,{children:"future"})," - Future statement definitions"]}),"\n",(0,i.jsx)(n.p,{children:"30.12. gc - Garbage Collector interface"}),"\n",(0,i.jsx)(n.p,{children:"30.13. inspect - Inspect live objects"}),"\n",(0,i.jsx)(n.p,{children:"30.13.1. Types and members"}),"\n",(0,i.jsx)(n.p,{children:"30.13.2. Retrieving source code"}),"\n",(0,i.jsx)(n.p,{children:"30.13.3. Introspecting callables with the Signature object"}),"\n",(0,i.jsx)(n.p,{children:"30.13.4. Classes and functions"}),"\n",(0,i.jsx)(n.p,{children:"30.13.5. The interpreter stack"}),"\n",(0,i.jsx)(n.p,{children:"30.13.6. Fetching attributes statically"}),"\n",(0,i.jsx)(n.p,{children:"30.13.7. Current State of Generators and Coroutines"}),"\n",(0,i.jsx)(n.p,{children:"30.13.8. Code Objects Bit Flags"}),"\n",(0,i.jsx)(n.p,{children:"30.13.9. Command Line Interface"}),"\n",(0,i.jsx)(n.p,{children:"30.14. site - Site-specific configuration hook"}),"\n",(0,i.jsx)(n.p,{children:"30.14.1. Readline configuration"}),"\n",(0,i.jsx)(n.p,{children:"30.14.2. Module contents"}),"\n",(0,i.jsx)(n.h2,{id:"sys-module",children:"Sys Module"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import sys\n\nsys.getrecursionlimit() #default 3000\n\nsys.setrecursionlimit(86400)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"garbage-collection",children:"Garbage collection"}),"\n",(0,i.jsxs)(n.p,{children:["Standard CPython's garbage collector has two components, the ",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Reference_counting",children:"reference counting"})," collector and the generationalgarbage collector, known as ",(0,i.jsx)(n.a,{href:"https://docs.python.org/3.6/library/gc.html",children:"gc module"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Thereference countingalgorithm is incredibly efficient and straightforward, but it cannot detect reference cycles. That is why Python has a supplemental algorithm called generational cyclic GC, that deals with reference cycles."}),"\n",(0,i.jsx)(n.p,{children:"The reference counting is fundamental to Python and can't be disabled, whereas the cyclic GC is optional and can be used manually."}),"\n",(0,i.jsx)(n.p,{children:"You can always check the number of current references usingsys.getrefcountfunction."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"gc.disable()\n\ngc.isenabled()\n\ngc.enable()\n\ngc.collect()\n"})}),"\n",(0,i.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://pythonhosted.org/Pympler/muppy.html",children:"https://pythonhosted.org/Pympler/muppy.html"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://rushter.com/blog/python-garbage-collector",children:"https://rushter.com/blog/python-garbage-collector"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>a});var s=t(296540);const i={},r=s.createContext(i);function c(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);