"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[96398],{772397:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var i=n(785893),o=n(511151);const r={},a="Apache Zookeeper",s={id:"technologies/apache/apache-zookeeper",title:"Apache Zookeeper",description:"Apache Zookeeper is a distributed, open-source configuration, synchronization service along with naming registry for distributed applications.",source:"@site/docs/technologies/apache/apache-zookeeper.md",sourceDirName:"technologies/apache",slug:"/technologies/apache/apache-zookeeper",permalink:"/technologies/apache/apache-zookeeper",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/technologies/apache/apache-zookeeper.md",tags:[],version:"current",lastUpdatedAt:1707138374,formattedLastUpdatedAt:"Feb 5, 2024",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Apache Storm",permalink:"/technologies/apache/apache-storm"},next:{title:"Celery",permalink:"/technologies/apache/celery/"}},c={},l=[{value:"Architecture",id:"architecture",level:2},{value:"References",id:"references",level:2}];function h(e){const t={a:"a",h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"apache-zookeeper",children:"Apache Zookeeper"}),"\n",(0,i.jsx)(t.p,{children:"Apache Zookeeper is a distributed, open-source configuration, synchronization service along with naming registry for distributed applications."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Centralized configuration management tool"}),"\n",(0,i.jsx)(t.li,{children:"Used for leader election and distributed locking"}),"\n",(0,i.jsx)(t.li,{children:"Scales well for the reads but not for the writes"}),"\n",(0,i.jsx)(t.li,{children:"Stores data in-memory"}),"\n",(0,i.jsx)(t.li,{children:"Great if storing a limited amount of data with high number of reads is the requirement"}),"\n",(0,i.jsx)(t.li,{children:"ZooKeeper is a centralized service for maintaining configuration information, naming, providing distributed synchronization, and providing group services"}),"\n",(0,i.jsx)(t.li,{children:"Quorum management service and manage topic metadata"}),"\n",(0,i.jsx)(t.li,{children:"Highly reliable distributed coordination kernet, which can be used for distributed locking, configuration management, leadership election, work queues"}),"\n",(0,i.jsx)(t.li,{children:"Zookeeper is a replicated service that holds the metadata of distributed applications"}),"\n",(0,i.jsxs)(t.li,{children:["Key attributed of such data","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Small size"}),"\n",(0,i.jsx)(t.li,{children:"Performance sensitive"}),"\n",(0,i.jsx)(t.li,{children:"Dynamic"}),"\n",(0,i.jsx)(t.li,{children:"Critical"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.li,{children:"In very simple words, it is a central store of key-value using which distributed system can coordinate. Since it needs to be able to handle the load, Zookeeper itself runs on many machines."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"architecture",children:"Architecture"}),"\n",(0,i.jsx)(t.p,{children:"The basic terminologies that you need to know before knowing the architecture are:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Node: The systems installed on the cluster"}),"\n",(0,i.jsx)(t.li,{children:"ZNode: The nodes where the status is updated by other nodes in cluster"}),"\n",(0,i.jsx)(t.li,{children:"Client Applications: The tools that interact with the distributed applications"}),"\n",(0,i.jsx)(t.li,{children:"Server Applications: Allows the client applications to interact using a common interface"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:'The services in the cluster are replicated and stored on a set of servers (called an "ensemble"), each of which maintains an in-memory database containing the entire data tree of state as well as a transaction log and snapshots stored persistently. Multiple client applications can connect to a server, and each client maintains a TCP connection through which it sends requests and heartbeats and receives responses and watch events for monitoring.'}),"\n",(0,i.jsx)(t.h2,{id:"references",children:"References"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Apache_ZooKeeper",children:"https://en.wikipedia.org/wiki/Apache_ZooKeeper"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://www.quora.com/What-is-the-actual-role-of-Zookeeper-in-Kafka-What-benefits-will-I-miss-out-on-if-I-don%E2%80%99t-use-Zookeeper-and-Kafka-together",children:"https://www.quora.com/What-is-the-actual-role-of-Zookeeper-in-Kafka-What-benefits-will-I-miss-out-on-if-I-don%E2%80%99t-use-Zookeeper-and-Kafka-together#"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://zookeeper.apache.org/doc/r3.3.4/zookeeperInternals.html#ch_Introduction",children:"https://zookeeper.apache.org/doc/r3.3.4/zookeeperInternals.html#ch_Introduction"})})]})}function d(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},511151:(e,t,n)=>{n.d(t,{Z:()=>s,a:()=>a});var i=n(667294);const o={},r=i.createContext(o);function a(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);