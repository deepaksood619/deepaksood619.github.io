"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[2004],{712447:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>c,contentTitle:()=>n,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var o=a(785893),r=a(511151);const s={},n="HyperLogLog",i={id:"data-structures/hashtable/hyperloglog",title:"HyperLogLog",description:"HyperLogLog is a streaming algorithm used for estimating the number of distinct elements (the cardinality) of very large data sets. HyperLogLog counter can count one billion distinct items with an accuracy of 2% using only 1.5 KB of memory. It is based on the bit pattern observation that for a stream of randomly distributed numbers, if there is a number x with the maximum of leading 0 bits k, the cardinality of the stream is very likely equal to 2^k.",source:"@site/docs/data-structures/hashtable/hyperloglog.md",sourceDirName:"data-structures/hashtable",slug:"/data-structures/hashtable/hyperloglog",permalink:"/data-structures/hashtable/hyperloglog",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/data-structures/hashtable/hyperloglog.md",tags:[],version:"current",lastUpdatedAt:1701793554,formattedLastUpdatedAt:"Dec 5, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Hashing",permalink:"/data-structures/hashtable/hashing"},next:{title:"Kademlia",permalink:"/data-structures/hashtable/kademlia"}},c={},l=[];function u(t){const e={a:"a",h1:"h1",p:"p",...(0,r.a)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"hyperloglog",children:"HyperLogLog"}),"\n",(0,o.jsx)(e.p,{children:"HyperLogLog is a streaming algorithm used for estimating the number of distinct elements (the cardinality) of very large data sets. HyperLogLog counter can count one billion distinct items with an accuracy of 2% using only 1.5 KB of memory. It is based on the bit pattern observation that for a stream of randomly distributed numbers, if there is a number x with the maximum of leading 0 bits k, the cardinality of the stream is very likely equal to 2^k."}),"\n",(0,o.jsx)(e.p,{children:"HyperLogLog, it's a statistical data structure that derives approximations- in O(1) time complexity and O(log(log(n)) space complexity. The catch is that you get about 1.5% accuracy, configurable of course by taking up more space. As an example, 1.3KB can estimate the cardinality of tens of billions of unique values with an accuracy of a few percent."}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.a,{href:"https://dzone.com/articles/introduction-probabilistic-0",children:"https://dzone.com/articles/introduction-probabilistic-0"})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.a,{href:"https://www.youtube.com/watch?v=lJYufx0bfpw",children:"A problem so hard even Google relies on Random Chance - YouTube"})})]})}function d(t={}){const{wrapper:e}={...(0,r.a)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(u,{...t})}):u(t)}},511151:(t,e,a)=>{a.d(e,{Z:()=>i,a:()=>n});var o=a(667294);const r={},s=o.createContext(r);function n(t){const e=o.useContext(s);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function i(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:n(t.components),o.createElement(s.Provider,{value:e},t.children)}}}]);