"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[2072],{39456:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>u,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var s=t(785893),n=t(511151);const a={},o="Intro",i={id:"algorithms/string-algorithms/intro",title:"Intro",description:"Subarray/substring",source:"@site/docs/algorithms/string-algorithms/intro.md",sourceDirName:"algorithms/string-algorithms",slug:"/algorithms/string-algorithms/intro",permalink:"/algorithms/string-algorithms/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/algorithms/string-algorithms/intro.md",tags:[],version:"current",lastUpdatedAt:1678191863,formattedLastUpdatedAt:"Mar 7, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Brute Force",permalink:"/algorithms/string-algorithms/brute-force"},next:{title:"Knuth-Morris-Pratt",permalink:"/algorithms/string-algorithms/knuth-morris-pratt"}},u={},c=[{value:"Subarray/substring",id:"subarraysubstring",level:2},{value:"Subsequence",id:"subsequence",level:2}];function l(e){const r={h1:"h1",h2:"h2",p:"p",strong:"strong",...(0,n.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h1,{id:"intro",children:"Intro"}),"\n",(0,s.jsx)(r.h2,{id:"subarraysubstring",children:"Subarray/substring"}),"\n",(0,s.jsxs)(r.p,{children:["A subbarray is a ",(0,s.jsx)(r.strong,{children:"contiguous"})," part of array. An array that is inside another array. For example, consider the array [1, 2, 3, 4], There are 10 non-empty sub-arrays. The subbarays are (1), (2), (3), (4), (1,2), (2,3), (3,4), (1,2,3), (2,3,4) and (1,2,3,4). In general, for an array/string of size n, there are",(0,s.jsx)(r.strong,{children:"n*(n+1)/2"}),"non-empty subarrays/subsrings."]}),"\n",(0,s.jsx)(r.h2,{id:"subsequence",children:"Subsequence"}),"\n",(0,s.jsx)(r.p,{children:"A subsequence is a sequence that can be derived from another sequence by zero or more elements, without changing the order of the remaining elements."}),"\n",(0,s.jsxs)(r.p,{children:["For the same example, there are 15 sub-sequences. They are (1), (2), (3), (4), (1,2), (1,3),(1,4), (2,3), (2,4), (3,4), (1,2,3), (1,2,4), (1,3,4), (2,3,4), (1,2,3,4). More generally, we can say that for a sequence of size n, we can have (",(0,s.jsx)(r.strong,{children:"2n-1"}),") non-empty sub-sequences in total."]}),"\n",(0,s.jsxs)(r.p,{children:['*A string example to differentiate:*Consider strings "geeksforgeeks" and "gks". "gks" is a subsequence of "geeksforgeeks" but not a substring. "geeks" is both a subsequence and subarray. Every subarray is a subsequence. More specifically, ',(0,s.jsx)(r.strong,{children:"Subsequence is a generalization of substring."})]})]})}function h(e={}){const{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},511151:(e,r,t)=>{t.d(r,{Z:()=>i,a:()=>o});var s=t(667294);const n={},a=s.createContext(n);function o(e){const r=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),s.createElement(a.Provider,{value:r},e.children)}}}]);