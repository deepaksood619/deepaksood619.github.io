"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[6299],{59169:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>m,default:()=>d,frontMatter:()=>t,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"algorithms/dynamic-programming/basic-gold-mines","title":"Basic Gold Mines","description":"https://www.hackerearth.com/practice/algorithms/dynamic-programming/2-dimensional/practice-problems/algorithm/gold-mines-10","source":"@site/docs/algorithms/dynamic-programming/basic-gold-mines.md","sourceDirName":"algorithms/dynamic-programming","slug":"/algorithms/dynamic-programming/basic-gold-mines","permalink":"/algorithms/dynamic-programming/basic-gold-mines","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/algorithms/dynamic-programming/basic-gold-mines.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1701793554000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Dynamic Programming","permalink":"/algorithms/dynamic-programming/"},"next":{"title":"General","permalink":"/algorithms/dynamic-programming/greedy-algorithms"}}');var i=r(474848),a=r(28453);const t={},m="Basic Gold Mines",s={},c=[];function l(e){const n={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"basic-gold-mines",children:"Basic Gold Mines"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://www.hackerearth.com/practice/algorithms/dynamic-programming/2-dimensional/practice-problems/algorithm/gold-mines-10",children:"https://www.hackerearth.com/practice/algorithms/dynamic-programming/2-dimensional/practice-problems/algorithm/gold-mines-10"})}),"\n",(0,i.jsx)(n.p,{children:"Used Dynamic Programming"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# initialization\nm, n = 2, 2\nmatrix = [[1, 2],[3, 4]]\nmemo = [[0 for x in range(n+1)] for y in range(m+1)]\n\n# creating a bottom up table for memoization\nfor row in range(1, m+1):\n    for col in range(1, n+1):\n        memo[row][col] = memo[row-1][col] + memo[row][col-1] - memo[row-1][col-1] + matrix[row-1][col-1]\n\n# for every query find the solution\nx1, y1, x2, y2 = 1, 2, 2, 2\nprint(memo[x2][y2] - memo[x1-1][y2] - memo[x2][y1-1] + memo[x1-1][y1-1])\n"})})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>m});var o=r(296540);const i={},a=o.createContext(i);function t(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function m(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);