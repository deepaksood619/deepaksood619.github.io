"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[42220],{677443:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>r,contentTitle:()=>l,default:()=>o,frontMatter:()=>d,metadata:()=>t,toc:()=>_});const t=JSON.parse('{"id":"languages/sql/tsql-mssql-queries","title":"TSQL / MSSQL Queries","description":"Find size of tables","source":"@site/docs/languages/sql/tsql-mssql-queries.md","sourceDirName":"languages/sql","slug":"/languages/sql/tsql-mssql-queries","permalink":"/languages/sql/tsql-mssql-queries","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/languages/sql/tsql-mssql-queries.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1749493456000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Stored Procedure","permalink":"/languages/sql/stored-procedure"},"next":{"title":"Types","permalink":"/languages/sql/types"}}');var i=n(474848),a=n(28453);const d={},l="TSQL / MSSQL Queries",r={},_=[{value:"Find size of tables",id:"find-size-of-tables",level:2},{value:"Find Schema of Table",id:"find-schema-of-table",level:2},{value:"Show Full Process List",id:"show-full-process-list",level:2},{value:"Check Database Performance Overview",id:"check-database-performance-overview",level:3},{value:"Identify Long-Running Queries",id:"identify-long-running-queries",level:3},{value:"Find Missing Indexes",id:"find-missing-indexes",level:3},{value:"Detect High-CPU Queries",id:"detect-high-cpu-queries",level:3},{value:"Analyze Index Usage",id:"analyze-index-usage",level:3},{value:"Check Query Plan Caching",id:"check-query-plan-caching",level:3},{value:"Monitor TempDB Usage",id:"monitor-tempdb-usage",level:3},{value:"Query to Capture Top Resource-Intensive Queries",id:"query-to-capture-top-resource-intensive-queries",level:3},{value:"Query to Get Missing Index Recommendations",id:"query-to-get-missing-index-recommendations",level:3},{value:"Links",id:"links",level:2}];function c(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"tsql--mssql-queries",children:"TSQL / MSSQL Queries"})}),"\n",(0,i.jsx)(s.h2,{id:"find-size-of-tables",children:"Find size of tables"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"SELECT\n    s.name AS SchemaName,\n    t.name AS TableName,\n    p.rows AS RowCounts,\n    CASE\n        WHEN MIN(i.index_id) = 0 THEN 'Heap'\n        ELSE 'Clustered Index'\n    END AS TableType,\n    CAST(SUM(a.total_pages) * 8 / 1024.0 AS DECIMAL(18,2)) AS TotalSpaceMB,\n    CAST(SUM(a.used_pages) * 8 / 1024.0 AS DECIMAL(18,2)) AS UsedSpaceMB,\n    CAST(SUM(a.data_pages) * 8 / 1024.0 AS DECIMAL(18,2)) AS DataSpaceMB,\n    CAST((SUM(a.used_pages) - SUM(a.data_pages)) * 8 / 1024.0 AS DECIMAL(18,2)) AS IndexSpaceMB,\n    CAST((SUM(a.total_pages) - SUM(a.used_pages)) * 8 / 1024.0 AS DECIMAL(18,2)) AS UnusedSpaceMB\nFROM\n    sys.tables t\nINNER JOIN\n    sys.indexes i ON t.object_id = i.object_id\nINNER JOIN\n    sys.partitions p ON i.object_id = p.object_id AND i.index_id = p.index_id\nINNER JOIN\n    sys.allocation_units a ON p.partition_id = a.container_id\nINNER JOIN\n    sys.schemas s ON t.schema_id = s.schema_id\nGROUP BY\n    s.name, t.name, p.rows\nORDER BY\n    TotalSpaceMB DESC;\n"})}),"\n",(0,i.jsx)(s.h2,{id:"find-schema-of-table",children:"Find Schema of Table"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"EXEC sp_help 'schema_name.table_name';\n"})}),"\n",(0,i.jsx)(s.h2,{id:"show-full-process-list",children:"Show Full Process List"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"SELECT\n    s.session_id,\n    s.login_name,\n    s.host_name,\n    s.program_name,\n    s.status AS session_status,\n    r.status AS request_status,\n    r.command,\n    r.cpu_time,\n    r.total_elapsed_time,\n    r.reads,\n    r.writes,\n    r.logical_reads,\n    r.blocking_session_id,\n    r.wait_type,\n    r.wait_time,\n    r.last_wait_type,\n    r.text_size,\n    r.row_count,\n    r.sql_handle,\n    t.text AS running_sql_text\nFROM\n    sys.dm_exec_sessions s\nLEFT JOIN\n    sys.dm_exec_requests r ON s.session_id = r.session_id\nOUTER APPLY\n    sys.dm_exec_sql_text(r.sql_handle) t\nWHERE\n    s.is_user_process = 1\nORDER BY\n    r.total_elapsed_time DESC;\n"})}),"\n",(0,i.jsx)(s.h3,{id:"check-database-performance-overview",children:"Check Database Performance Overview"}),"\n",(0,i.jsx)(s.p,{children:"You can query system views to analyze performance metrics like CPU, I/O, and wait statistics."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"-- Top Waits in the system (helps identify bottlenecks)\nSELECT TOP 10\n    wait_type, \n    wait_time_ms / 1000.0 AS wait_time_sec,\n    waiting_tasks_count,\n    wait_time_ms / NULLIF(waiting_tasks_count, 0) AS avg_wait_time_ms\nFROM sys.dm_db_wait_stats\nORDER BY wait_time_ms DESC;\n"})}),"\n",(0,i.jsx)(s.h3,{id:"identify-long-running-queries",children:"Identify Long-Running Queries"}),"\n",(0,i.jsx)(s.p,{children:"Useful to flag slow queries."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"-- Longest running queries\nSELECT TOP 10\n    qs.total_elapsed_time / qs.execution_count AS avg_elapsed_time,\n    qs.execution_count,\n    qs.total_logical_reads / qs.execution_count AS avg_logical_reads,\n    qs.total_worker_time / qs.execution_count AS avg_cpu_time,\n    SUBSTRING(st.text, (qs.statement_start_offset / 2) + 1,\n              ((CASE qs.statement_end_offset\n                    WHEN -1 THEN DATALENGTH(st.text)\n                    ELSE qs.statement_end_offset\n                END - qs.statement_start_offset) / 2) + 1) AS query_text\nFROM sys.dm_exec_query_stats AS qs\nCROSS APPLY sys.dm_exec_sql_text(qs.sql_handle) AS st\nORDER BY avg_elapsed_time DESC;\n"})}),"\n",(0,i.jsx)(s.h3,{id:"find-missing-indexes",children:"Find Missing Indexes"}),"\n",(0,i.jsx)(s.p,{children:"You can't create indexes with read-only access, but you can find missing ones and suggest them."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"-- Identify missing indexes\nSELECT TOP 10\n    migs.avg_total_user_cost * migs.avg_user_impact * (migs.user_seeks + migs.user_scans) AS improvement_measure,\n    mid.statement AS table_name,\n    mid.equality_columns,\n    mid.inequality_columns,\n    mid.included_columns\nFROM sys.dm_db_missing_index_group_stats AS migs\nJOIN sys.dm_db_missing_index_groups AS mig ON migs.group_handle = mig.index_group_handle\nJOIN sys.dm_db_missing_index_details AS mid ON mig.index_handle = mid.index_handle\nORDER BY improvement_measure DESC;\n"})}),"\n",(0,i.jsx)(s.h3,{id:"detect-high-cpu-queries",children:"Detect High-CPU Queries"}),"\n",(0,i.jsx)(s.p,{children:"Find which queries consume the most CPU time."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"-- Top CPU-consuming queries\nSELECT TOP 10\n    qs.total_worker_time / 1000 AS total_cpu_ms,\n    qs.execution_count,\n    qs.total_worker_time / qs.execution_count AS avg_cpu_time,\n    SUBSTRING(st.text, (qs.statement_start_offset / 2) + 1,\n              ((CASE qs.statement_end_offset\n                    WHEN -1 THEN DATALENGTH(st.text)\n                    ELSE qs.statement_end_offset\n                END - qs.statement_start_offset) / 2) + 1) AS query_text\nFROM sys.dm_exec_query_stats AS qs\nCROSS APPLY sys.dm_exec_sql_text(qs.sql_handle) AS st\nORDER BY total_cpu_ms DESC;\n"})}),"\n",(0,i.jsx)(s.h3,{id:"analyze-index-usage",children:"Analyze Index Usage"}),"\n",(0,i.jsx)(s.p,{children:"Detect unused indexes (useful when you have write access later)."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"-- Index usage stats\nSELECT \n    OBJECT_NAME(i.object_id) AS table_name,\n    i.name AS index_name,\n    i.index_id,\n    ps.user_seeks, ps.user_scans, ps.user_lookups, ps.user_updates\nFROM sys.dm_db_index_usage_stats AS ps\nJOIN sys.indexes AS i ON i.object_id = ps.object_id AND i.index_id = ps.index_id\nWHERE OBJECTPROPERTY(i.object_id, 'IsUserTable') = 1\nORDER BY ps.user_updates DESC;\n"})}),"\n",(0,i.jsx)(s.h3,{id:"check-query-plan-caching",children:"Check Query Plan Caching"}),"\n",(0,i.jsx)(s.p,{children:"Useful for identifying parameter sniffing or inefficient plan reuse."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"-- Look at plan cache to identify duplicate/inefficient plans\nSELECT \n    cp.usecounts,\n    cp.cacheobjtype,\n    cp.objtype,\n    st.text AS query_text\nFROM sys.dm_exec_cached_plans AS cp\nCROSS APPLY sys.dm_exec_sql_text(cp.plan_handle) AS st\nORDER BY cp.usecounts DESC;\n"})}),"\n",(0,i.jsx)(s.h3,{id:"monitor-tempdb-usage",children:"Monitor TempDB Usage"}),"\n",(0,i.jsx)(s.p,{children:"Though this is usually at server level, you can inspect usage by queries (if allowed)."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"-- TempDB usage by session\nSELECT \n    session_id, \n    SUM(internal_objects_alloc_page_count + user_objects_alloc_page_count) * 8 AS tempdb_kb_allocated\nFROM sys.dm_db_session_space_usage\nGROUP BY session_id\nORDER BY tempdb_kb_allocated DESC;\n"})}),"\n",(0,i.jsx)(s.h3,{id:"query-to-capture-top-resource-intensive-queries",children:"Query to Capture Top Resource-Intensive Queries"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"SELECT TOP 25\n    qs.execution_count,\n    qs.total_worker_time / 1000 AS total_cpu_ms,\n    qs.total_worker_time / qs.execution_count / 1000 AS avg_cpu_ms,\n    qs.total_elapsed_time / qs.execution_count / 1000 AS avg_duration_ms,\n    qs.total_logical_reads / qs.execution_count AS avg_logical_reads,\n    SUBSTRING(st.text, (qs.statement_start_offset / 2) + 1,\n              ((CASE qs.statement_end_offset\n                  WHEN -1 THEN DATALENGTH(st.text)\n                  ELSE qs.statement_end_offset\n              END - qs.statement_start_offset) / 2) + 1) AS query_text,\n    qp.query_plan\nFROM sys.dm_exec_query_stats AS qs\nCROSS APPLY sys.dm_exec_sql_text(qs.sql_handle) AS st\nCROSS APPLY sys.dm_exec_query_plan(qs.plan_handle) AS qp\nORDER BY avg_cpu_ms DESC;\n"})}),"\n",(0,i.jsx)(s.h3,{id:"query-to-get-missing-index-recommendations",children:"Query to Get Missing Index Recommendations"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"SELECT TOP 20\n    CONVERT(decimal(18,2), migs.avg_total_user_cost * migs.avg_user_impact * (migs.user_seeks + migs.user_scans)) AS improvement_measure,\n    OBJECT_NAME(mid.object_id, mid.database_id) AS table_name,\n    'CREATE INDEX [IX_' + OBJECT_NAME(mid.object_id, mid.database_id) + '_' + \n        REPLACE(REPLACE(REPLACE(ISNULL(mid.equality_columns,''), '[',''), ']',''), ', ', '_') + \n        '] ON ' + OBJECT_NAME(mid.object_id, mid.database_id) + \n        ' (' + ISNULL(mid.equality_columns,'') +\n        CASE \n            WHEN mid.inequality_columns IS NOT NULL THEN ',' + mid.inequality_columns\n            ELSE ''\n        END + ')' +\n        ISNULL(' INCLUDE (' + mid.included_columns + ')', '') AS create_index_statement\nFROM sys.dm_db_missing_index_group_stats AS migs\nJOIN sys.dm_db_missing_index_groups AS mig ON migs.group_handle = mig.index_group_handle\nJOIN sys.dm_db_missing_index_details AS mid ON mig.index_handle = mid.index_handle\nORDER BY improvement_measure DESC;\n"})}),"\n",(0,i.jsx)(s.h2,{id:"links",children:"Links"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://chatgpt.com/share/6823327c-dbc8-8005-b57d-a582c82a4c92",children:"ChatGPT - Azure SQL Optimization Guide"})}),"\n"]})]})}function o(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>d,x:()=>l});var t=n(296540);const i={},a=t.createContext(i);function d(e){const s=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),t.createElement(a.Provider,{value:s},e.children)}}}]);