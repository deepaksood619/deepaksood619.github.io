"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[60477],{991012:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>l,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var o=t(785893),a=t(511151);const r={},s="Sample Code",c={id:"decentralized-applications/development/sample-code",title:"Sample Code",description:"Use Python | INFURA",source:"@site/docs/decentralized-applications/development/sample-code.md",sourceDirName:"decentralized-applications/development",slug:"/decentralized-applications/development/sample-code",permalink:"/decentralized-applications/development/sample-code",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/decentralized-applications/development/sample-code.md",tags:[],version:"current",lastUpdatedAt:1693310320,formattedLastUpdatedAt:"Aug 29, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Infura",permalink:"/decentralized-applications/development/infura"},next:{title:"Ethereum",permalink:"/decentralized-applications/ethereum/"}},i={},d=[];function p(e){const n={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"sample-code",children:"Sample Code"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"import os\nfrom dotenv import load_dotenv\nfrom web3 import Web3, exceptions\n\nload_dotenv()\n\ninfura_url = 'https://sepolia.infura.io/v3/<API-KEY>'\nprivate_key = os.getenv('PRIVATE_KEY')\nfrom_account = '<PUBLIC-KEY>'\nto_account = '<RECIPIENT-PUBLIC-KEY>'\n\nweb3 = Web3(Web3.HTTPProvider(infura_url))\n\ntry:\n from_account = web3.to_checksum_address(from_account)\nexcept exceptions.InvalidAddress:\n print(f\"Invalid 'from_account' address: {from_account}\")\n\ntry:\n to_account = web3.to_checksum_address(to_account)\nexcept exceptions.InvalidAddress:\n print(f\"Invalid 'to_account' address: {to_account}\")\n\nnonce = web3.eth.get_transaction_count(from_account)\n\ntx = {\n 'type': '0x2',\n 'nonce': nonce,\n 'from': from_account,\n 'to': to_account,\n 'value': web3.to_wei(0.01, 'ether'),\n 'maxFeePerGas': web3.to_wei('250', 'gwei'),\n 'maxPriorityFeePerGas': web3.to_wei('3', 'gwei'),\n 'chainId': 11155111\n}\n\ngas = web3.eth.estimate_gas(tx)\ntx['gas'] = gas\nsigned_tx = web3.eth.account.sign_transaction(tx, private_key)\ntx_hash = web3.eth.send_raw_transaction(signed_tx.rawTransaction)\n\nprint(\"Transaction hash: \" + str(web3.to_hex(tx_hash)))\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://docs.infura.io/tutorials/ethereum/send-a-transaction/send-a-transaction-1",children:"Use Python | INFURA"})})]})}function l(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},511151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>s});var o=t(667294);const a={},r=o.createContext(a);function s(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);