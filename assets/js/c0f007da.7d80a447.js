"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[24290],{752943:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"networking/networking-concepts/sockets","title":"Sockets","description":"Socket","source":"@site/docs/networking/networking-concepts/sockets.md","sourceDirName":"networking/networking-concepts","slug":"/networking/networking-concepts/sockets","permalink":"/networking/networking-concepts/sockets","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/networking/networking-concepts/sockets.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1708929300000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Routing","permalink":"/networking/networking-concepts/routing"},"next":{"title":"TCP/IP","permalink":"/networking/networking-concepts/tcp-ip"}}');var s=n(474848),c=n(28453);const r={},i="Sockets",a={},d=[{value:"Socket",id:"socket",level:2},{value:"UDP socket server in python",id:"udp-socket-server-in-python",level:2},{value:"UDP socket client in python",id:"udp-socket-client-in-python",level:2},{value:"TCP socket",id:"tcp-socket",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"sockets",children:"Sockets"})}),"\n",(0,s.jsx)(t.h2,{id:"socket",children:"Socket"}),"\n",(0,s.jsx)(t.p,{children:"The first function is socket(), which creates an object called a socket. A socket is a number that a program can use to communicate with another program. In UNIX terms, it is no different from a file descriptor, which is a number that is used for reading or writing from an open file. Instead, with a socket, a program is reading (receiving) or writing (sending) from or to the network."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"nc -l 8000 # for tcp listen\nnc -l 8000 -u\n"})}),"\n",(0,s.jsx)(t.p,{children:"This just tells nc to create a UDP receiver (the argument -u) that is expecting data on port 8000. Now, let's use sock object to send data to nc."}),"\n",(0,s.jsx)(t.h2,{id:"udp-socket-server-in-python",children:"UDP socket server in python"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'from socket import *\n\nsock_receiver = socket(AF_INET, SOCK_DGRAM)\n\nsock_receiver.bind(("127.0.0.1", 8000))\n\nsock_receiver.recv(4096)\n'})}),"\n",(0,s.jsx)(t.h2,{id:"udp-socket-client-in-python",children:"UDP socket client in python"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'from socket import *\n\nsock_object=socket(AF_INET, SOCK_DGRAM)\n\nsock_object.sendto(b"hello", ("127.0.0.1", 8000))\n'})}),"\n",(0,s.jsx)(t.h2,{id:"tcp-socket",children:"TCP socket"}),"\n",(0,s.jsx)(t.p,{children:"tcp_socket = socket(AF_INET, SOCK_STREAM)"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://cs.nyu.edu/courses/fall17/CSCI-UA.0480-009",children:"https://cs.nyu.edu/courses/fall17/CSCI-UA.0480-009"})})]})}function p(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>i});var o=n(296540);const s={},c=o.createContext(s);function r(e){const t=o.useContext(c);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(c.Provider,{value:t},e.children)}}}]);