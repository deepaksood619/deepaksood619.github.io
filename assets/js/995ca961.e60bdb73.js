"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[91389],{388427:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var i=t(785893),r=t(511151);const s={},o="Dict Evolution",c={id:"python/python-intro/data-structure/dict-evolution",title:"Dict Evolution",description:"Python2.7 - Scambled (dict_size = 280)",source:"@site/docs/python/python-intro/data-structure/dict-evolution.md",sourceDirName:"python/python-intro/data-structure",slug:"/python/python-intro/data-structure/dict-evolution",permalink:"/python/python-intro/data-structure/dict-evolution",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/python/python-intro/data-structure/dict-evolution.md",tags:[],version:"current",lastUpdatedAt:1687721346,formattedLastUpdatedAt:"Jun 25, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Data Structure",permalink:"/python/python-intro/data-structure/"},next:{title:"Dictionary Architecture",permalink:"/python/python-intro/data-structure/dictionary-architecture"}},a={},l=[{value:"References",id:"references",level:2}];function d(n){const e={a:"a",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",ul:"ul",...(0,r.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"dict-evolution",children:"Dict Evolution"}),"\n",(0,i.jsx)(e.p,{children:"Python2.7 - Scambled (dict_size = 280)"}),"\n",(0,i.jsx)(e.p,{children:"Python3.5 - Randomized (Key sharing dictionaries, dict_size = 196)"}),"\n",(0,i.jsx)(e.p,{children:"Python3.6 - Ordered (Compact dictionaries, dict_size = 112)"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Databases"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Association Lists"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Separate Chaining"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"separate_chaining(2)"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"separate_chaining(4)"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"separate_chaining(8) (remove collisions, but wasted space due to over allocations for lists to grow)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Open Addressing - Can have catatrophic collision wherever every item hash to same value"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Multiple Hashing"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Key-Sharing Dict"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Compact Dict"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Use a list to store the lookups"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"This list can be read in very less cache-line"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Use a dirty bit for lookup in the dictionary"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"references",children:"References"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://www.youtube.com/watch?v=p33CVV29OG8",children:"Modern Dictionaries by Raymond Hettinger - YouTube"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://www.youtube.com/watch?v=npw4s1QTmPg",children:"Raymond Hettinger Modern Python Dictionaries A confluence of a dozen great ideas PyCon 2017 - YouTube"})})]})}function h(n={}){const{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},511151:(n,e,t)=>{t.d(e,{Z:()=>c,a:()=>o});var i=t(667294);const r={},s=i.createContext(r);function o(n){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:o(n.components),i.createElement(s.Provider,{value:e},n.children)}}}]);