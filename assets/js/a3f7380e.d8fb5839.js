"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[77536],{431855:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>i,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var o=n(785893),t=n(511151);const a={},r="Others",l={id:"databases/nosql-databases/mongodb/others",title:"Others",description:"Mongodb Oplog",source:"@site/docs/databases/nosql-databases/mongodb/others.md",sourceDirName:"databases/nosql-databases/mongodb",slug:"/databases/nosql-databases/mongodb/others",permalink:"/databases/nosql-databases/mongodb/others",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/databases/nosql-databases/mongodb/others.md",tags:[],version:"current",lastUpdatedAt:1707849582,formattedLastUpdatedAt:"Feb 13, 2024",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"MongoDB",permalink:"/databases/nosql-databases/mongodb/intro"},next:{title:"Overview",permalink:"/databases/nosql-databases/mongodb/overview"}},i={},c=[{value:"Mongodb Oplog",id:"mongodb-oplog",level:2},{value:"Mongo Change Streams",id:"mongo-change-streams",level:2},{value:"Tailable Cursors",id:"tailable-cursors",level:2},{value:"UI / Tools",id:"ui--tools",level:2},{value:"Compass",id:"compass",level:3},{value:"mongo-express",id:"mongo-express",level:3},{value:"Features",id:"features",level:4},{value:"MongoSync",id:"mongosync",level:3},{value:"Others",id:"others-1",level:2}];function d(e){const s={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.h1,{id:"others",children:"Others"}),"\n",(0,o.jsx)(s.h2,{id:"mongodb-oplog",children:"Mongodb Oplog"}),"\n",(0,o.jsx)(s.p,{children:"The oplog (operation log) is a capped collection that records all write operations in a MongoDB replica set. It allows secondary nodes to replicate the changes from the primary node, ensuring consistency among the nodes."}),"\n",(0,o.jsx)(s.h2,{id:"mongo-change-streams",children:"Mongo Change Streams"}),"\n",(0,o.jsxs)(s.p,{children:["Change streams allow applications to access real-time data changes without the complexity and risk of tailing the\xa0",(0,o.jsx)(s.a,{href:"https://www.mongodb.com/docs/manual/reference/glossary/#std-term-oplog",children:"oplog"}),". Applications can use change streams to subscribe to all data changes on a single collection, a database, or an entire deployment, and immediately react to them. Because change streams use the aggregation framework, applications can also filter for specific changes or transform the notifications at will."]}),"\n",(0,o.jsx)(s.p,{children:"Starting in MongoDB 5.1,\xa0change streams\xa0are optimized, providing more efficient resource utilization and faster execution of some aggregation pipeline stages."}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.a,{href:"https://www.mongodb.com/docs/manual/changeStreams/",children:"Change Streams - MongoDB Manual"})}),"\n",(0,o.jsx)(s.h2,{id:"tailable-cursors",children:"Tailable Cursors"}),"\n",(0,o.jsxs)(s.p,{children:["By default, MongoDB will automatically close a cursor when the client has exhausted all results in the cursor. However, for\xa0",(0,o.jsx)(s.a,{href:"https://www.mongodb.com/docs/manual/core/capped-collections/",children:"capped collections"}),"\xa0you may use a\xa0",(0,o.jsx)(s.em,{children:"Tailable Cursor"}),"\xa0that remains open after the client exhausts the results in the initial cursor. Tailable cursors are conceptually equivalent to the\xa0",(0,o.jsx)(s.code,{children:"tail"}),"\xa0Unix command with the\xa0",(0,o.jsx)(s.code,{children:"-f"}),'\xa0option (i.e. with "follow" mode). After clients insert new additional documents into a capped collection, the tailable cursor will continue to retrieve documents.']}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.a,{href:"https://www.mongodb.com/docs/manual/core/tailable-cursors/",children:"Tailable Cursors - MongoDB Manual"})}),"\n",(0,o.jsx)(s.h2,{id:"ui--tools",children:"UI / Tools"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"https://www.mongodb.com/products/self-managed/enterprise-advanced/ops-manager",children:"MongoDB Ops Manager | MongoDB"})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"https://studio3t.com",children:"https://studio3t.com"})}),"\n",(0,o.jsx)(s.li,{children:"Metabase"}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"https://nosqlbooster.com/",children:(0,o.jsx)(s.strong,{children:"NoSQLBooster - The Smartest GUI Tool and IDE for MongoDB"})})}),"\n"]}),"\n",(0,o.jsx)(s.h3,{id:"compass",children:"Compass"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-json",children:'{username: \'abc\'}\n\n{ "start_date": {$gt: new Date(\'2017-05-01\')} }\n\n{ "created_at": {$gt: new ISODate(\'2024-01-06T17:00:00.000Z\')}, "template": ObjectId(\'654e026678a908f1ce241df1\') }\n\n{ author : { $eq : "Joe Bloggs" } }\n\n{ dateCreated: { $gt: Date(\'2000-06-22\') } }\n\n{ scores: { $elemMatch: { $gt: 80, $lt: 90 } } }\n\n-- search - like abc\n{"email": /abc/}\n\n{ "title": { "$regex": "(?i)The Village" } }\n\n{"user": ObjectId("64591b347266058256f16f43")}\n\n{"user": ObjectId("64591b347266058256f16f43"), "type": "DR"}\n'})}),"\n",(0,o.jsxs)(s.p,{children:["[Query Your Data - MongoDB Compass](",(0,o.jsx)(s.a,{href:"https://www.mongodb.com/docs/compass/current/query/filter/",children:"https://www.mongodb.com/docs/compass/current/query/filter/"})]}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.a,{href:"https://www.mongodb.com/products/compass",children:"MongoDB Compass | MongoDB"})}),"\n",(0,o.jsx)(s.h3,{id:"mongo-express",children:"mongo-express"}),"\n",(0,o.jsx)(s.p,{children:"Web-based MongoDB admin interface written with Node.js, Express and Bootstrap3"}),"\n",(0,o.jsx)(s.h4,{id:"features",children:"Features"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:"Connect to multiple databases"}),"\n",(0,o.jsx)(s.li,{children:"View/add/delete databases"}),"\n",(0,o.jsx)(s.li,{children:"View/add/rename/delete collections"}),"\n",(0,o.jsx)(s.li,{children:"View/add/update/delete documents"}),"\n",(0,o.jsx)(s.li,{children:"Preview audio/video/image assets inline in collection view"}),"\n",(0,o.jsx)(s.li,{children:"Nested and/or large objects are collapsible for easy overview"}),"\n",(0,o.jsx)(s.li,{children:"Async on-demand loading of big document properties (>100KB default) to keep collection view fast"}),"\n",(0,o.jsx)(s.li,{children:"GridFS support - add/get/delete incredibly large files"}),"\n",(0,o.jsx)(s.li,{children:"Use BSON data types in documents"}),"\n",(0,o.jsx)(s.li,{children:"Mobile / Responsive - Bootstrap 3 works passably on small screens when you're in a bind"}),"\n",(0,o.jsx)(s.li,{children:"Connect and authenticate to individual databases"}),"\n",(0,o.jsx)(s.li,{children:"Authenticate as admin to view all databases"}),"\n",(0,o.jsx)(s.li,{children:"Database blacklist/whitelist"}),"\n",(0,o.jsx)(s.li,{children:"Custom CA and CA validation disabling"}),"\n",(0,o.jsx)(s.li,{children:"Supports replica sets"}),"\n"]}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.a,{href:"https://github.com/mongo-express/mongo-express",children:"https://github.com/mongo-express/mongo-express"})}),"\n",(0,o.jsx)(s.h3,{id:"mongosync",children:"MongoSync"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"./mongosync --cluster0 mongodb://username:password@1.1.1.1:27018/ --cluster1 mongodb+srv://username:password@cluster0.abc.mongodb.net/\n"})}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.a,{href:"https://www.mongodb.com/docs/cluster-to-cluster-sync/current/reference/mongosync/",children:"mongosync - MongoDB Cluster-to-Cluster Sync"})}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.a,{href:"https://www.mongodb.com/docs/cluster-to-cluster-sync/current/faq/",children:"Frequently Asked Questions - MongoDB Cluster-to-Cluster Sync"})}),"\n",(0,o.jsx)(s.h2,{id:"others-1",children:"Others"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.a,{href:"https://www.mongodb.com/docs/atlas/reference/mongomirror/",children:"mongomirror - MongoDB Atlas"})," - ",(0,o.jsx)(s.code,{children:"mongomirror"}),"\xa0is a tool for manually migrating data from an existing MongoDB replica set to a MongoDB\xa0Atlas\xa0replica set."]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,t.a)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},511151:(e,s,n)=>{n.d(s,{Z:()=>l,a:()=>r});var o=n(667294);const t={},a=o.createContext(t);function r(e){const s=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),o.createElement(a.Provider,{value:s},e.children)}}}]);