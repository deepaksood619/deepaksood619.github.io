"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[79370],{415199:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"devops/devops-intro/chaos-engineering","title":"Chaos Engineering","description":"Chaos Engineering is the discipline of experimenting on a system in order to build confidence in the system\'s capability to withstand turbulent conditions in production.","source":"@site/docs/devops/devops-intro/chaos-engineering.md","sourceDirName":"devops/devops-intro","slug":"/devops/devops-intro/chaos-engineering","permalink":"/devops/devops-intro/chaos-engineering","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/devops/devops-intro/chaos-engineering.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1747132946000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Application Management","permalink":"/devops/devops-intro/application-management"},"next":{"title":"Concepts","permalink":"/devops/devops-intro/concepts"}}');var s=i(474848),o=i(28453);const r={},a="Chaos Engineering",l={},c=[{value:"Chaos in practice",id:"chaos-in-practice",level:2},{value:"Chaos Experiments",id:"chaos-experiments",level:2},{value:"Fault Injection/Resiliency Tools",id:"fault-injectionresiliency-tools",level:2},{value:"Chaos Monkey",id:"chaos-monkey",level:3},{value:"References",id:"references",level:2}];function h(e){const n={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"chaos-engineering",children:"Chaos Engineering"})}),"\n",(0,s.jsx)(n.p,{children:"Chaos Engineering is the discipline of experimenting on a system in order to build confidence in the system's capability to withstand turbulent conditions in production."}),"\n",(0,s.jsx)(n.h2,{id:"chaos-in-practice",children:"Chaos in practice"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Start by defining 'steady state' as some measurable output of a system that indicates normal behavior."}),"\n",(0,s.jsx)(n.li,{children:"Hypothesize that this steady state will continue in both the control group and the experimental group."}),"\n",(0,s.jsx)(n.li,{children:"Introduce variables that reflect real world events like servers that crash, hard drives that malfunction, network connections that are severed, etc."}),"\n",(0,s.jsx)(n.li,{children:"Try to disprove the hypothesis by looking for a difference in steady state between the control group and the experimental group."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"chaos-experiments",children:"Chaos Experiments"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Resource Exhaustion - CPU, Memory, I/O"}),"\n",(0,s.jsx)(n.li,{children:"The network is not reliable"}),"\n",(0,s.jsx)(n.li,{children:"Datastore saturation"}),"\n",(0,s.jsx)(n.li,{children:"DNS Unavailability"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"fault-injectionresiliency-tools",children:"Fault Injection/Resiliency Tools"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Chaos Monkey"}),"\n",(0,s.jsx)(n.li,{children:"Istio"}),"\n",(0,s.jsxs)(n.li,{children:["gremlin - ",(0,s.jsx)(n.a,{href:"https://www.gremlin.com/",children:"Reliability Testing & Chaos Engineering | Gremlin"})]}),"\n",(0,s.jsxs)(n.li,{children:["Powerfulseal - ",(0,s.jsx)(n.a,{href:"https://github.com/powerfulseal/powerfulseal",children:"https://github.com/powerfulseal/powerfulseal"})]}),"\n",(0,s.jsxs)(n.li,{children:["Litmus Chaos - ",(0,s.jsx)(n.a,{href:"https://litmuschaos.io",children:"https://litmuschaos.io"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"chaos-monkey",children:"Chaos Monkey"}),"\n",(0,s.jsx)(n.p,{children:"Chaos Monkey is a resiliency tool that helps applications tolerate random instance failures."}),"\n",(0,s.jsx)(n.p,{children:"Chaos Monkey randomly terminates virtual machine instances and containers that run inside of your production environment. Exposing engineers to failures more frequently incentivizes them to build resilient services."}),"\n",(0,s.jsxs)(n.p,{children:["Chaos Monkey is an example of a tool that follows the ",(0,s.jsx)(n.a,{href:"http://principlesofchaos.org/",children:"Principles of Chaos Engineering"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/Netflix/chaosmonkey",children:"https://github.com/Netflix/chaosmonkey"})}),"\n",(0,s.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"http://principlesofchaos.org",children:"http://principlesofchaos.org"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://www.gremlin.com/community/tutorials/chaos-engineering-the-history-principles-and-practice",children:"https://www.gremlin.com/community/tutorials/chaos-engineering-the-history-principles-and-practice"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/linki/chaoskube",children:"https://github.com/linki/chaoskube"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://blog.flant.com/chaos-engineering-in-kubernetes-open-source-tools",children:"https://blog.flant.com/chaos-engineering-in-kubernetes-open-source-tools"})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var t=i(296540);const s={},o=t.createContext(s);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);