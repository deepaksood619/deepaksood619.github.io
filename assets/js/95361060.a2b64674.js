"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[86095],{303490:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"devops/docker/docker-compose-example","title":"docker-compose example","description":"","source":"@site/docs/devops/docker/docker-compose-example.md","sourceDirName":"devops/docker","slug":"/devops/docker/docker-compose-example","permalink":"/devops/docker/docker-compose-example","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/devops/docker/docker-compose-example.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1734020743000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Docker Commands","permalink":"/devops/docker/docker-commands"},"next":{"title":"docker-compose","permalink":"/devops/docker/docker-compose"}}');var r=t(474848),s=t(28453);const i={},a="docker-compose example",d={},c=[];function l(e){const n={code:"code",h1:"h1",header:"header",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"docker-compose-example",children:"docker-compose example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'version: "3.7"\n# the version attribute is obsolete and no longer required\nservices:\n zenalytix-build:\n  build:\n   context: .\n   dockerfile: Dockerfile\n   args:\n    GIT_USERNAME: ${GIT_USERNAME}\n    GIT_PASSWORD: ${GIT_PASSWORD}\n  image: gcr.io/abc-data-archiver/zenalytix:fc3c0ae06074\n\n zenalytix-dev:\n  stdin_open: true\n  tty: true\n  restart: always / "no" / on-failure / unless-stopped\n  image: gcr.io/abc-data-archiver/zenalytix:fc3c0ae06074\n  deploy:\n    replicas: 5\n    resources:\n    limits:\n   cpus: "0.1"\n   memory: 50M\n    restart_policy:\n    condition: on-failure\n  container_name: zenalytix-dev\n  labels:\n   app: decision_engine\n  env_file:\n    - .env\n    - Docker/env/${ZENALYTIX_ENV}.env\n  environment:\n    - DEBUG=True\n    - DJANGO_SETTINGS_MODULE=zenalytix.settings\n    - POSTGRES_PASSWORD=airflow\n    - POSTGRES_USER=postgres\n    - POSTGRES_DB=airflow\n  working_dir: /root/src/zenalytix\n  cap_add:\n    - ALL\n  cap_drop:\n    - SYS_ADMIN\n    - NET_ADMIN\n  args:\n    - buildno=1\n    - coordinator\n  entrypoint:\n    - /bin/bash\n    - -c\n    - |\n         # mkdir -p /dev/net && mknod /dev/net/tun c 10 200 && chmod 600 /dev/net/tun && openvpn --config Docker/OpenVPN/energy.ovpn &\n         python manage.py runserver 0.0.0.0:9104\n   sleep infinity\n  ports:\n    - 9104:9104\n  networks:\n    abc-docker:\n   ipv4_address: ${ZENALYTIX_IP}\n  volumes:\n    - post:/root/src/zenalytix\n  healthcheck:\n    test: "curl -f -s -o /dev/null -I http://${ZENALYTIX_IP}:9104/"\n    interval: 10s\n    timeout: 10s\n    retries: 5\n\n  logging:\n        driver: awslogs\n        options:\n          awslogs-group: devec2\n          awslogs-region: us-west-2\n\n  depends_on:\n    - "postgres-zenalytix"\n    - "redis-zenalytix"\n\n  redis:\n    stdin_open: true\n    tty: true\n    restart: "no"\n    image: bitnami/redis:6.0\n    container_name: redis\n    env_file:\n      - dev.env\n    ports:\n      - 6379:6379\n    healthcheck:\n      test: "redis-cli -h localhost -p 6379 ping"\n      interval: 10s\n      timeout: 10s\n      retries: 5\n    volumes:\n      - ./data/redis:/bitnami/redis/data\n    networks:\n      - localhost_net\n\n  redisinsight:\n    stdin_open: true\n    tty: true\n    restart: "no"\n    image: redislabs/redisinsight:latest\n    container_name: redisinsight\n    ports:\n      - 8001:8001\n      # - 6379:6379\n    volumes:\n      - ./data/redis:/bitnami/redis/data\n    networks:\n      - localhost_net\n\nnetworks:\n  abc-docker:\n    external:\n      name: abc-docker\n\n  airflow-docker:\n\nvolumes:\n  postgres-zenalytix-volume:\n    external: true\n\nmysql:\n   stdin_open: true\n   tty: true\n   restart: "no"\n   image: mysql:8\n    image: mysql:8.0.19\n   container_name: mysql\n   command: --default-authentication-plugin=mysql_native_password\n   environment:\n     - MYSQL_HOST=localhost\n     - MYSQL_PORT=3306\n     - MYSQL_ROOT_PASSWORD=mysql_root_password\n     - MYSQL_DATABASE=creditengine\n     - MYSQL_USER=creditengine\n     - MYSQL_PASSWORD=creditengine\n   ports:\n     - 3306:3306\n   volumes:\n    - ./data:/var/lib/mysql\n\nmysql:\n    stdin_open: true\n    tty: true\n    restart: "no"\n    image: mysql:5.7.29\n    container_name: mysql\n    environment:\n     - MYSQL_HOST=localhost\n     - MYSQL_PORT=3306\n     - MYSQL_ROOT_PASSWORD=mysql_root_password\n     - MYSQL_DATABASE=creditengine\n     - MYSQL_USER=creditengine\n     - MYSQL_PASSWORD=creditengine\n    ports:\n      - 3306:3306\n    volumes:\n      - ./data:/var/lib/mysql\n'})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var o=t(296540);const r={},s=o.createContext(r);function i(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);