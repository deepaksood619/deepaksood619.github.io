"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[3345],{488430:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>d});const l=JSON.parse('{"id":"devops/terminal-bash/tools/editors","title":"Editors","description":"Commenting multiple using the terminal","source":"@site/docs/devops/terminal-bash/tools/editors.md","sourceDirName":"devops/terminal-bash/tools","slug":"/devops/terminal-bash/tools/editors","permalink":"/devops/terminal-bash/tools/editors","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/devops/terminal-bash/tools/editors.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1701846168000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Curl","permalink":"/devops/terminal-bash/tools/curl"},"next":{"title":"Mosh","permalink":"/devops/terminal-bash/tools/mosh"}}');var r=i(474848),t=i(28453);const s={},o="Editors",c={},d=[{value:"Commenting multiple using the terminal",id:"commenting-multiple-using-the-terminal",level:2},{value:"Uncommenting Multiple Lines",id:"uncommenting-multiple-lines",level:2},{value:"VIM",id:"vim",level:2},{value:"Global",id:"global",level:2},{value:"Cursor movement",id:"cursor-movement",level:2},{value:"Insert mode - inserting/appending text",id:"insert-mode---insertingappending-text",level:2},{value:"Editing",id:"editing",level:2},{value:"Marking text (visual mode)",id:"marking-text-visual-mode",level:2},{value:"Visual commands",id:"visual-commands",level:2},{value:"Registers",id:"registers",level:2},{value:"Marks",id:"marks",level:2},{value:"Macros",id:"macros",level:2},{value:"Cut and paste",id:"cut-and-paste",level:2},{value:"Exiting",id:"exiting",level:2},{value:"Search and replace",id:"search-and-replace",level:2},{value:"Search in multiple files",id:"search-in-multiple-files",level:2},{value:"Working with multiple files",id:"working-with-multiple-files",level:2},{value:"Nano",id:"nano",level:2}];function a(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"editors",children:"Editors"})}),"\n",(0,r.jsx)(n.h2,{id:"commenting-multiple-using-the-terminal",children:"Commenting multiple using the terminal"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"First, pressESC"}),"\n",(0,r.jsx)(n.li,{children:"Go to the line from which you want to start commenting. Then, pressctrl + v, this will enable the visual block mode."}),"\n",(0,r.jsx)(n.li,{children:"use thedown arrowto select multiple lines that you want to comment."}),"\n",(0,r.jsx)(n.li,{children:"Now, pressSHIFT + Ito enable insert mode."}),"\n",(0,r.jsx)(n.li,{children:"Press#and it will add a comment to the first line. Then pressECSand wait for a second,#will be added to all the lines."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"uncommenting-multiple-lines",children:"Uncommenting Multiple Lines"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"PressCTRL + Vto enable visual block mode."}),"\n",(0,r.jsx)(n.li,{children:"Move down and select the lines till you want to uncomment."}),"\n",(0,r.jsx)(n.li,{children:"pressxand it will uncomment all the selected lines at once."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"vim",children:"VIM"}),"\n",(0,r.jsx)(n.h2,{id:"global",children:"Global"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[":help"," keyword- open help for keyword"]}),"\n",(0,r.jsxs)(n.li,{children:[":saveas"," file- save file as"]}),"\n",(0,r.jsx)(n.li,{children:":close- close current pane"}),"\n",(0,r.jsx)(n.li,{children:"K- open man page for word under the cursor"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"cursor-movement",children:"Cursor movement"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"h- move cursor left"}),"\n",(0,r.jsx)(n.li,{children:"j- move cursor down"}),"\n",(0,r.jsx)(n.li,{children:"k- move cursor up"}),"\n",(0,r.jsx)(n.li,{children:"l- move cursor right"}),"\n",(0,r.jsx)(n.li,{children:"H- move to top of screen"}),"\n",(0,r.jsx)(n.li,{children:"M- move to middle of screen"}),"\n",(0,r.jsx)(n.li,{children:"L- move to bottom of screen"}),"\n",(0,r.jsx)(n.li,{children:"w- jump forwards to the start of a word"}),"\n",(0,r.jsx)(n.li,{children:"W- jump forwards to the start of a word (words can contain punctuation)"}),"\n",(0,r.jsx)(n.li,{children:"e- jump forwards to the end of a word"}),"\n",(0,r.jsx)(n.li,{children:"E- jump forwards to the end of a word (words can contain punctuation)"}),"\n",(0,r.jsx)(n.li,{children:"b- jump backwards to the start of a word"}),"\n",(0,r.jsx)(n.li,{children:"B- jump backwards to the start of a word (words can contain punctuation)"}),"\n",(0,r.jsxs)(n.li,{children:["%- move to matching character (default supported pairs: ",(0,r.jsx)(n.code,{children:"'()', '{}', '[]'"})," - use",":h"," matchpairsin vim for more info)"]}),"\n",(0,r.jsx)(n.li,{children:"0- jump to the start of the line"}),"\n",(0,r.jsx)(n.li,{children:"^- jump to the first non-blank character of the line"}),"\n",(0,r.jsx)(n.li,{children:"$- jump to the end of the line"}),"\n",(0,r.jsx)(n.li,{children:"g_- jump to the last non-blank character of the line"}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"gg- go to the first line of the document"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"G- go to the last line of the document"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"5G- go to line 5"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"dgg - delete everything from your current line to the top of the file"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"dG - delete all lines at or below the current one"})}),"\n",(0,r.jsx)(n.li,{children:"fx- jump to next occurrence of character x"}),"\n",(0,r.jsx)(n.li,{children:"tx- jump to before next occurrence of character x"}),"\n",(0,r.jsx)(n.li,{children:"Fx- jump to previous occurence of character x"}),"\n",(0,r.jsx)(n.li,{children:"Tx- jump to after previous occurence of character x"}),"\n",(0,r.jsx)(n.li,{children:";- repeat previous f, t, F or T movement"}),"\n",(0,r.jsx)(n.li,{children:",- repeat previous f, t, F or T movement, backwards"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"}"})," - jump to next paragraph (or function/block, when editing code)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"{"})," - jump to previous paragraph (or function/block, when editing code)"]}),"\n",(0,r.jsx)(n.li,{children:"zz- center cursor on screen"}),"\n",(0,r.jsx)(n.li,{children:"Ctrl+e- move screen down one line (without moving cursor)"}),"\n",(0,r.jsx)(n.li,{children:"Ctrl+y- move screen up one line (without moving cursor)"}),"\n",(0,r.jsx)(n.li,{children:"Ctrl+b- move back one full screen"}),"\n",(0,r.jsx)(n.li,{children:"Ctrl+f- move forward one full screen"}),"\n",(0,r.jsx)(n.li,{children:"Ctrl+d- move forward 1/2 a screen"}),"\n",(0,r.jsx)(n.li,{children:"Ctrl+u- move back 1/2 a screen"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"TipPrefix a cursor movement command with a number to repeat it. For example,4jmoves down 4 lines."}),"\n",(0,r.jsx)(n.h2,{id:"insert-mode---insertingappending-text",children:"Insert mode - inserting/appending text"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"i- insert before the cursor"}),"\n",(0,r.jsx)(n.li,{children:"I- insert at the beginning of the line"}),"\n",(0,r.jsx)(n.li,{children:"a- insert (append) after the cursor"}),"\n",(0,r.jsx)(n.li,{children:"A- insert (append) at the end of the line"}),"\n",(0,r.jsx)(n.li,{children:"o- append (open) a new line below the current line"}),"\n",(0,r.jsx)(n.li,{children:"O- append (open) a new line above the current line"}),"\n",(0,r.jsx)(n.li,{children:"ea- insert (append) at the end of the word"}),"\n",(0,r.jsx)(n.li,{children:"Esc- exit insert mode"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"editing",children:"Editing"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"r- replace a single character"}),"\n",(0,r.jsx)(n.li,{children:"J- join line below to the current one with one space in between"}),"\n",(0,r.jsx)(n.li,{children:"gJ- join line below to the current one without space in between"}),"\n",(0,r.jsx)(n.li,{children:"gwip- reflow paragraph"}),"\n",(0,r.jsx)(n.li,{children:"cc- change (replace) entire line"}),"\n",(0,r.jsx)(n.li,{children:"c$- change (replace) to the end of the line"}),"\n",(0,r.jsx)(n.li,{children:"ciw- change (replace) entire word"}),"\n",(0,r.jsx)(n.li,{children:"cw- change (replace) to the end of the word"}),"\n",(0,r.jsx)(n.li,{children:"s- delete character and substitute text"}),"\n",(0,r.jsx)(n.li,{children:"S- delete line and substitute text (same as cc)"}),"\n",(0,r.jsx)(n.li,{children:"xp- transpose two letters (delete and paste)"}),"\n",(0,r.jsx)(n.li,{children:"u- undo"}),"\n",(0,r.jsx)(n.li,{children:"Ctrl+r- redo"}),"\n",(0,r.jsx)(n.li,{children:".- repeat last command"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"marking-text-visual-mode",children:"Marking text (visual mode)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"v- start visual mode, mark lines, then do a command (like y-yank)"}),"\n",(0,r.jsx)(n.li,{children:"V- start linewise visual mode"}),"\n",(0,r.jsx)(n.li,{children:"o- move to other end of marked area"}),"\n",(0,r.jsx)(n.li,{children:"Ctrl+v- start visual block mode"}),"\n",(0,r.jsx)(n.li,{children:"O- move to other corner of block"}),"\n",(0,r.jsx)(n.li,{children:"aw- mark a word"}),"\n",(0,r.jsxs)(n.li,{children:["ab- a block with ",(0,r.jsx)(n.code,{children:"()"})]}),"\n",(0,r.jsxs)(n.li,{children:["aB- a block with ",(0,r.jsx)(n.code,{children:"{}"})]}),"\n",(0,r.jsxs)(n.li,{children:["ib- inner block with ",(0,r.jsx)(n.code,{children:"()"})]}),"\n",(0,r.jsxs)(n.li,{children:["iB- inner block with ",(0,r.jsx)(n.code,{children:"{}"})]}),"\n",(0,r.jsx)(n.li,{children:"Esc- exit visual mode"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"visual-commands",children:"Visual commands"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:">"})," - shift text right"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<"})," - shift text left"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"y"})," - yank (copy) marked text"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"d"})," - delete marked text"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"~"})," - switch case"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"registers",children:"Registers"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:":reg- show registers content"}),"\n",(0,r.jsx)(n.li,{children:'"xy- yank into register x'}),"\n",(0,r.jsx)(n.li,{children:'"xp- paste contents of register x'}),"\n",(0,r.jsx)(n.li,{children:":%y+ - copy all lines"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"TipRegisters are being stored in ~/.viminfo, and will be loaded again on next restart of vim."}),"\n",(0,r.jsx)(n.p,{children:"TipRegister 0 contains always the value of the last yank command."}),"\n",(0,r.jsx)(n.h2,{id:"marks",children:"Marks"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:":marks- list of marks"}),"\n",(0,r.jsx)(n.li,{children:"ma- set current position for mark A"}),"\n",(0,r.jsx)(n.li,{children:"`a- jump to position of mark A"}),"\n",(0,r.jsx)(n.li,{children:"y`a- yank text to position of mark A"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"macros",children:"Macros"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"qa- record macro a"}),"\n",(0,r.jsx)(n.li,{children:"q- stop recording macro"}),"\n",(0,r.jsx)(n.li,{children:"@a- run macro a"}),"\n",(0,r.jsx)(n.li,{children:"@@- rerun last run macro"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"cut-and-paste",children:"Cut and paste"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"yy- yank (copy) a line"}),"\n",(0,r.jsx)(n.li,{children:"2yy- yank (copy) 2 lines"}),"\n",(0,r.jsx)(n.li,{children:"yw- yank (copy) the characters of the word from the cursor position to the start of the next word"}),"\n",(0,r.jsx)(n.li,{children:"y$- yank (copy) to end of line"}),"\n",(0,r.jsx)(n.li,{children:"p- put (paste) the clipboard after cursor"}),"\n",(0,r.jsx)(n.li,{children:"P- put (paste) before cursor"}),"\n",(0,r.jsx)(n.li,{children:"dd- delete (cut) a line"}),"\n",(0,r.jsx)(n.li,{children:"2dd- delete (cut) 2 lines"}),"\n",(0,r.jsx)(n.li,{children:"dw- delete (cut) the characters of the word from the cursor position to the start of the next word"}),"\n",(0,r.jsx)(n.li,{children:"D- delete (cut) to the end of the line"}),"\n",(0,r.jsx)(n.li,{children:"d$- delete (cut) to the end of the line"}),"\n",(0,r.jsx)(n.li,{children:"x- delete (cut) character"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"exiting",children:"Exiting"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:":w- write (save) the file, but don't exit"}),"\n",(0,r.jsxs)(n.li,{children:[":w"," !sudo tee %- write out the current file using sudo"]}),"\n",(0,r.jsx)(n.li,{children:":wqor:xorZZ- write (save) and quit"}),"\n",(0,r.jsx)(n.li,{children:":q- quit (fails if there are unsaved changes)"}),"\n",(0,r.jsxs)(n.li,{children:[":q","!orZQ- quit and throw away unsaved changes"]}),"\n",(0,r.jsx)(n.li,{children:":wqa- write (save) and quit on all tabs"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"search-and-replace",children:"Search and replace"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"/pattern- search for pattern"}),"\n",(0,r.jsx)(n.li,{children:"?pattern- search backward for pattern"}),"\n",(0,r.jsx)(n.li,{children:"vpattern- 'very magic' pattern: non-alphanumeric characters are interpreted as special regex symbols (no escaping needed)"}),"\n",(0,r.jsx)(n.li,{children:"n- repeat search in same direction"}),"\n",(0,r.jsx)(n.li,{children:"N- repeat search in opposite direction"}),"\n",(0,r.jsx)(n.li,{children:":%s/old/new/g- replace all old with new throughout file"}),"\n",(0,r.jsx)(n.li,{children:":%s/old/new/gc- replace all old with new throughout file with confirmations"}),"\n",(0,r.jsx)(n.li,{children:":noh- remove highlighting of search matches"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"search-in-multiple-files",children:"Search in multiple files"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:":vimgrep /pattern/ {file}"})," - search for pattern in multiple files"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["e.g.",":vimgrep"," /foo/ *",(0,r.jsx)(n.em,{children:"/"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:":cn- jump to the next match"}),"\n",(0,r.jsx)(n.li,{children:":cp- jump to the previous match"}),"\n",(0,r.jsx)(n.li,{children:":copen- open a window containing the list of matches"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"working-with-multiple-files",children:"Working with multiple files"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[":e"," file- edit a file in a new buffer"]}),"\n",(0,r.jsx)(n.li,{children:":bnextor:bn- go to the next buffer"}),"\n",(0,r.jsx)(n.li,{children:":bprevor:bp- go to the previous buffer"}),"\n",(0,r.jsx)(n.li,{children:":bd- delete a buffer (close a file)"}),"\n",(0,r.jsx)(n.li,{children:":ls- list all open buffers"}),"\n",(0,r.jsxs)(n.li,{children:[":sp"," file- open a file in a new buffer and split window"]}),"\n",(0,r.jsxs)(n.li,{children:[":vsp"," file- open a file in a new buffer and vertically split window"]}),"\n",(0,r.jsx)(n.li,{children:"Ctrl+ws- split window"}),"\n",(0,r.jsx)(n.li,{children:"Ctrl+ww- switch windows"}),"\n",(0,r.jsx)(n.li,{children:"Ctrl+wq- quit a window"}),"\n",(0,r.jsx)(n.li,{children:"Ctrl+wv- split window vertically"}),"\n",(0,r.jsx)(n.li,{children:"Ctrl+wh- move cursor to the left window (vertical split)"}),"\n",(0,r.jsx)(n.li,{children:"Ctrl+wl- move cursor to the right window (vertical split)"}),"\n",(0,r.jsx)(n.li,{children:"Ctrl+wj- move cursor to the window below (horizontal split)"}),"\n",(0,r.jsx)(n.li,{children:"Ctrl+wk- move cursor to the window above (horizontal split)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://www.freecodecamp.org/news/learn-vim-beginners-tutorial",children:"https://www.freecodecamp.org/news/learn-vim-beginners-tutorial"})}),"\n",(0,r.jsx)(n.h2,{id:"nano",children:"Nano"}),"\n",(0,r.jsx)(n.p,{children:"ctrl + shift + 6 - Visual mode"}),"\n",(0,r.jsx)(n.p,{children:"ctrl + k - cut text"})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>o});var l=i(296540);const r={},t=l.createContext(r);function s(e){const n=l.useContext(t);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),l.createElement(t.Provider,{value:n},e.children)}}}]);