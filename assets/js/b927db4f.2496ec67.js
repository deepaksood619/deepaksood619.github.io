"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[44342],{992778:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"python/django/admin-site","title":"Admin site","description":"Overview","source":"@site/docs/python/django/admin-site.md","sourceDirName":"python/django","slug":"/python/django/admin-site","permalink":"/python/django/admin-site","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/python/django/admin-site.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1752691234000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Django","permalink":"/python/django/"},"next":{"title":"Advanced","permalink":"/python/django/advanced"}}');var t=s(474848),r=s(28453);const a={},d="Admin site",o={},l=[{value:"Overview",id:"overview",level:2},{value:"ModelAdmin objects",id:"modeladmin-objects",level:2},{value:"Overriding the fieldsets that are shown in django admin panel",id:"overriding-the-fieldsets-that-are-shown-in-django-admin-panel",level:2},{value:"ModelAdmin.get_queryset(request)",id:"modeladminget_querysetrequest",level:2},{value:"Admin Actions",id:"admin-actions",level:2},{value:"Admin alternatives",id:"admin-alternatives",level:2},{value:"Django Open Source projects",id:"django-open-source-projects",level:2},{value:"Others",id:"others",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"admin-site",children:"Admin site"})}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Enabled by default"}),"\n",(0,t.jsxs)(n.li,{children:["Requirements","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"django.contrib.auth"}),"\n",(0,t.jsx)(n.li,{children:"django.contrib.contenttypes"}),"\n",(0,t.jsx)(n.li,{children:"django.contrib.messages"}),"\n",(0,t.jsx)(n.li,{children:"django.contrib.sessions"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"modeladmin-objects",children:"ModelAdmin objects"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"ModelAdmin"})," class is the representation of a model in the admin interface. Usually, these are stored in a file named ",(0,t.jsx)(n.strong,{children:"admin.py"})," in your application."]}),"\n",(0,t.jsx)(n.p,{children:"Register decorator"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"@admin.register(Author)\n"})}),"\n",(0,t.jsx)(n.p,{children:"list_display is used to show columns of data in list page"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"list_display = {'Issue', 'Date', 'clean'}\n"})}),"\n",(0,t.jsx)(n.p,{children:"fieldsets is used to show the fields that must be shown in detail page"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"fieldsets = {}\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"classTicketAdmin(admin.ModelAdmin):\n list_display=('ticket_number','issue','device','status')\n list_editable = ('is_finished',)\n list_filter=('status',)\n\n readonly_fields=('ticket_number','ticket_id','issue','device','status')\n\n def has_add_permission(self, request):\n  return False\n\n def has_delete_permission(self, request, obj=None):\n    return False\n"})}),"\n",(0,t.jsx)(n.h2,{id:"overriding-the-fieldsets-that-are-shown-in-django-admin-panel",children:"Overriding the fieldsets that are shown in django admin panel"}),"\n",(0,t.jsx)(n.p,{children:"We can override the fields that are shown when a user opens the django admin panel model."}),"\n",(0,t.jsx)(n.p,{children:"Ex -"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:" fieldsets=(\n  (None,{'fields':(\n  'client_name','display_name','unique_id','customer','campus_name','source_name','metadata',\n  'is_public',\n  'subscription_key','archiver_address','archiver_port','database_address','database_port',\n  'url_conf','mail_signature','latitude','longitude','order','excluded_issues',\n  'site_disabled','working_days','street_address','city','state','country','zipcode')},),\n  ('OtherDetails',\n  {'fields':(('office_start_time','office_end_time','number_of_workstations','type_of_workstation'),\n  ('billing_type','billing_cycle','sanctioned_load','dg_test_frequency'),\n  ('total_floors','total_carpet_area','occupancy','total_ahu'))}),\n)\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"image",src:s(554791).A+"",width:"1000",height:"2149"})}),"\n",(0,t.jsx)(n.p,{children:'Here notice the different sections and also the sub-sections in the "Other Details" section.'}),"\n",(0,t.jsxs)(n.p,{children:["Now we can also override the admin fields to show according to the user who is logged in, by overriding ",(0,t.jsx)(n.code,{children:"function get_fieldsets(self, request, obj=None)"})," and returning the fieldsets accordingly."]}),"\n",(0,t.jsx)(n.p,{children:"Ex -"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def get_fieldsets(self, request, obj=None):\n  client_id=request.session.get('client_id', None)\n\n  #if request is from frontend, dont show some of the fields\n  if client_id is not None:\n    return self.fieldsets\n  else:\n    if request.user.is_superuser:\n      return self.fieldsets\n    else:\n      return self.tester_fieldsets\nand,\ntester_fieldsets=(\n  (None,{'fields':('campus_name','display_name','customer')},),\n)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"modeladminget_querysetrequest",children:"ModelAdmin.get_queryset(request)"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"get_queryset"})," method on a ",(0,t.jsx)(n.strong,{children:"ModelAdmin"})," returns a ",(0,t.jsx)(n.a,{href:"https://docs.djangoproject.com/en/2.1/ref/models/querysets/#django.db.models.query.QuerySet",children:(0,t.jsx)(n.strong,{children:"QuerySet"})})," of all model instances that can be edited by the admin site. One use case for overriding this method is to show objects owned by the logged-in user:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:" class MyModelAdmin(admin.ModelAdmin):\n    def get_queryset(self, request):\n        qs = super().get_queryset(request)\n        if request.user.is_superuser:\n            return qs\n        return qs.filter(author=request.user)\n\n"})}),"\n",(0,t.jsx)(n.h2,{id:"admin-actions",children:"Admin Actions"}),"\n",(0,t.jsx)(n.p,{children:"Custom admin actions can be created for bulk operations in change list page"}),"\n",(0,t.jsx)(n.h2,{id:"admin-alternatives",children:"Admin alternatives"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://djangopackages.org/grids/g/admin-interface/",children:(0,t.jsx)(n.strong,{children:"https://djangopackages.org/grids/g/admin-interface/"})})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/saleor/saleor",children:"GitHub - saleor/saleor: Saleor Core: the high performance, composable, headless commerce API."})," (21.7k stars)","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Customer-centric e-commerce on a modern stack"}),"\n",(0,t.jsx)(n.li,{children:"A headless, GraphQL commerce platform delivering ultra-fast, dynamic, personalized shopping experiences. Beautiful online stores, anywhere, on any device."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"https://github.com/farridav/django-jazzmin",children:"GitHub - farridav/django-jazzmin: Jazzy theme for Django"})})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/sehmaschine/django-grappelli",children:"https://github.com/sehmaschine/django-grappelli"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/darklow/django-suit",children:"https://github.com/darklow/django-suit"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/geex-arts/django-jet",children:"https://github.com/geex-arts/django-jet"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/jet-admin/jet-bridge",children:"https://github.com/jet-admin/jet-bridge"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/sshwsfc/xadmin",children:"https://github.com/sshwsfc/xadmin"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://dev.to/sm0ke/django-boilerplate-code-open-source-and-free-2aa5",children:"https://dev.to/sm0ke/django-boilerplate-code-open-source-and-free-2aa5"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://appseed.us/admin-dashboards/django-datta-able",children:"https://appseed.us/admin-dashboards/django-datta-able"})}),"\n",(0,t.jsxs)(n.li,{children:["React admin - ",(0,t.jsx)(n.a,{href:"https://github.com/marmelab/react-admin",children:"https://github.com/marmelab/react-admin"})]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/iommirocks/iommi",children:"GitHub - iommirocks/iommi: Your first pick for a django power cord"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://marmelab.com/react-admin-demo/#/",children:"React Admin Demo - Posters Galore Administration"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://marmelab.com/react-admin/",children:"React-Admin - The Open-Source Framework For B2B Apps"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"django-open-source-projects",children:"Django Open Source projects"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://www.upgrad.com/blog/django-open-source-projects",children:"https://www.upgrad.com/blog/django-open-source-projects"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Wagtail (Open Source CMS)"}),"\n",(0,t.jsx)(n.li,{children:"Ownphotos (Open Source Google Photos)"}),"\n",(0,t.jsxs)(n.li,{children:["PostHog - ",(0,t.jsx)(n.a,{href:"https://github.com/PostHog/posthog",children:"https://github.com/PostHog/posthog"})," (Open Source Event Tracking)"]}),"\n",(0,t.jsx)(n.li,{children:"Cabot (Open Source Nagios)"}),"\n",(0,t.jsx)(n.li,{children:"Saleor Commerce (Open Source E-Commerce)"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"others",children:"Others"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://realpython.com/manage-users-in-django-admin",children:"https://realpython.com/manage-users-in-django-admin"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},554791:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/Admin-site-image1-f6fb7d69e88a55ca8e3023136d16252f.jpg"},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>d});var i=s(296540);const t={},r=i.createContext(t);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);