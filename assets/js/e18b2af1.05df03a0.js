"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[35884],{352038:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>a});var s=t(785893),d=t(511151);const o={},r="Commands",l={id:"databases/nosql-databases/mongodb/commands",title:"Commands",description:"Mongo DB Queries",source:"@site/docs/databases/nosql-databases/mongodb/commands.md",sourceDirName:"databases/nosql-databases/mongodb",slug:"/databases/nosql-databases/mongodb/commands",permalink:"/databases/nosql-databases/mongodb/commands",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/databases/nosql-databases/mongodb/commands.md",tags:[],version:"current",lastUpdatedAt:1704707538,formattedLastUpdatedAt:"Jan 8, 2024",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"MongoDB",permalink:"/databases/nosql-databases/mongodb/"},next:{title:"Data Types",permalink:"/databases/nosql-databases/mongodb/data-types"}},i={},a=[{value:"Mongo DB Queries",id:"mongo-db-queries",level:2},{value:"RDBMS Where Clause Equivalents in MongoDB",id:"rdbms-where-clause-equivalents-in-mongodb",level:2},{value:"Others",id:"others",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"commands",children:"Commands"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'services:\n  mongo:\n    stdin_open: true\n    tty: true\n    restart: "no"\n    image: mongo\n    container_name: mongo\n    environment:\n      MONGO_INITDB_ROOT_USERNAME: root\n      MONGO_INITDB_ROOT_PASSWORD: example\n\n  mongo_express:\n    stdin_open: true\n    tty: true\n    restart: "no"\n    image: mongo-express\n    container_name: mongo_express\n    ports:\n      - 8081:8081\n    environment:\n      ME_CONFIG_MONGODB_ADMINUSERNAME: root\n      ME_CONFIG_MONGODB_ADMINPASSWORD: example\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"brew install mongodb\n\n# start mongodb server\nbrew services start mongo\n\n# start mongo client\nmongo\nmongo -u root -p example\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# mongodb shell\nbrew install mongosh\n\nmongosh "mongodb+srv://cluster0.xxx.mongodb.net/" --apiVersion 1 --username deepaksood619\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# database tools\nbrew tap mongodb/brew\nbrew install mongodb-database-tools\n\n# backup mongodb database\nmongodump --uri="mongodb://mongodb0.example.com:27017"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"mongo-db-queries",children:"Mongo DB Queries"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'db.stats()\nuse <db_name>\nuse user_device_sms #create db user_device_sms\ndb #show current db\nshow dbs #show databases, only shows database with atleast one document\ndb.movie.insert({\'name\':\'End game\'}) #automatically creates a collection movie if not present\ndb.dropDatabase()\n\ndb.createUser({user:"deepak", pwd:"12345", roles:["readWrite", "dbAdmin"]})\n\ndb.createCollection(name, options)\nshow collections\ndb.createCollection("customers")\ndb.createCollection("mycol", { capped : true, autoIndexId : true, size :\n6142800, max : 10000 } )\ndb.customers.insert({"first_name":"Deepak","last_name":"Sood"});\ndb.COLLECTION_NAME.drop()\n\ndb.COLLECTION_NAME.find()\ndb.COLLECTION_NAME.find().pretty()\ndb.sms_collection.find({device_id: "009906bcc9ed9d86"})\ndb.sms_collection.find({device_id: "009906bcc9ed9d86"}, {device_id: 1})\ndb.sms_collection.find({}, {device_id: 1})\n\ndb.COLLECTION_NAME.update(SELECTION_CRITERIA, UPDATED_DATA) #updates the values in the existing document.\ndb.COLLECTION_NAME.save({_id:ObjectId(),NEW_DATA}) #replaces the existing document with the new document passed in the save() method.\ndb.COLLECTION_NAME.remove(DELLETION_CRITTERIA) #remove a document from the collection\ndb.COLLECTION_NAME.remove(DELETION_CRITERIA,1) #If there are multiple records and you want to delete only the first record, then set justOne parameter in remove() method.\ndb.COLLECTION_NAME.find().limit(NUMBER)\ndb.COLLECTION_NAME.find().limit(NUMBER).skip(NUMBER) #accepts number type argument and is used to skip the number of documents.\ndb.COLLECTION_NAME.find().sort({KEY:1}) #1 is used for ascending order while -1 is used for descending order.\n\ndb.customers.find().forEach(function(doc){print("Cust Name: "+doc.first_name)}); # looping through all data\n\n# count + search\ndb.collection_name.count({ "created_at": {$gt: new ISODate(\'2024-01-06T17:00:00.000Z\')}, "template": ObjectId(\'654e026678a908f1ce241df1\') })\n\n# deleteMany\ndb.collection_name.deleteMany({ "created_at": {$gt: new ISODate(\'2024-01-06T17:00:00.000Z\')}, "template": ObjectId(\'654e026678a908f1ce241df1\') })\n\ndb.collection.createIndex( { name: -1 } )\ndb.sms_collection.getIndexes()\n\ndb.COLLECTION_NAME.aggregate(AGGREGATE_OPERATION)\n\n# using full text search index\n{$text: { $search: "action adventure", $caseSensitive: false } }\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://www.mongodb.com/developer/products/mongodb/window-functions-and-time-series/",children:"Window Functions & Time Series Collections | MongoDB"})}),"\n",(0,s.jsx)(n.h2,{id:"rdbms-where-clause-equivalents-in-mongodb",children:"RDBMS Where Clause Equivalents in MongoDB"}),"\n",(0,s.jsx)(n.p,{children:"To query the document on the basis of some condition, you can use following operations."}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"center"},children:(0,s.jsx)(n.strong,{children:"Operation"})}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:(0,s.jsx)(n.strong,{children:"Syntax"})}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:(0,s.jsx)(n.strong,{children:"Example"})}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:(0,s.jsx)(n.strong,{children:"RDBMS Equivalent"})})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"Equality"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"{key:value}"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:'db.mycol.find({"by":"tutorials point"}).pretty()'})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"where by = 'tutorials point'"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"Less Than"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"{key:{$lt:value}}"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:'db.mycol.find({"likes":{$lt:50}}).pretty()'})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"where likes < 50"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"Less Than Equals"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"{key:{$lte:value}}"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:'db.mycol.find({"likes":{$lte:50}}).pretty()'})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"where likes <= 50"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"Greater Than"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"{key:{$gt:value}}"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:'db.mycol.find({"likes":{$gt:50}}).pretty()'})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"where likes > 50"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"Greater Than Equals"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"{key:{$gte:value}}"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:'db.mycol.find({"likes":{$gte:50}}).pretty()'})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"where likes >= 50"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"Not Equals"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"{key:{$ne:value}}"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:'db.mycol.find({"likes":{$ne:50}}).pretty()'})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"where likes != 50"})})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"others",children:"Others"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"VS Code extension for mongodb"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},511151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>r});var s=t(667294);const d={},o=s.createContext(d);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);