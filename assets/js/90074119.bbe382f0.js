"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[75225],{820606:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>h,toc:()=>l});var s=n(785893),t=n(511151);const i={},a="Regular Expressions",h={id:"python/python-intro/regular-expressions",title:"Regular Expressions",description:"Pythons Metacharacters",source:"@site/docs/python/python-intro/regular-expressions.md",sourceDirName:"python/python-intro",slug:"/python/python-intro/regular-expressions",permalink:"/python/python-intro/regular-expressions",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/python/python-intro/regular-expressions.md",tags:[],version:"current",lastUpdatedAt:1701793554,formattedLastUpdatedAt:"Dec 5, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Questions",permalink:"/python/python-intro/questions"},next:{title:"Requirements file",permalink:"/python/python-intro/requirements-file"}},c={},l=[{value:"Pythons Metacharacters",id:"pythons-metacharacters",level:2},{value:"Introduction",id:"introduction",level:2},{value:"Compiling",id:"compiling",level:2},{value:"Performing Matches",id:"performing-matches",level:2},{value:"re.match()",id:"rematch",level:2},{value:"group()",id:"group",level:2},{value:"groups()",id:"groups",level:2},{value:"groupdict()",id:"groupdict",level:2},{value:"re.search()",id:"research",level:2},{value:"Named Capturing Groups",id:"named-capturing-groups",level:3},{value:"re.findall()",id:"refindall",level:2},{value:"re.finditer()",id:"refinditer",level:2},{value:"re.start() &amp; re.end()",id:"restart--reend",level:2},{value:"re.sub() (Search and Replace)",id:"resub-search-and-replace",level:2},{value:"Backreference Substitution",id:"backreference-substitution",level:2},{value:"re.split(pattern, string, maxsplit=0, flags=0)",id:"resplitpattern-string-maxsplit0-flags0",level:2},{value:"Compilation Flag",id:"compilation-flag",level:2},{value:"Performance",id:"performance",level:2},{value:"References",id:"references",level:2}];function o(e){const r={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h1,{id:"regular-expressions",children:"Regular Expressions"}),"\n",(0,s.jsx)(r.h2,{id:"pythons-metacharacters",children:"Pythons Metacharacters"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.code,{children:". ^ $ * + ? { } [ ]  | ( )"})}),"\n",(0,s.jsx)(r.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.a,{href:"https://docs.python.org/3/library/re.html#module-re",children:"re"})," module provides an interface to the regular expression engine, allowing us to compile REs into objects and then perform matches with them. (Perl like regular expression)"]}),"\n",(0,s.jsx)(r.h2,{id:"compiling",children:"Compiling"}),"\n",(0,s.jsx)(r.p,{children:"Regular expressions are compiled into pattern objects, which have methods for various operations such as searching for pattern matches or performing string substitutions."}),"\n",(0,s.jsxs)(r.p,{children:["re.compile() also accepts an optional ",(0,s.jsx)(r.em,{children:"flags"})," argument, used to enable various special features and syntax variations."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:">>>import re\n\n>>>p = re.compile('ab*', re.IGNORECASE)\n\n>>>p\n\nre.compile(r'ab*', re.IGNORECASE|re.UNICODE)\n\nr'' represents that regular expression is in raw format\n"})}),"\n",(0,s.jsx)(r.h2,{id:"performing-matches",children:"Performing Matches"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:(0,s.jsx)(r.strong,{children:"Method/Attribute"})}),(0,s.jsx)(r.th,{children:(0,s.jsx)(r.strong,{children:"Purpose"})})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"match()"}),(0,s.jsx)(r.td,{children:"Determine if the RE matches at the beginning of the string."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"search()"}),(0,s.jsx)(r.td,{children:"Scan through a string, looking for any location where this RE matches."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"findall()"}),(0,s.jsx)(r.td,{children:"Find all substrings where the RE matches, and returns them as a list."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"finditer()"}),(0,s.jsxs)(r.td,{children:["Find all substrings where the RE matches, and returns them as an ",(0,s.jsx)(r.a,{href:"https://docs.python.org/3/glossary.html#term-iterator",children:"iterator"}),"."]})]})]})]}),"\n",(0,s.jsxs)(r.p,{children:["match() and search() return None if no match can be found. If they're successful, a ",(0,s.jsx)(r.a,{href:"https://docs.python.org/3/library/re.html#match-objects",children:"match object"})," instance is returned, containing information about the match: where it starts and ends, the substring it matched, and more."]}),"\n",(0,s.jsx)(r.h2,{id:"rematch",children:"re.match()"}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.a,{href:"https://docs.python.org/2/library/re.html#re.match",children:(0,s.jsx)(r.strong,{children:"re.match()"})})," expression only matches at the ",(0,s.jsx)(r.em,{children:"beginning"}),"of the string."]}),"\n",(0,s.jsx)(r.p,{children:"It either returns a MatchObject instance or returns None if the string does not match the pattern."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:"import re\nbool(re.match(r'ly', 'similarly'))\n>> False\nbool(re.match(r'ly', 'ly how'))\n>> True\n"})}),"\n",(0,s.jsxs)(r.p,{children:["We can query the ",(0,s.jsx)(r.a,{href:"https://docs.python.org/3/library/re.html#match-objects",children:"match object"})," for information about the matching string."]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:(0,s.jsx)(r.strong,{children:"Method/Attribute"})}),(0,s.jsx)(r.th,{children:(0,s.jsx)(r.strong,{children:"Purpose"})})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"group()"}),(0,s.jsx)(r.td,{children:"Return the string matched by the RE"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"start()"}),(0,s.jsx)(r.td,{children:"Return the starting position of the match"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"end()"}),(0,s.jsx)(r.td,{children:"Return the ending position of the match"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"span()"}),(0,s.jsx)(r.td,{children:"Return a tuple containing the (start, end) positions of the match"})]})]})]}),"\n",(0,s.jsx)(r.p,{children:"Since thematch()method only checks if the RE matches at the start of a string,start()will always be zero."}),"\n",(0,s.jsx)(r.h2,{id:"group",children:"group()"}),"\n",(0,s.jsx)(r.p,{children:"A group expression returns one or more subgroups of the match"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:"import re\nm = re.match(r'(w+)@(w+).(w+)','username@hackerrank.com')\nm.group(0) # The entire match\n'username@hackerrank.com'\nm.group(1) # The first parenthesized subgroup.\n'username'\nm.group(2) # The second parenthesized subgroup.\n'hackerrank'\nm.group(3) # The third parenthesized subgroup.\n'com'\nm.group(1,2,3) # Multiple arguments give us a tuple.\n('username', 'hackerrank', 'com')\n"})}),"\n",(0,s.jsx)(r.h2,{id:"groups",children:"groups()"}),"\n",(0,s.jsxs)(r.p,{children:["A ",(0,s.jsx)(r.em,{children:"groups()"})," expression returns a tuple containing all the subgroups of the match."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:"import re\nm = re.match(r'(w+)@(w+).(w+)','username@hackerrank.com')\nm.groups()\n('username', 'hackerrank', 'com')\n"})}),"\n",(0,s.jsx)(r.h2,{id:"groupdict",children:"groupdict()"}),"\n",(0,s.jsxs)(r.p,{children:["A ",(0,s.jsx)(r.em,{children:"groupdict()"})," expression returns a dictionary containing all the named subgroups of the match, keyed by the subgroup name. (Used by named capture group)"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:"m = re.match(r'(?P<user>w+)@(?P<website>w+).(?P<extension>w+)','myname@hackerrank.com')\nm.groupdict()\n{'website': 'hackerrank', 'user': 'myname', 'extension': 'com'}\n"})}),"\n",(0,s.jsx)(r.h2,{id:"research",children:"re.search()"}),"\n",(0,s.jsxs)(r.p,{children:["This function searches for first occurrence of RE ",(0,s.jsx)(r.em,{children:"pattern"}),"within ",(0,s.jsx)(r.em,{children:"string"}),"with optional ",(0,s.jsx)(r.em,{children:"flags"}),"."]}),"\n",(0,s.jsxs)(r.p,{children:["Here is the syntax for this function\n",(0,s.jsx)(r.code,{children:"re.search(pattern, string, flags = 0)"})]}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.a,{href:"https://docs.python.org/2/library/re.html#re.search",children:"re.search()"})," expression scans through a string looking for the ",(0,s.jsx)(r.em,{children:"first"})," location where the regex pattern produces a match."]}),"\n",(0,s.jsx)(r.p,{children:"It either returns a MatchObject instance or returns None if no position in the string matches the pattern."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:"import re\nbool(re.search(r'ly', 'similarly'))\n>> True\n"})}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:(0,s.jsx)(r.strong,{children:"S.No."})}),(0,s.jsx)(r.th,{children:(0,s.jsx)(r.strong,{children:"Parameter & Description"})})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"1"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"pattern"})," This is the regular expression to be matched."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"2"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"string"})," This is the string, which would be searched to match the pattern anywhere in the string."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"3"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"flags"})," You can specify different flags using ",(0,s.jsx)(r.code,{children:"bitwise OR (|)"}),". These are modifiers, which are listed in the table below."]})]})]})]}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.em,{children:"re.search"})," function returns amatchobject on success,none on failure. We use ",(0,s.jsx)(r.em,{children:"group(num)"})," or ",(0,s.jsx)(r.em,{children:"groups()"})," function ofmatchobject to get the matched expression."]}),"\n",(0,s.jsx)(r.h3,{id:"named-capturing-groups",children:"Named Capturing Groups"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"(?P<name>group)"}),' captures the match of group into the backreference "name"\nname must be an alphanumeric sequence starting with a letter.\ngroup can be any regular expression\nWe can reference the contents of the group with the named backreference ',(0,s.jsx)(r.code,{children:"(?P=name)"})]}),"\n",(0,s.jsx)(r.h2,{id:"refindall",children:"re.findall()"}),"\n",(0,s.jsxs)(r.p,{children:["The expression ",(0,s.jsx)(r.em,{children:"re.findall()"})," returns all the non-overlapping matches of patterns in a string as a list of strings."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.code,{children:"re.findall(r'w+', '12 drummers drumming, 11 pipers piping, 10 lords a-leaping')"})}),"\n",(0,s.jsx)(r.p,{children:"We can use capture group to only capture the groups that we want to capture\nEx -"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:">>>import re\n>>>randStr = \"My number is 412-555-1212\"\n>>>regex = re.compile(r\"412-(.*)-(.*)\")\n>>>matches = re.findall(regex, randStr)\n>>>print(matches)\n[('555', '1212')]\n>>>print(matches [0][0])\n555\n"})}),"\n",(0,s.jsx)(r.h2,{id:"refinditer",children:"re.finditer()"}),"\n",(0,s.jsxs)(r.p,{children:["The expression ",(0,s.jsx)(r.em,{children:"re.finditer()"})," returns an iterator yielding MatchObject instances over all non-overlapping matches for the ",(0,s.jsx)(r.em,{children:"re"})," pattern in the string."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:"iterator = re.finditer(r'w+', '12 drummers drumming, 11 pipers piping, 10 lords a-leaping')\nfor match in iterator:\n print(match.group())\n"})}),"\n",(0,s.jsx)(r.h2,{id:"restart--reend",children:"re.start() & re.end()"}),"\n",(0,s.jsx)(r.p,{children:"These expressions return the indices of the start and end of the substring matched by the group."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:"import re\nm = re.search(r'd+','1234')\nm.end()\n4\nm.start()\n0\nre.start(1) # returns value for 1st capturing group\n"})}),"\n",(0,s.jsx)(r.h2,{id:"resub-search-and-replace",children:"re.sub() (Search and Replace)"}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.em,{children:"re.sub()"})," tool (",(0,s.jsx)(r.em,{children:"sub"})," stands for ",(0,s.jsx)(r.em,{children:"substitution"}),") evaluates a pattern and, for each valid match, it calls a ",(0,s.jsx)(r.em,{children:"method"})," (or ",(0,s.jsx)(r.em,{children:"lambda"}),")."]}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.em,{children:"method"})," is called for all matches and can be used to modify strings in different ways."]}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.em,{children:"re.sub()"})," method returns the modified string as an output."]}),"\n",(0,s.jsx)(r.p,{children:"Syntax"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:"re.sub(pattern, replacement, string, max=0)\ns = re.sub(r'(?<= )&&(?= )', 'and', s)\ns = re.sub(r'(?<= )||(?= )', 'or', s)\n"})}),"\n",(0,s.jsxs)(r.p,{children:["This method replaces all occurrences of the RE ",(0,s.jsx)(r.em,{children:"pattern"})," in ",(0,s.jsx)(r.em,{children:"string"})," with ",(0,s.jsx)(r.em,{children:"replacement"}),", substituting all occurrences unless ",(0,s.jsx)(r.em,{children:"max"})," is provided. This method returns modified string."]}),"\n",(0,s.jsx)(r.h2,{id:"backreference-substitution",children:"Backreference Substitution"}),"\n",(0,s.jsx)(r.p,{children:"Also we can use capturing group as a replacement"}),"\n",(0,s.jsx)(r.p,{children:"Ex1 - This code replaces the bold tag with the content inside the bold tag i.e. The Link"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:'>>>randStr = "<a href=\'#\'><b>The Link</b></a>"\n>>>regex = re.compile(r"<b>(.*?)</b>")\n>>>randStr = re.sub(regex, r"1", randStr)\n>>>print(randStr)\n<a href=\'#\'>The Link</a>\n'})}),"\n",(0,s.jsx)(r.p,{children:"Ex2"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:">>>randStr = '412-555-1212'\n>>>regex = re.compile(r'([d]{3})-([d{3}-[d]{4})')\n>>>randStr = re.sub(regex, r'(1)2', randStr)\n>>>print(randStr)\n(412)555-1212\n"})}),"\n",(0,s.jsx)(r.h2,{id:"resplitpattern-string-maxsplit0-flags0",children:"re.split(pattern, string, maxsplit=0, flags=0)"}),"\n",(0,s.jsxs)(r.p,{children:["Split ",(0,s.jsx)(r.em,{children:"string"}),"by the occurrences of ",(0,s.jsx)(r.em,{children:"pattern"}),". If capturing parentheses are used in ",(0,s.jsx)(r.em,{children:"pattern"}),", then the text of all groups in the pattern are also returned as part of the resulting list. If ",(0,s.jsx)(r.em,{children:"maxsplit"}),"is nonzero, at most ",(0,s.jsx)(r.em,{children:"maxsplit"}),"splits occur, and the remainder of the string is returned as the final element of the list."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:"re.split(r'W+', 'Words, words, words.')\n['Words', 'words', 'words', '']\n\nre.split(r'(W+)', 'Words, words, words.')\n['Words', ', ', 'words', ', ', 'words', '.', '']\n\nre.split(r'W+', 'Words, words, words.', 1)\n['Words', 'words, words.']\n\nre.split('[a-f]+', '0a3B9', flags=re.IGNORECASE)\n['0', '3', '9']\n"})}),"\n",(0,s.jsx)(r.h2,{id:"compilation-flag",children:"Compilation Flag"}),"\n",(0,s.jsxs)(r.p,{children:["Compilation flags let you modify some aspects of how regular expressions work. Flags are available in the ",(0,s.jsx)(r.a,{href:"https://docs.python.org/3/library/re.html#module-re",children:"re"})," module under two names, a long name such asIGNORECASEand a short, one-letter form such asI.Multiple flags can be specified by bitwise OR-ing them;re.I|re.Msets both theI andMflags,"]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:(0,s.jsx)(r.strong,{children:"Flag"})}),(0,s.jsx)(r.th,{children:(0,s.jsx)(r.strong,{children:"Meaning"})})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"ASCII,A"}),(0,s.jsx)(r.td,{children:"Makes several escapes likew,b,sanddmatch only on ASCII characters with the respective property."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"DOTALL,S"}),(0,s.jsx)(r.td,{children:"Make.match any character, including newlines."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"IGNORECASE,I"}),(0,s.jsx)(r.td,{children:"Do case-insensitive matches."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"LOCALE,L"}),(0,s.jsx)(r.td,{children:"Do a locale-aware match."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"MULTILINE,M"}),(0,s.jsx)(r.td,{children:"Multi-line matching, affecting^and$."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"VERBOSE,X(for 'extended')"}),(0,s.jsx)(r.td,{children:"Enable verbose REs, which can be organized more cleanly and understandably."})]})]})]}),"\n",(0,s.jsx)(r.p,{children:"Also flags can be used in re.compile"}),"\n",(0,s.jsx)(r.p,{children:'Ex - re.compile(r"(?m)^.?s")\nHere ?m represents multiline flag'}),"\n",(0,s.jsx)(r.h2,{id:"performance",children:"Performance"}),"\n",(0,s.jsx)(r.p,{children:"When using a regular expression inside a loop, always use compile and then check for regular expression match inside a loop. CPU takes a lot of time to process the regular expression and using it inside a loop should not be done."}),"\n",(0,s.jsx)(r.h2,{id:"references",children:"References"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"https://docs.python.org/3/howto/regex.html",children:"https://docs.python.org/3/howto/regex.html"})}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"https://www.tutorialspoint.com/python3/python_reg_expressions.htm",children:"https://www.tutorialspoint.com/python3/python_reg_expressions.htm"})})]})}function d(e={}){const{wrapper:r}={...(0,t.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},511151:(e,r,n)=>{n.d(r,{Z:()=>h,a:()=>a});var s=n(667294);const t={},i=s.createContext(t);function a(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function h(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);