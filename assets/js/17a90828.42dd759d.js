"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[18323],{208310:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var a=i(785893),t=i(511151);const s={},r="Mozark - Cloud Cost Optimization and Performance Enhancement",o={id:"about-me/projects/53-mozark-cloud-cost-optimization",title:"Mozark - Cloud Cost Optimization and Performance Enhancement",description:"Client Overview",source:"@site/docs/about-me/projects/53-mozark-cloud-cost-optimization.md",sourceDirName:"about-me/projects",slug:"/about-me/projects/53-mozark-cloud-cost-optimization",permalink:"/about-me/projects/53-mozark-cloud-cost-optimization",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/about-me/projects/53-mozark-cloud-cost-optimization.md",tags:[],version:"current",lastUpdatedAt:1721239845,formattedLastUpdatedAt:"Jul 17, 2024",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Pull Request Risk Tagging Heuristics",permalink:"/about-me/projects/52-pull-request-risk-tagging-heuristics"},next:{title:"Airflow and Kafka Migration",permalink:"/about-me/projects/54-airflow-kafka-migration"}},l={},c=[{value:"Client Overview",id:"client-overview",level:2},{value:"Approach",id:"approach",level:2},{value:"1. Infrastructure Assessment",id:"1-infrastructure-assessment",level:3},{value:"2. DevOps Optimization",id:"2-devops-optimization",level:3},{value:"a. EC2 Instance Right-Sizing and Upgrading",id:"a-ec2-instance-right-sizing-and-upgrading",level:4},{value:"b. Cleanup of Unused Resources",id:"b-cleanup-of-unused-resources",level:4},{value:"3. Database Optimization",id:"3-database-optimization",level:3},{value:"a. Database Performance Tuning",id:"a-database-performance-tuning",level:4},{value:"b. Rightsizing and Scaling",id:"b-rightsizing-and-scaling",level:4},{value:"c. Database Migration and Modernization",id:"c-database-migration-and-modernization",level:4},{value:"d. Backup and Recovery Optimization",id:"d-backup-and-recovery-optimization",level:4},{value:"4. Additional Activities",id:"4-additional-activities",level:3},{value:"a. Savings Plans and Reserved Instances",id:"a-savings-plans-and-reserved-instances",level:4},{value:"b. Architecture Scalability Enhancements",id:"b-architecture-scalability-enhancements",level:4},{value:"5. Performance and Reliability",id:"5-performance-and-reliability",level:3},{value:"a. Enhanced Monitoring and Alerting",id:"a-enhanced-monitoring-and-alerting",level:4},{value:"Results",id:"results",level:2},{value:"Cost Savings",id:"cost-savings",level:3},{value:"Performance Improvements",id:"performance-improvements",level:3},{value:"Reliability and Manageability",id:"reliability-and-manageability",level:3},{value:"Conclusion",id:"conclusion",level:2},{value:"Future Plans",id:"future-plans",level:2}];function d(e){const n={h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"mozark---cloud-cost-optimization-and-performance-enhancement",children:"Mozark - Cloud Cost Optimization and Performance Enhancement"}),"\n",(0,a.jsx)(n.h2,{id:"client-overview",children:"Client Overview"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Client:"})," Mozark"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Industry:"})," Technology"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Objective:"})," Reduce AWS costs, enhance database performance, and create a scalable architecture."]}),"\n",(0,a.jsx)(n.li,{children:"Initial AWS Monthly Costs - $20,000"}),"\n",(0,a.jsx)(n.li,{children:"Optimized AWS Monthly Costs - $12,000"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"approach",children:"Approach"}),"\n",(0,a.jsx)(n.h3,{id:"1-infrastructure-assessment",children:"1. Infrastructure Assessment"}),"\n",(0,a.jsx)(n.p,{children:"We conducted a detailed assessment of Mozark's AWS infrastructure to identify inefficiencies and potential cost-saving opportunities. This included analyzing compute resources, storage, database configurations, and overall architecture."}),"\n",(0,a.jsx)(n.h3,{id:"2-devops-optimization",children:"2. DevOps Optimization"}),"\n",(0,a.jsx)(n.h4,{id:"a-ec2-instance-right-sizing-and-upgrading",children:"a. EC2 Instance Right-Sizing and Upgrading"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Right-sized EC2 instances to better match workload requirements, ensuring optimal resource utilization."}),"\n",(0,a.jsx)(n.li,{children:"Migrated instances from older Intel-based instances to newer AMD and Graviton instances, achieving better performance at a lower cost."}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"b-cleanup-of-unused-resources",children:"b. Cleanup of Unused Resources"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Conducted thorough cleanups of unused resources across multiple environments and accounts, including unattached EBS volumes, obsolete snapshots, and unused Elastic IPs."}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"3-database-optimization",children:"3. Database Optimization"}),"\n",(0,a.jsx)(n.h4,{id:"a-database-performance-tuning",children:"a. Database Performance Tuning"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Performed extensive performance tuning on existing databases, including indexing, query optimization, and sharding strategies."}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"b-rightsizing-and-scaling",children:"b. Rightsizing and Scaling"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Right-sized database instances based on actual usage patterns to optimize cost and performance."}),"\n",(0,a.jsx)(n.li,{children:"Implemented auto-scaling solutions to handle varying loads dynamically, ensuring cost efficiency and performance."}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"c-database-migration-and-modernization",children:"c. Database Migration and Modernization"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Migrated databases to more cost-effective and scalable solutions like Amazon RDS and Aurora."}),"\n",(0,a.jsx)(n.li,{children:"Upgraded database versions to leverage new features and performance improvements, ensuring compatibility and extended support."}),"\n",(0,a.jsx)(n.li,{children:"Move to gp3 volumes from provisioned IOPS disk, achieving significant cost savings"}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"d-backup-and-recovery-optimization",children:"d. Backup and Recovery Optimization"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Optimized backup strategies to reduce storage costs and improve recovery times."}),"\n",(0,a.jsx)(n.li,{children:"Implemented automated backup and recovery solutions to enhance data protection and availability."}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"4-additional-activities",children:"4. Additional Activities"}),"\n",(0,a.jsx)(n.h4,{id:"a-savings-plans-and-reserved-instances",children:"a. Savings Plans and Reserved Instances"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Purchased savings plans for EC2 instances to secure long-term cost reductions."}),"\n",(0,a.jsx)(n.li,{children:"Implemented RIs for RDS to take advantage of significant savings over on-demand pricing."}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"b-architecture-scalability-enhancements",children:"b. Architecture Scalability Enhancements"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Redesigned the architecture to ensure scalability and flexibility, supporting future growth and peak loads."}),"\n",(0,a.jsx)(n.li,{children:"Implemented microservices architecture where applicable to improve modularity and manageability."}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"5-performance-and-reliability",children:"5. Performance and Reliability"}),"\n",(0,a.jsx)(n.h4,{id:"a-enhanced-monitoring-and-alerting",children:"a. Enhanced Monitoring and Alerting"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Implemented comprehensive monitoring and alerting solutions using AWS CloudWatch and third-party tools."}),"\n",(0,a.jsx)(n.li,{children:"Set up automated alerting for critical events to ensure timely resolution and minimize downtime."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"results",children:"Results"}),"\n",(0,a.jsx)(n.h3,{id:"cost-savings",children:"Cost Savings"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Initial Monthly Cost:"})," $20,000"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Optimized Monthly Cost:"})," $12,000"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Total Monthly Savings:"})," $8,000 (approx. 40% reduction)"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"performance-improvements",children:"Performance Improvements"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Database Performance:"})," Enhanced by an average of 50% through tuning and caching mechanisms."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Scalability:"})," Improved architecture scalability to handle future growth and varying loads efficiently."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"reliability-and-manageability",children:"Reliability and Manageability"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Uptime:"})," Achieved near-zero downtime through robust backup, recovery, and monitoring solutions."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Manageability:"})," Enhanced through modular architecture and automated routine tasks."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,a.jsx)(n.p,{children:"Through strategic optimizations on both the DevOps and DBA sides, Opstree successfully reduced Mozark's AWS costs by approximately 40%, while significantly enhancing database performance and creating a scalable architecture. This case study demonstrates Opstree's capability to deliver cost-effective and high-performance solutions tailored to client needs."}),"\n",(0,a.jsx)(n.h2,{id:"future-plans",children:"Future Plans"}),"\n",(0,a.jsx)(n.p,{children:"Mozark plans to continue working with Opstree to further optimize their AWS infrastructure, focusing on continuous improvements and scalability to support their growing business requirements."})]})}function u(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},511151:(e,n,i)=>{i.d(n,{Z:()=>o,a:()=>r});var a=i(667294);const t={},s=a.createContext(t);function r(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);