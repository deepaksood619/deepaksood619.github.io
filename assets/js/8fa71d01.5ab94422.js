"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[69940],{127048:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var n=t(785893),r=t(511151);const i={},o="Serverless Architecture",c={id:"computer-science/system-design/serverless-architecture",title:"Serverless Architecture",description:"Serverless computing simply means using existing, auto-scaling cloud services to achieve system behaviours. In other words, I don't manage any servers or docker containers. I don't set up networks or manage operation (ops). I merely provide the serverless solution my recipe and it handles creation of any needed assets and performs the required computational process.",source:"@site/docs/computer-science/system-design/serverless-architecture.md",sourceDirName:"computer-science/system-design",slug:"/computer-science/system-design/serverless-architecture",permalink:"/computer-science/system-design/serverless-architecture",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/computer-science/system-design/serverless-architecture.md",tags:[],version:"current",lastUpdatedAt:1726859634,formattedLastUpdatedAt:"Sep 20, 2024",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Retries",permalink:"/computer-science/system-design/retries"},next:{title:"Trade offs",permalink:"/computer-science/system-design/trade-offs"}},a={},l=[{value:"Stateless Services",id:"stateless-services",level:2},{value:"Durable Functions",id:"durable-functions",level:2},{value:"AWS SAM (Serverless Application Model)",id:"aws-sam-serverless-application-model",level:2},{value:"References",id:"references",level:2}];function d(e){const s={a:"a",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",ul:"ul",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"serverless-architecture",children:"Serverless Architecture"}),"\n",(0,n.jsx)(s.p,{children:"Serverless computing simply means using existing, auto-scaling cloud services to achieve system behaviours. In other words, I don't manage any servers or docker containers. I don't set up networks or manage operation (ops). I merely provide the serverless solution my recipe and it handles creation of any needed assets and performs the required computational process."}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsx)(s.p,{children:"Containerisation - Gives a uniform development environment that is independent of the systems the code is running on."}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsx)(s.p,{children:"Microservices architecture - Developers are able to quickly understand a certain module without going through the whole code base."}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Also changing something on one part of the code doesn't effect the other parts of the product."}),"\n",(0,n.jsx)(s.li,{children:"Apis are used to communicate between different modules"}),"\n",(0,n.jsx)(s.li,{children:"Messaging Queue is used for inter-modules communication (AMQP, MQTT, etc.)"}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsx)(s.p,{children:"Event Based Architecture"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Events are triggered when some event happens"}),"\n",(0,n.jsx)(s.li,{children:"Example - When a photo is uploaded automatically trigger the thumbnail creation function."}),"\n",(0,n.jsx)(s.li,{children:"Functions subscribe to events, and based on that event react accordingly."}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsx)(s.p,{children:"AWS Lambda"}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsx)(s.p,{children:"AWS CloudFunctions"}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsx)(s.p,{children:"AWS CloudFormation (for provisioning)"}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"stateless-services",children:"Stateless Services"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Not a cache or a database"}),"\n",(0,n.jsx)(s.li,{children:"Frequently accessed metadata"}),"\n",(0,n.jsx)(s.li,{children:"No instance affinity"}),"\n",(0,n.jsx)(s.li,{children:"Loss of a node is a non-event"}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"durable-functions",children:"Durable Functions"}),"\n",(0,n.jsxs)(s.p,{children:["Durable Functionsis an extension of ",(0,n.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/azure/azure-functions/functions-overview",children:"Azure Functions"})," that lets you write stateful functions in a serverless compute environment. The extension lets you define stateful workflows by writing ",(0,n.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/azure/azure-functions/durable/durable-functions-orchestrations",children:"orchestrator functions"})," and stateful entities by writing ",(0,n.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/azure/azure-functions/durable/durable-functions-entities",children:"entity functions"})," using the Azure Functions programming model. Behind the scenes, the extension manages state, checkpoints, and restarts for you, allowing you to focus on your business logic."]}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/azure/azure-functions/durable/durable-functions-overview",children:"https://docs.microsoft.com/en-us/azure/azure-functions/durable/durable-functions-overview"})}),"\n",(0,n.jsx)(s.h2,{id:"aws-sam-serverless-application-model",children:"AWS SAM (Serverless Application Model)"}),"\n",(0,n.jsx)(s.p,{children:"The AWS Serverless Application Model (SAM) is an open-source AWS framework that allows developers to more efficiently build serverless applications. It includes SAM CLI options for local testing and integrates with various AWS serverless tools."}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"https://www.toptal.com/aws/typescript-jest-aws-sam-tutorial",children:"https://www.toptal.com/aws/typescript-jest-aws-sam-tutorial"})}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"https://aws.amazon.com/serverless/sam/",children:"AWS Serverless Application Model"})}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html",children:"What is the AWS Serverless Application Model (AWS SAM)? - AWS Serverless Application Model"})}),"\n",(0,n.jsx)(s.h2,{id:"references",children:"References"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://cloudplatform.googleblog.com/2018/04/Cloud-native-architecture-with-serverless-microservices-the-Smart-Parking-story.html",children:"https://cloudplatform.googleblog.com/2018/04/Cloud-native-architecture-with-serverless-microservices-the-Smart-Parking-story.html"})}),"\n",(0,n.jsx)(s.li,{children:"SE Radio - 320: Serverless Applications - Kishore Bhatia with Nate Taggart"}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://www.freecodecamp.org/news/complete-back-end-system-with-serverless",children:"https://www.freecodecamp.org/news/complete-back-end-system-with-serverless"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://www.youtube.com/watch?v=wYvQv_MTMNs&ab_channel=GOTOConferences",children:"Serverless Compute at the Heart of Your EDA \u2022 Julian Wood \u2022 GOTO 2024 - YouTube"})}),"\n"]})]})}function u(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},511151:(e,s,t)=>{t.d(s,{Z:()=>c,a:()=>o});var n=t(667294);const r={},i=n.createContext(r);function o(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);