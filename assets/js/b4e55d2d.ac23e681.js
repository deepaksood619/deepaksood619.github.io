"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[27534],{651750:(a,e,s)=>{s.r(e),s.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>g,frontMatter:()=>i,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"databases/nosql-databases/cassandra/cql-cassandra-query-language","title":"CQL (Cassandra Query Language)","description":"CQL","source":"@site/docs/databases/nosql-databases/cassandra/cql-cassandra-query-language.md","sourceDirName":"databases/nosql-databases/cassandra","slug":"/databases/nosql-databases/cassandra/cql-cassandra-query-language","permalink":"/databases/nosql-databases/cassandra/cql-cassandra-query-language","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/databases/nosql-databases/cassandra/cql-cassandra-query-language.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1705054005000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Consistency","permalink":"/databases/nosql-databases/cassandra/consistency"},"next":{"title":"Data Model","permalink":"/databases/nosql-databases/cassandra/data-model"}}');var t=s(474848),d=s(28453);const i={},r="CQL (Cassandra Query Language)",c={},o=[{value:"CQL",id:"cql",level:2},{value:"Commands",id:"commands",level:2},{value:"Remember this",id:"remember-this",level:3}];function l(a){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,d.R)(),...a.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"cql-cassandra-query-language",children:"CQL (Cassandra Query Language)"})}),"\n",(0,t.jsx)(e.h2,{id:"cql",children:"CQL"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"CQL mapping to cassandra's internal data structure"}),"\n",(0,t.jsx)(e.li,{children:"Use SQL like query language"}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.strong,{children:"CQL is a reintroduction of schema"})}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"CQL creates a common language"})," so that details of the data model can be easily communicated"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"CQL is a best-practices Cassandra interface"})," and hides the messy details"]}),"\n",(0,t.jsx)(e.li,{children:"CQL let's you take advantage of the C* Data structure"}),"\n",(0,t.jsx)(e.li,{children:"CQL protocol is binary and therefore interoperable with any language"}),"\n",(0,t.jsx)(e.li,{children:"CQL is asynchronous and fast (Thrift transport layer is synchronous)"}),"\n",(0,t.jsx)(e.li,{children:"CQL allows the possibility for prepared statements"}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"commands",children:"Commands"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"DESCRIBE KEYSPACES;\n\nDESCRIBE TABLES;\nCREATE KEYSPACE killrvideo WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1};\nUSE killrvideo;\nCREATE TABLE raw_data_by_day ( sensor text, day text, ts timeuuid, reading int, primary key((sensor, day), ts) ) WITH CLUSTERING ORDER BY (ts DESC) AND COMPACTION = {'class': 'TimeWindowCompactionStrategy', 'compaction_window_unit': 'DAYS', 'compaction_window_size': 1};\nCREATE TABLE stuff ( a int, b int, myset set<int>, mylist list<int>, mymap map<int, int>, PRIMARY KEY (a,b));\n\nCREATE TABLE videos ( video_id timeuuid, added_date timestamp, Title text, PRIMARY KEY (video_id));\n\nCREATE TABLE videos_by_tag ( tag text, video_id timeuuid, added_date timestamp, Title text, PRIMARY KEY (tag, video_id));\nCREATE TABLE videos_by_tag ( tag text, video_id timeuuid, added_date timestamp, Title text, PRIMARY KEY (tag, added_date, video_id)) WITH CLUSTERING ORDER BY(added_date ASC, video_id ASC);\nINSERT INTO killrvideo.videos(video_id, added_date, Title) VALUES (1645ea59-14bd-11e5-a993-8138354b7e31, '2014-01-29', 'Cassandra History');\nBEGIN BATCH\n\nINSERT into users(username,name,age) VALUES('raziz12','Rashid Aziz',34);\n\nINSERT INTO users_by_cities(username,name,city, age) VALUES ('raziz12','Rashid Aziz','Karachi',30);\n\nAPPLY BATCH;UPDATE stuff SET myset = {1,2}, mylist = [3,4,5], mymap = {6:7, 8:9} WHERE a = 0 AND b = 1;\nSELECT * FROM stuff; (in cassandra-cli)\n\nSELECT * FROM killrvideo.videos;\n\nSELECT count(*) FROM killrvideo.videos;\n\nSELECT * FROM videos_by_tag WHERE tag='cassandra';\n\nSELECT * FROM videos_by_tag WHERE tag = 'cassandra' AND title='Cassandra Intro';\n\nSELECT * FROM videos_by_tag WHERE tag='cassandra' ORDER BY added_date DESC;\nLIST stuff;\nSELECT key_aliases, column_aliases FROM system.schema_columnfamilies WHERE keyspace_name = 'test' AND columnfamily_name = 'stuff'; (in cqlsh)\nTRUNCATE videos;\n\nDROP TABLE videos_by_tag;\nCOPY videos(video_id, added_date, title) FROM '/Users/deepaksood/Downloads/ds201-6.0-labwork/labwork/data-files/videos.csv' WITH HEADER=TRUE;\nCOPY videos_by_tag (tag, video_id, added_date, title) FROM '/Users/deepaksood/Downloads/ds201-6.0-labwork/labwork/data-files/videos-by-tag.csv' WITH HEADER=TRUE;\nQUIT\n## DESCRIBE TABLE videos;\n\nSELECT token(video_id), video_id FROM videos;\n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"image",src:s(573697).A+"",width:"1000",height:"750"})}),"\n",(0,t.jsx)(e.h3,{id:"remember-this",children:"Remember this"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Cassandra finds rows fast"}),"\n",(0,t.jsx)(e.li,{children:"Cassandra scans columns fast"}),"\n",(0,t.jsx)(e.li,{children:"Cassandra does not scan rows"}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"image",src:s(66e4).A+"",width:"1000",height:"750"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"image",src:s(415581).A+"",width:"1000",height:"750"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"image",src:s(905682).A+"",width:"1000",height:"750"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"image",src:s(773615).A+"",width:"1000",height:"750"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"image",src:s(622668).A+"",width:"1000",height:"750"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"image",src:s(468041).A+"",width:"1000",height:"750"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"image",src:s(651741).A+"",width:"1000",height:"750"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"image",src:s(896160).A+"",width:"1000",height:"750"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"image",src:s(9775).A+"",width:"1000",height:"750"})})]})}function g(a={}){const{wrapper:e}={...(0,d.R)(),...a.components};return e?(0,t.jsx)(e,{...a,children:(0,t.jsx)(l,{...a})}):l(a)}},573697:(a,e,s)=>{s.d(e,{A:()=>n});const n=s.p+"assets/images/Cassandra_CQL-(Cassandra-Query-Language)-image1-1cae898bb938ea820c6efe5c6604cf28.jpg"},651741:(a,e,s)=>{s.d(e,{A:()=>n});const n=s.p+"assets/images/Cassandra_CQL-(Cassandra-Query-Language)-image10-06c1f6115ba759b2817f08cf40307ced.jpg"},896160:(a,e,s)=>{s.d(e,{A:()=>n});const n=s.p+"assets/images/Cassandra_CQL-(Cassandra-Query-Language)-image11-4a69641ffa30190ed3486a97a8433b79.jpg"},9775:(a,e,s)=>{s.d(e,{A:()=>n});const n=s.p+"assets/images/Cassandra_CQL-(Cassandra-Query-Language)-image12-39cbe8564f01f7b3450a05c53b8516fe.jpg"},66e4:(a,e,s)=>{s.d(e,{A:()=>n});const n=s.p+"assets/images/Cassandra_CQL-(Cassandra-Query-Language)-image4-2c28bceb73cbb8f5cf1854711d6c7a2a.jpg"},415581:(a,e,s)=>{s.d(e,{A:()=>n});const n=s.p+"assets/images/Cassandra_CQL-(Cassandra-Query-Language)-image5-a59949b924799b91f78f09b74228de3f.jpg"},905682:(a,e,s)=>{s.d(e,{A:()=>n});const n=s.p+"assets/images/Cassandra_CQL-(Cassandra-Query-Language)-image6-05a7c4c1284e4150d5e612b12c3d0881.jpg"},773615:(a,e,s)=>{s.d(e,{A:()=>n});const n=s.p+"assets/images/Cassandra_CQL-(Cassandra-Query-Language)-image7-8b332010eff5201bb27204da9eeb8cbe.jpg"},622668:(a,e,s)=>{s.d(e,{A:()=>n});const n=s.p+"assets/images/Cassandra_CQL-(Cassandra-Query-Language)-image8-5431bda0064c78ef93369670c0c90c37.jpg"},468041:(a,e,s)=>{s.d(e,{A:()=>n});const n=s.p+"assets/images/Cassandra_CQL-(Cassandra-Query-Language)-image9-ae81dd7e2c15336044f9d5ea155363c3.jpg"},28453:(a,e,s)=>{s.d(e,{R:()=>i,x:()=>r});var n=s(296540);const t={},d=n.createContext(t);function i(a){const e=n.useContext(d);return n.useMemo((function(){return"function"==typeof a?a(e):{...e,...a}}),[e,a])}function r(a){let e;return e=a.disableParentContext?"function"==typeof a.components?a.components(t):a.components||t:i(a.components),n.createElement(d.Provider,{value:e},a.children)}}}]);