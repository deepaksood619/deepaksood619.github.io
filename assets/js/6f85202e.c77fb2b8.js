"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[78018],{940030:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>t,metadata:()=>l,toc:()=>h});var i=s(785893),r=s(511151);const t={},a="Shell/bash Script",l={id:"devops/terminal-bash/shell-bash-script",title:"Shell/bash Script",description:"A shell script is a computer program designed to be run by the Unix shell, a command-line interpreter. The various dialects of shell scripts are considered to be scripting languages. Typical operations performed by shell scripts include file manipulation, program execution, and printing text. A script which sets up the environment, runs the program, and does any necessary cleanup, logging, etc. is called a wrapper.",source:"@site/docs/devops/terminal-bash/shell-bash-script.md",sourceDirName:"devops/terminal-bash",slug:"/devops/terminal-bash/shell-bash-script",permalink:"/devops/terminal-bash/shell-bash-script",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/devops/terminal-bash/shell-bash-script.md",tags:[],version:"current",lastUpdatedAt:1728328563,formattedLastUpdatedAt:"Oct 7, 2024",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Others",permalink:"/devops/terminal-bash/others"},next:{title:"Shell - Intro",permalink:"/devops/terminal-bash/shell-intro"}},o={},h=[{value:"Passing Variables",id:"passing-variables",level:3},{value:"Shortcuts",id:"shortcuts",level:3},{value:"Loops",id:"loops",level:3},{value:"Examples",id:"examples",level:3},{value:"References",id:"references",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"shellbash-script",children:"Shell/bash Script"}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.strong,{children:"shell script"})," is a ",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Computer_program",children:"computer program"})," designed to be run by the ",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Unix_shell",children:"Unix shell"}),", a ",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Command-line_interpreter",children:"command-line interpreter"}),". The various dialects of shell scripts are considered to be ",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Scripting_language",children:"scripting languages"}),". Typical operations performed by shell scripts include file manipulation, program execution, and printing text. A script which sets up the environment, runs the program, and does any necessary cleanup, logging, etc. is called a ",(0,i.jsx)(n.strong,{children:"wrapper"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'#!/bin/sh\necho "What is your name?"\nread USER_NAME\necho "Hello $USER_NAME"\necho "I will create you a file called $USER_NAME_file"\ntouch $USER_NAME_file\n'})}),"\n",(0,i.jsx)(n.h3,{id:"passing-variables",children:"Passing Variables"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"#!/bin/bash\nvar_name=$1\necho ${var_name}\necho $2\n\n./test hello 2\n"})}),"\n",(0,i.jsx)(n.h3,{id:"shortcuts",children:"Shortcuts"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"$0 - Script name\n$# - Argument count\n$? - Most recent exit code\n$@ and $* - All the args\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://dev.to/rpalo/handling-arguments-in-bash-scripts-3o5m",children:"https://dev.to/rpalo/handling-arguments-in-bash-scripts-3o5m"})}),"\n",(0,i.jsx)(n.h3,{id:"loops",children:"Loops"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'#!/bin/sh\nfor i in 1 2 3 4 5\ndo\n  echo "Looping ... number $i"\ndone\n\n for i in {1..10}\n do\n  echo "$i"\n done\n\n #!/bin/sh\nfor i in hello 1 * 2 goodbye\ndo\n  echo "Looping ... i is set to $i"\ndone\n\n #!/bin/sh\nINPUT_STRING=hello\nwhile [ "$INPUT_STRING" != "bye" ]\ndo\n  echo "Please type something in (bye to quit)"\n  read INPUT_STRING\n  echo "You typed: $INPUT_STRING"\ndone\n\n#!/bin/zsh\n# check if server name is passed\nif [ "$1" ]; then\n        # server name is passed, ssh\n        ssh ubuntu@$1.abc.com\nelse\n        # get server name since not passed\n        echo "Enter server name to ssh - "\n        read SERVER_NAME\n        ssh ubuntu@$SERVER_NAME.abc.com\nfi\n'})}),"\n",(0,i.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Write date to a file every second\n#!/bin/bash\nmkdir -p /var/log/apache\ntouch /var/log/apache/access.log\nwhile true\ndo\n        echo $(date) >> /var/log/apache/access.log\n    sleep 1\ndone\n\n# Loop through and run all commands\n#!/bin/bash\n\nVAL="$(kubectl get pods -n example | awk \'{if (NR!=1) { print $1 }}\')"\n\nfor i in $VAL\ndo\n        kubectl delete -n example pods $i\ndone\n\nwhile true; do echo `date` | kafkacat -P -b my-cluster-kafka-brokers.kafka:9092 -t test; done\n\n# find and replace filename\nfind . -name \'*---*\' -type f | grep -v "media" -exec sh -c \'\nfor f; do\n    mv "$f" "${f%/*}/${f##*/123_}"\ndone\' sh {} +\n\nfind . -type f | grep -v "media" | sed \'s|\\(.*/\\)[^A-Z]*\\([A-Z].*\\)|mv \\"&\\" \\"\\1\\2\\"|\' | sh\n\n'})}),"\n",(0,i.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Shell_script",children:"https://en.wikipedia.org/wiki/Shell_script"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.shellscript.sh",children:"https://www.shellscript.sh"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.shellscript.sh/loops.html",children:"https://www.shellscript.sh/loops.html"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.interviewbit.com/shell-scripting-interview-questions/",children:"Top Shell Scripting Interview Questions (2024) - InterviewBit"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.simplilearn.com/shell-scripting-interview-questions-article",children:"Top 30 Shell Scripting Interview Questions And Answers for 2023"})}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},511151:(e,n,s)=>{s.d(n,{Z:()=>l,a:()=>a});var i=s(667294);const r={},t=i.createContext(r);function a(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);