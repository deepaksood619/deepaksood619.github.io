"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[80013],{87455:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"languages/others/general","title":"General","description":"Domain Specific Languages (DSLs)","source":"@site/docs/languages/others/general.md","sourceDirName":"languages/others","slug":"/languages/others/general","permalink":"/languages/others/general","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/languages/others/general.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1706625040000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Erlang","permalink":"/languages/others/erlang"},"next":{"title":"JavaScript Templating","permalink":"/languages/others/javascript-templating"}}');var s=n(474848),t=n(28453);const r={},l="General",o={},c=[{value:"Domain Specific Languages (DSLs)",id:"domain-specific-languages-dsls",level:2},{value:"Channels",id:"channels",level:2},{value:"1. Buffered",id:"1-buffered",level:3},{value:"2. Unbuffered",id:"2-unbuffered",level:3},{value:"Python vs C++",id:"python-vs-c",level:2},{value:"Performance node php java go",id:"performance-node-php-java-go",level:2},{value:"Benchmarks",id:"benchmarks",level:2},{value:"Selecting a language",id:"selecting-a-language",level:2}];function d(e){const a={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.header,{children:(0,s.jsx)(a.h1,{id:"general",children:"General"})}),"\n",(0,s.jsx)(a.h2,{id:"domain-specific-languages-dsls",children:"Domain Specific Languages (DSLs)"}),"\n",(0,s.jsx)(a.p,{children:'A domain-specific language (DSL) is a computer language specialised to a particular application domain. This is in contrast to a general-purpose language (GPL), which is broadly applicable across domains. There are a wide variety of DSLs, ranging from widely used languages for common domains, such as HTML for web pages, down to languages used by only one or a few pieces of software, such as MUSH soft code. DSLs can be further subdivided by the kind of language, and include domain-specific markup languages, domain-specific modeling languages (more generally, specification languages), and domain-specific programming languages. Special-purpose computer languages have always existed in the computer age, but the term "domain-specific language" has become more popular due to the rise of domain-specific modeling. Simpler DSLs, particularly ones used by a single application, are sometimes informally called mini-languages.'}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.a,{href:"https://en.wikipedia.org/wiki/Domain-specific_language",children:"https://en.wikipedia.org/wiki/Domain-specific_language"})}),"\n",(0,s.jsx)(a.h2,{id:"channels",children:"Channels"}),"\n",(0,s.jsx)(a.p,{children:"Channels are data-race safe communication primitives. The operations set is trivial: atomic write/read. The main purpose is to keep the code free from data races and easy to maintain."}),"\n",(0,s.jsx)(a.p,{children:"In the most popular channel implementation libraries, there are two varieties (or modes) of channels available"}),"\n",(0,s.jsx)(a.h3,{id:"1-buffered",children:"1. Buffered"}),"\n",(0,s.jsx)(a.p,{children:"Global data flow is async. Tasks are processed independently with some probability of data flow delays, missing data, and logic/events collision."}),"\n",(0,s.jsx)(a.h3,{id:"2-unbuffered",children:"2. Unbuffered"}),"\n",(0,s.jsx)(a.p,{children:"Global data flow is strictly synchronous, even if there are several independent processors."}),"\n",(0,s.jsx)(a.p,{children:"The difference between them is that buffered channels can be pulled with the data, even without a coroutine waiting for it. Unbuffered channels, on the contrary, can't be written into until some other coroutine is expecting some data from it."}),"\n",(0,s.jsx)(a.h2,{id:"python-vs-c",children:"Python vs C++"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.a,{href:"https://realpython.com/python-vs-cpp",children:"https://realpython.com/python-vs-cpp"})}),"\n",(0,s.jsx)(a.h2,{id:"performance-node-php-java-go",children:"Performance node php java go"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.a,{href:"https://www.toptal.com/back-end/server-side-io-performance-node-php-java-go",children:"https://www.toptal.com/back-end/server-side-io-performance-node-php-java-go"})}),"\n",(0,s.jsx)(a.h2,{id:"benchmarks",children:"Benchmarks"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.a,{href:"https://benchmarksgame-team.pages.debian.net/benchmarksgame/index.html",children:"https://benchmarksgame-team.pages.debian.net/benchmarksgame/index.html"})}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.a,{href:"https://thenewstack.io/which-programming-languages-use-the-least-electricity/",children:"Which Programming Languages Use the Least Electricity? - The New Stack"})}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{alt:"Which Programming Languages Use the Least Electricity",src:n(570994).A+"",width:"639",height:"715"})}),"\n",(0,s.jsx)(a.h2,{id:"selecting-a-language",children:"Selecting a language"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"Time"}),"\n",(0,s.jsx)(a.li,{children:"Skill"}),"\n",(0,s.jsx)(a.li,{children:"Available resources"}),"\n"]})]})}function h(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},570994:(e,a,n)=>{n.d(a,{A:()=>i});const i=n.p+"assets/images/Pasted image 20240123233508-df3e79f6830a4716e89157ce711faf9e.png"},28453:(e,a,n)=>{n.d(a,{R:()=>r,x:()=>l});var i=n(296540);const s={},t=i.createContext(s);function r(e){const a=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(t.Provider,{value:a},e.children)}}}]);