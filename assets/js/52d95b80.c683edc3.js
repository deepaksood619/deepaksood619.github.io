"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[80226],{88181:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>m,frontMatter:()=>s,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"computer-science/programming-concepts/inversion-of-control","title":"Inversion of Control","description":"In software engineering, inversion of control(IoC) is a design principle in which custom-written portions of a computer program receive the flow of control from a generic framework. A software architecture with this design inverts control as compared to traditional procedural programming: in traditional programming, the custom code that expresses the purpose of the program calls into reusable libraries to take care of generic tasks, but with inversion of control, it is the framework that calls into the custom, or task-specific, code.","source":"@site/docs/computer-science/programming-concepts/inversion-of-control.md","sourceDirName":"computer-science/programming-concepts","slug":"/computer-science/programming-concepts/inversion-of-control","permalink":"/computer-science/programming-concepts/inversion-of-control","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/computer-science/programming-concepts/inversion-of-control.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1722285222000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Dependency Injection","permalink":"/computer-science/programming-concepts/dependency-injection"},"next":{"title":"Marshalling","permalink":"/computer-science/programming-concepts/marshalling"}}');var t=o(474848),i=o(28453);const s={},c="Inversion of Control",a={},p=[{value:"Links",id:"links",level:2}];function l(e){const n={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"inversion-of-control",children:"Inversion of Control"})}),"\n",(0,t.jsxs)(n.p,{children:["In ",(0,t.jsx)(n.a,{href:"https://en.m.wikipedia.org/wiki/Software_engineering",children:"software engineering"}),", inversion of control(IoC) is a design principle in which custom-written portions of a ",(0,t.jsx)(n.a,{href:"https://en.m.wikipedia.org/wiki/Computer_program",children:"computer program"})," receive the ",(0,t.jsx)(n.a,{href:"https://en.m.wikipedia.org/wiki/Control_flow",children:"flow of control"})," from a generic ",(0,t.jsx)(n.a,{href:"https://en.m.wikipedia.org/wiki/Software_framework",children:"framework"}),". A ",(0,t.jsx)(n.a,{href:"https://en.m.wikipedia.org/wiki/Software_architecture",children:"software architecture"})," with this design inverts control as compared to traditional ",(0,t.jsx)(n.a,{href:"https://en.m.wikipedia.org/wiki/Procedural_programming",children:"procedural programming"}),": in traditional programming, the custom code that expresses the purpose of the program ",(0,t.jsx)(n.a,{href:"https://en.m.wikipedia.org/wiki/Function_call#Main_concepts",children:"calls"})," into reusable libraries to take care of generic tasks, but with inversion of control, it is the framework that calls into the custom, or task-specific, code.\nThe general concept is also related to ",(0,t.jsx)(n.a,{href:"https://en.m.wikipedia.org/wiki/Event-driven_programming",children:"event-driven programming"})," in that it is often implemented using IoC, so that the custom code is commonly only concerned with the handling of events, whereas the ",(0,t.jsx)(n.a,{href:"https://en.m.wikipedia.org/wiki/Event_loop",children:"event loop"})," and dispatch of events/messages is handled by the framework or the runtime environment."]}),"\n",(0,t.jsx)(n.h2,{id:"links",children:"Links"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/computer-science/programming-concepts/dependency-injection",children:"Dependency Injection"})}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>c});var r=o(296540);const t={},i=r.createContext(t);function s(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);