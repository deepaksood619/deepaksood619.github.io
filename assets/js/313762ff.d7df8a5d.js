"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[49685],{942010:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>m});const o=JSON.parse('{"id":"technologies/kafka/kafka-rest-proxy","title":"kafka-rest proxy","description":"Kafka-connect","source":"@site/docs/technologies/kafka/kafka-rest-proxy.md","sourceDirName":"technologies/kafka","slug":"/technologies/kafka/kafka-rest-proxy","permalink":"/technologies/kafka/kafka-rest-proxy","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/technologies/kafka/kafka-rest-proxy.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1701793554000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"kafka-python","permalink":"/technologies/kafka/kafka-python"},"next":{"title":"Kafka schema-registry","permalink":"/technologies/kafka/kafka-schema-registry"}}');var c=n(474848),a=n(28453);const s={},r="kafka-rest proxy",l={},m=[{value:"Kafka-connect",id:"kafka-connect",level:2}];function i(t){const e={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,a.R)(),...t.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(e.header,{children:(0,c.jsx)(e.h1,{id:"kafka-rest-proxy",children:"kafka-rest proxy"})}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-bash",children:"curl -s -X GET http://104.211.229.18:8082/topics\n\ncurl -s -X GET http://104.211.229.18:8082/topics\n"})}),"\n",(0,c.jsx)(e.h2,{id:"kafka-connect",children:"Kafka-connect"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-bash",children:'curl -s -X GET http://kafka-connect:8082/connectors\n\ncurl -s -X GET http://kafka-connect:8082/connector-plugins\n\ncurl -s -X POST -H "Content-Type: application/json" --data \'{"name": "smap-mqtt-source-lenses", "config": {"connector.class": "com.datamountaineer.streamreactor.connect.mqtt.source.MqttSourceConnector", "tasks.max":"1", "connect.mqtt.hosts":"tcp://**104.211.220.105:1883**", "connect.mqtt.username":"example_mqtt_client", "connect.mqtt.password":"xitanez123", "connect.mqtt.service.quality":"1", "connect.mqtt.kcql":"**INSERT INTO smap_telemetry_data SELECT * FROM** telemetry**/+/+ WITHCONVERTER=`**com.datamountaineer.streamreactor.connect.converters.source.BytesConverter**`**"}}\' http://localhost:8083/connectors\n\ncurl -s -X POST -H "Content-Type: application/json" --data \'{"name": "smap-mqtt-source-lenses-test", "config": {"connector.class": "com.datamountaineer.streamreactor.connect.mqtt.source.MqttSourceConnector", "tasks.max":"1", "connect.mqtt.hosts":"tcp://**104.211.220.105:1883**", "connect.mqtt.username":"example_mqtt_client", "connect.mqtt.password":"xitanez123", "connect.mqtt.service.quality":"1", "connect.mqtt.kcql":"**INSERT INTO smap_telemetry_data_test SELECT * FROM /**telemetry_test**/+/+ WITHCONVERTER=`**com.datamountaineer.streamreactor.connect.converters.source.BytesConverter**`**"}}\' http://localhost:8083/connectors\n\ncurl -s -X POST -H "Content-Type: application/json" --data \'{"name": "smap-mqtt-source-lenses-test", "config": {"connector.class": "com.datamountaineer.streamreactor.connect.mqtt.source.MqttSourceConnector", "tasks.max":"1", "connect.mqtt.hosts":"tcp://**104.211.220.105:1883**", "connect.mqtt.username":"example_mqtt_client", "connect.mqtt.password":"xitanez123", "connect.mqtt.service.quality":"1", "connect.mqtt.kcql":"**INSERT INTO smap_telemetry_data_test SELECT * FROM /**telemetry_test**/+/+ WITHCONVERTER=`**com.datamountaineer.streamreactor.connect.converters.source.**JsonSimpleConverter`**"}}\' http://localhost:8083/connectors\n\ncurl -s -X GET http://localhost:8083/connectors\n\ncurl -s -X GET http://kafka.example.com:8083/connectors\n\ncurl -X DELETE http://localhost:8083/connectors/smap-mqtt-source-lenses\n\ncurl -X DELETE http://localhost:8083/connectors/smap-mqtt-source-lenses-test\n\n'})})]})}function p(t={}){const{wrapper:e}={...(0,a.R)(),...t.components};return e?(0,c.jsx)(e,{...t,children:(0,c.jsx)(i,{...t})}):i(t)}},28453:(t,e,n)=>{n.d(e,{R:()=>s,x:()=>r});var o=n(296540);const c={},a=o.createContext(c);function s(t){const e=o.useContext(a);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(c):t.components||c:s(t.components),o.createElement(a.Provider,{value:e},t.children)}}}]);