"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[57396],{553922:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>h});var n=i(785893),a=i(511151);const o={},s="Finite-State Machine",r={id:"algorithms/algorithmic-complexity/finite-state-machine",title:"Finite-State Machine",description:"DFA - Deterministic Finite Automata",source:"@site/docs/algorithms/algorithmic-complexity/finite-state-machine.md",sourceDirName:"algorithms/algorithmic-complexity",slug:"/algorithms/algorithmic-complexity/finite-state-machine",permalink:"/algorithms/algorithmic-complexity/finite-state-machine",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/algorithms/algorithmic-complexity/finite-state-machine.md",tags:[],version:"current",lastUpdatedAt:1701793554,formattedLastUpdatedAt:"Dec 5, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Computational Complexity Theory",permalink:"/algorithms/algorithmic-complexity/computational-complexity-theory"},next:{title:"Halting Problem",permalink:"/algorithms/algorithmic-complexity/halting-problem"}},c={},h=[];function m(e){const t={a:"a",em:"em",h1:"h1",img:"img",p:"p",...(0,a.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"finite-state-machine",children:"Finite-State Machine"}),"\n",(0,n.jsx)(t.p,{children:"DFA - Deterministic Finite Automata"}),"\n",(0,n.jsx)(t.p,{children:"NFA - Non-deterministic Finite Automata"}),"\n",(0,n.jsxs)(t.p,{children:["Use ",(0,n.jsx)(t.em,{children:"e (epsilon)"})," transition to get to next state"]}),"\n",(0,n.jsxs)(t.p,{children:["Afinite-state machine(FSM) orfinite-state automaton(FSA, plural",":automata","), finite automaton, or simply astate machine, is a mathematical ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Model_of_computation",children:"model of computation"}),". It is an ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Abstract_machine",children:"abstract machine"})," that can be in exactly one of a finite number of ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/State_(computer_science)",children:"states"})," at any given time. The FSM can change from one state to another in response to some external ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Input_(computer_science)",children:"inputs"}),"; the change from one state to another is called atransition. An FSM is defined by a list of its states, its initial state, and the conditions for each transition. Finite state machines are of two types --",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Deterministic_finite_automaton",children:"deterministic finite state machines"})," and ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Nondeterministic_finite_automaton",children:"non-deterministic finite state machines"}),".A deterministic finite-state machine can be constructed equivalent to any non-deterministic one."]}),"\n",(0,n.jsxs)(t.p,{children:["The behavior of state machines can be observed in many devices in modern society that perform a predetermined sequence of actions depending on a sequence of events with which they are presented. Simple examples are ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Vending_machine",children:"vending machines"}),", which dispense products when the proper combination of coins is deposited, ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Elevator",children:"elevators"}),", whose sequence of stops is determined by the floors requested by riders, ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Traffic_light",children:"traffic lights"}),", which change sequence when cars are waiting, and ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Combination_lock",children:"combination locks"}),", which require the input of a sequence of numbers in the proper order."]}),"\n",(0,n.jsxs)(t.p,{children:["The finite state machine has less computational power than some other models of computation such as the ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Turing_machine",children:"Turing machine"}),".The computational power distinction means there are computational tasks that a Turing machine can do but a FSM cannot. This is because a FSM's ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Computer_memory",children:"memory"})," is limited by the number of states it has. FSMs are studied in the more general field of ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Automata_theory",children:"automata theory"}),"."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"image",src:i(554947).Z+"",width:"300",height:"225"})}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Finite-state_machine",children:"https://en.wikipedia.org/wiki/Finite-state_machine"})})]})}function d(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}},554947:(e,t,i)=>{i.d(t,{Z:()=>n});const n=i.p+"assets/images/Finite-State-Machine-image1-e55f922784601709fabde7f8f9418a36.jpg"},511151:(e,t,i)=>{i.d(t,{Z:()=>r,a:()=>s});var n=i(667294);const a={},o=n.createContext(a);function s(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);