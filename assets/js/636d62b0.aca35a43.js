"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[31098],{224710:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"frontend/react/code-commands-snippets","title":"Code / Commands / Snippets","description":"dependencies are the packages your project depends on","source":"@site/docs/frontend/react/code-commands-snippets.md","sourceDirName":"frontend/react","slug":"/frontend/react/code-commands-snippets","permalink":"/frontend/react/code-commands-snippets","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/frontend/react/code-commands-snippets.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1700454012000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"React","permalink":"/frontend/react/"},"next":{"title":"Components","permalink":"/frontend/react/components"}}');var r=t(474848),o=t(28453);const a={},i="Code / Commands / Snippets",l={},c=[{value:"Commands",id:"commands",level:2},{value:"Code Snippets",id:"code-snippets",level:2},{value:"Toggle",id:"toggle",level:2},{value:"Digital Clock",id:"digital-clock",level:2},{value:"Login / Logout",id:"login--logout",level:2},{value:"blog",id:"blog",level:2},{value:"name form",id:"name-form",level:2},{value:"temperature change fahrenheit to celsius",id:"temperature-change-fahrenheit-to-celsius",level:2},{value:"Filterable list",id:"filterable-list",level:2},{value:"todo app",id:"todo-app",level:2}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"code--commands--snippets",children:"Code / Commands / Snippets"})}),"\n",(0,r.jsx)(e.p,{children:"dependencies are the packages your project depends on"}),"\n",(0,r.jsxs)(e.p,{children:["devDependencies are the packages that are needed during the development phase. Say a testing framework like ",(0,r.jsx)(e.a,{href:"https://flaviocopes.com/jest/",children:"Jest"})," or other utilities like ",(0,r.jsx)(e.a,{href:"https://flaviocopes.com/babel/",children:"Babel"})," or ",(0,r.jsx)(e.a,{href:"https://flaviocopes.com/eslint/",children:"ESLint"})]}),"\n",(0,r.jsxs)(e.p,{children:["In both cases, when you install a package, its dependencies and devDependencies are automatically installed by ",(0,r.jsx)(e.a,{href:"https://flaviocopes.com/npm/",children:"npm"}),"."]}),"\n",(0,r.jsx)(e.p,{children:"peerDependencies are different. They are not automatically installed"}),"\n",(0,r.jsx)(e.p,{children:"When a dependency is listed in a package as a peerDependency, it is not automatically installed. Instead, the code that includes the package must include it as its dependency."}),"\n",(0,r.jsx)(e.h2,{id:"commands",children:"Commands"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"npx create-react-app my-app\nnpx create-react-app react-shopping-cart --template typescript\n\nnpm i @material-ui/core @material-ui/icons\nnpm i react-query\nnpm i styled-components @types/styled-components\n\nyarn add react-admin ra-data-json-server prop-types\n\nnpm start - http://localhost:3000\n    Starts the development server.\n\n    npm run build\n    Bundles the app into static files for production.\n    npm install -g serve\n        serve -s build\n\n    https://reactjs.org/docs/optimizing-performance.html\n\n    npm test\n    Starts the test runner.\n\n    npm run eject\n    Removes this tool and copies build dependencies, configuration files and scripts into the app directory. If you do this, you can\u2019t go back!\n\n    yarn install\n    yarn install --prod\n    yarn install --production --frozen-lockfile\n    yarn cache clean\n\n    yarn start\n    Starts the development server.\n\n    yarn build\n    Bundles the app into static files for production.\n\n    yarn test\n    Starts the test runner.\n\n    yarn eject\n    Removes this tool and copies build dependencies, configuration files\n    and scripts into the app directory. If you do this, you can\u2019t go back!\n\nyarn add -D babel-eslint eslint eslint-config-airbnb eslint-config-prettier eslint-plugin-react eslint-plugin-import prettier pretty-quick\n\nnpm install --global prettier\nprettier --write .\n\nnpm install -g depcheck\ndepcheck\n\nyarn upgrade-interactive --latest\n\nnpx unimported\nnpx eslint . --fix\n\nhttps://create-react-app.dev/docs/analyzing-the-bundle-size/\n    Source map explorer analyzes JavaScript bundles using the source maps. This helps you understand where code bloat is coming from.\n\n    yarn add source-map-explorer\n    yarn build\n    yarn analyze\n"})}),"\n",(0,r.jsx)(e.h2,{id:"code-snippets",children:"Code Snippets"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-js",children:"const Example = (props) => {\n    // You can use Hooks here!\n    return <div />;\n}\n\nfunction Example(props) {\n    // You can use Hooks here!\n    return <div />;\n}\n"})}),"\n",(0,r.jsx)(e.h2,{id:"toggle",children:"Toggle"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-js",children:"class Toggle extends React.Component {\n    constructor(props) {\n    super(props);\n    this.state = {isToggleOn: true};\n    // This binding is necessary to make `this` work in the callback\n    this.handleClick = this.handleClick.bind(this);\n    }\n    handleClick() {\n    this.setState(prevState => ({\n        isToggleOn: !prevState.isToggleOn\n    }));\n    }\n    render() {\n    return (\n        <button onClick={this.handleClick}>\n        {this.state.isToggleOn ? 'ON' : 'OFF'}\n        </button>\n    );\n    }\n}\nReactDOM.render(\n    <Toggle />,\n    document.getElementById('root')\n);\n"})}),"\n",(0,r.jsx)(e.h2,{id:"digital-clock",children:"Digital Clock"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-js",children:"class Clock extends React.Component {\n    constructor(props) {\n    super(props);\n    this.state = {date: new Date()};\n    }\n    componentDidMount() {\n    this.timerID = setInterval(\n        () => this.tick(),\n        1000\n    );\n    }\n    componentWillUnmount() {\n    clearInterval(this.timerID);\n    }\n    tick() {\n    this.setState({\n        date: new Date()\n    });\n    }\n    render() {\n    return (\n        <div>\n        <h1>Hello, world!</h1>\n        <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\n        </div>\n    );\n    }\n}\nfunction Clocks() {\n    return (\n    <div>\n        <Clock/>\n        <Clock/>\n        <Clock/>\n    </div>\n    );\n}\nReactDOM.render(\n    <Clocks />,\n    document.getElementById('root')\n);\n"})}),"\n",(0,r.jsx)(e.h2,{id:"login--logout",children:"Login / Logout"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-js",children:"function UserGreeting(props) {\n    return <h1>Welcome back!</h1>\n}\nfunction GuestGreeting(props) {\n    return <h1>Please sign up!</h1>\n}\n\nfunction Greeting(props) {\n    const isLoggedIn = props.isLoggedIn;\n    if (isLoggedIn) {\n    return <UserGreeting />;\n    }\n    return <GuestGreeting />;\n}\nfunction LoginButton(props) {\n    return (\n    <button onClick={props.onClick}>\n        Login\n    </button>\n    );\n}\nfunction LogoutButton(props) {\n    return (\n    <button onClick={props.onClick}>\n        Logout\n    </button>\n    );\n}\nclass LoginControl extends React.Component {\n    constructor(props) {\n    super(props);\n    this.handleLoginClick = this.handleLoginClick.bind(this);\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\n    this.state = {isLoggedIn: false};\n    }\n    handleLoginClick() {\n    this.setState({isLoggedIn: true});\n    }\n    handleLogoutClick() {\n    this.setState({isLoggedIn: false});\n    }\n    render() {\n    const isLoggedIn = this.state.isLoggedIn;\n    let button;\n    if (isLoggedIn) {\n        button = <LogoutButton onClick={this.handleLogoutClick} />;\n    } else {\n        button = <LoginButton onClick={this.handleLoginClick} />;\n    }\n    return (\n        <div>\n        <Greeting isLoggedIn={isLoggedIn} />\n        {button}\n        </div>\n    );\n    }\n}\nReactDOM.render(\n    <LoginControl />,\n    document.getElementById('root')\n);\n"})}),"\n",(0,r.jsx)(e.h2,{id:"blog",children:"blog"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-js",children:"function Blog(props) {\n    const sidebar = (\n    <ul>\n        {props.posts.map((post) =>\n        <li key={post.id}>\n            {post.title}\n        </li>\n        )}\n    </ul>\n    );\n    const content = props.posts.map((post) =>\n    <div key={post.id}>\n        <h3>{post.title}</h3>\n        <p>{post.content}</p>\n    </div>\n    );\n    return (\n    <div>\n        {sidebar}\n        <hr />\n        {content}\n    </div>\n    );\n}\nconst posts = [\n    {id: 1, title: 'Hello World', content: 'Welcome to learning React!'},\n    {id: 2, title: 'Installation', content: 'You can install React from npm.'}\n];\nReactDOM.render(\n    <Blog posts={posts} />,\n    document.getElementById('root')\n);\n"})}),"\n",(0,r.jsx)(e.h2,{id:"name-form",children:"name form"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-js",children:"class NameForm extends React.Component {\n    constructor(props) {\n    super(props);\n    this.state = {value: ''};\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleChange(event) {\n    this.setState({value: event.target.value});\n    }\n    handleSubmit(event) {\n    alert('A name was submitted: ' + this.state.value);\n    event.preventDefault();\n    }\n    render() {\n    return (\n        <form onSubmit={this.handleSubmit}>\n        <label>\n            Name:\n            <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n        </form>\n    );\n    }\n}\nReactDOM.render(\n    <NameForm />,\n    document.getElementById('root')\n);\n"})}),"\n",(0,r.jsx)(e.h2,{id:"temperature-change-fahrenheit-to-celsius",children:"temperature change fahrenheit to celsius"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-js",children:'const scaleNames = {\n    c: "Celsius",\n    f: "Fahrenheit",\n};\nfunction toCelsius(fahrenheit) {\n    return ((fahrenheit - 32) * 5) / 9;\n}\nfunction toFahrenheit(celsius) {\n    return (celsius * 9) / 5 + 32;\n}\nfunction tryConvert(temperature, convert) {\n    const input = parseFloat(temperature);\n    if (Number.isNaN(input)) {\n    return "";\n    }\n    const output = convert(input);\n    const rounded = Math.round(output * 1000) / 1000;\n    return rounded.toString();\n}\nfunction BoilingVerdict(props) {\n    if (props.celsius >= 100) {\n    return <p>The water would boil.</p>;\n    }\n    return <p>The water would not boil.</p>;\n}\nclass TemperatureInput extends React.Component {\n    constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = { temperature: "" };\n    }\n    handleChange(e) {\n    // this.setState({temperature: e.target.value});\n    this.props.onTemperatureChange(e.target.value);\n    }\n    render() {\n    // const temperature = this.state.temperature;\n    const temperature = this.props.temperature;\n    const scale = this.props.scale;\n    return (\n        <fieldset style={{ padding: "3px 20px" }}>\n        <legend>Enter temperature in {scaleNames [scale]}:</legend>\n        <input\n            style={{ margin: ".4rem" }}\n            value={temperature}\n            onChange={this.handleChange}\n        />\n        </fieldset>\n    );\n    }\n}\nclass Calculator extends React.Component {\n    constructor(props) {\n    super(props);\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n    this.state = { temperature: "", scale: "c" };\n    }\n    handleCelsiusChange(temperature) {\n    this.setState({ scale: "c", temperature });\n    }\n    handleFahrenheitChange(temperature) {\n    this.setState({ scale: "f", temperature });\n    }\n    render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius =\n        scale === "f" ? tryConvert(temperature, toCelsius) : temperature;\n    const fahrenheit =\n        scale === "c" ? tryConvert(temperature, toFahrenheit) : temperature;\n    return (\n        <div>\n        <TemperatureInput\n            scale="c"\n            temperature={celsius}\n            onTemperatureChange={this.handleCelsiusChange}\n        />\n        <TemperatureInput\n            scale="f"\n            temperature={fahrenheit}\n            onTemperatureChange={this.handleFahrenheitChange}\n        />\n        <BoilingVerdict celsius={parseFloat(celsius)} />\n        </div>\n    );\n    }\n}\nReactDOM.render(<Calculator />, document.getElementById("root"));\n'})}),"\n",(0,r.jsx)(e.h2,{id:"filterable-list",children:"Filterable list"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-js",children:"class ProductCategoryRow extends React.Component {\n    render() {\n    const category = this.props.category;\n    return (\n        <tr>\n        <th colSpan=\"2\">\n            {category}\n        </th>\n        </tr>\n    );\n    }\n}\nclass ProductRow extends React.Component {\n    render() {\n    const product = this.props.product;\n    const name = product.stocked ?\n        product.name :\n        <span style={{color: 'red'}}>\n        {product.name}\n        </span>;\n    return (\n        <tr>\n        <td>{name}</td>\n        <td>{product.price}</td>\n        </tr>\n    );\n    }\n}\nclass ProductTable extends React.Component {\n    render() {\n    const filterText = this.props.filterText;\n    const inStockOnly = this.props.inStockOnly;\n    const rows = [];\n    let lastCategory = null;\n    this.props.products.forEach((product) => {\n        if (product.name.indexOf(filterText) === -1) {\n        return;\n        }\n        if (inStockOnly && !product.stocked) {\n        return;\n        }\n        if (product.category !== lastCategory) {\n        rows.push(\n            <ProductCategoryRow\n            category={product.category}\n            key={product.category} />\n        );\n        }\n        rows.push(\n        <ProductRow\n            product={product}\n            key={product.name}\n        />\n        );\n        lastCategory = product.category;\n    });\n    return (\n        <table>\n        <thead>\n            <tr>\n            <th>Name</th>\n            <th>Price</th>\n            </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n        </table>\n    );\n    }\n}\nclass SearchBar extends React.Component {\n    constructor(props) {\n    super(props);\n    this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\n    this.handleInStockChange = this.handleInStockChange.bind(this);\n    }\n\n    handleFilterTextChange(e) {\n    this.props.onFilterTextChange(e.target.value);\n    }\n\n    handleInStockChange(e) {\n    this.props.onInStockChange(e.target.checked);\n    }\n\n    render() {\n    return (\n        <form>\n        <input\n            type=\"text\"\n            placeholder=\"Search...\"\n            value={this.props.filterText}\n            onChange={this.handleFilterTextChange}\n        />\n        <p>\n            <input\n            type=\"checkbox\"\n            checked={this.props.inStockOnly}\n            onChange={this.handleInStockChange}\n            />\n            {' '}\n            Only show products in stock\n        </p>\n        </form>\n    );\n    }\n}\nclass FilterableProductTable extends React.Component {\n    constructor(props) {\n    super(props);\n    this.state = {\n        filterText: '',\n        inStockOnly: false\n    };\n\n    this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\n    this.handleInStockChange = this.handleInStockChange.bind(this);\n    }\n    handleFilterTextChange(filterText) {\n    this.setState({\n        filterText: filterText\n    });\n    }\n\n    handleInStockChange(inStockOnly) {\n    this.setState({\n        inStockOnly: inStockOnly\n    })\n    }\n    render() {\n    return (\n        <div>\n        <SearchBar\n            filterText={this.state.filterText}\n            inStockOnly={this.state.inStockOnly}\n            onFilterTextChange={this.handleFilterTextChange}\n            onInStockChange={this.handleInStockChange}\n        />\n        <ProductTable\n            products={this.props.products}\n            filterText={this.state.filterText}\n            inStockOnly={this.state.inStockOnly}\n        />\n        </div>\n    );\n    }\n}\n\nconst PRODUCTS = [\n    {category: 'Sporting Goods', price: '$49.99', stocked: true, name: 'Football'},\n    {category: 'Sporting Goods', price: '$9.99', stocked: true, name: 'Baseball'},\n    {category: 'Sporting Goods', price: '$29.99', stocked: false, name: 'Basketball'},\n    {category: 'Electronics', price: '$99.99', stocked: true, name: 'iPod Touch'},\n    {category: 'Electronics', price: '$399.99', stocked: false, name: 'iPhone 5'},\n    {category: 'Electronics', price: '$199.99', stocked: true, name: 'Nexus 7'}\n];\nReactDOM.render(\n    <FilterableProductTable products={PRODUCTS} />,\n    document.getElementById('root')\n);\n"})}),"\n",(0,r.jsx)(e.h2,{id:"todo-app",children:"todo app"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:"https://www.youtube.com/watch?v=hQAHSlTtcmY",children:"Learn React In 30 Minutes"})})]})}function p(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>i});var s=t(296540);const r={},o=s.createContext(r);function a(n){const e=s.useContext(o);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:a(n.components),s.createElement(o.Provider,{value:e},n.children)}}}]);