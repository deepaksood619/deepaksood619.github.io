"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[90669],{399541:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>i,contentTitle:()=>r,default:()=>E,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"languages/sql/dcl-data-control-language","title":"DCL - Data Control Language","description":"Data Control Language (DCL) / Data Management Language (DML)","source":"@site/docs/languages/sql/dcl-data-control-language.md","sourceDirName":"languages/sql","slug":"/languages/sql/dcl-data-control-language","permalink":"/languages/sql/dcl-data-control-language","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/languages/sql/dcl-data-control-language.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1715698265000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Databricks SQL","permalink":"/languages/sql/databricks-sql"},"next":{"title":"DDL - Data Definition Language","permalink":"/languages/sql/ddl-data-definition-language/"}}');var t=a(474848),o=a(28453);const l={},r="DCL - Data Control Language",i={},c=[{value:"Data Control Language (DCL) / Data Management Language (DML)",id:"data-control-language-dcl--data-management-language-dml",level:2},{value:"Grant",id:"grant",level:2},{value:"Revoke",id:"revoke",level:2},{value:"Postgres Grant Command",id:"postgres-grant-command",level:3},{value:"Processes",id:"processes",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"dcl---data-control-language",children:"DCL - Data Control Language"})}),"\n",(0,t.jsx)(n.h2,{id:"data-control-language-dcl--data-management-language-dml",children:"Data Control Language (DCL) / Data Management Language (DML)"}),"\n",(0,t.jsx)(n.h2,{id:"grant",children:"Grant"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"show grants for 'raghwendra_sarkar';\n\nGRANT SELECT, SHOW VIEW\nON mydatabase.*\nTO myreaduser@myhost IDENTIFIED BY 'somepassword';\nFLUSH PRIVILEGES;\n\nCREATE USER 'app_kollectai'@'%' IDENTIFIED BY '7dd69a6ca8854def9bf99b71';\n\nFLUSH PRIVILEGES;\n\nGRANT SELECT,UPDATE,INSERT ON sttash_website_LIVE.temp_invoice TO 'nauman_mansuri'@'%';\n\nGRANT SELECT on ts_web_contact_us TO ashish_kumar;\n\nNote that the FLUSH PRIVILEGES command resets MySQLs privileges and you won\u2019t be able to use the new user grants until it is run.\n\nNow we can log in as the new user and run show tables to see that it only has access to the trips table and not the other two. This new user simply doesn\u2019t know the other tables even exist.\n\nhttps://chartio.com/resources/tutorials/mysql-table-level-permissions/\n\nGRANT LOAD FROM S3 ON *.* TO 'deepak_sood'@'%'\nGRANT SELECT,SHOW VIEW,execute ON sttash_website_LIVE.* TO 'deepak_sood'@'%'\n\nGRANT SELECT,UPDATE,INSERT,SHOW VIEW ON sttash_website_LIVE.st_collection_lead_assign TO 'test'@'%';\nGRANT SELECT ON sttash_website_LIVE.elev8_offer_tmp_clicked TO 'test'@'%';\n"})}),"\n",(0,t.jsx)(n.h2,{id:"revoke",children:"Revoke"}),"\n",(0,t.jsx)(n.h3,{id:"postgres-grant-command",children:"Postgres Grant Command"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:" GRANT { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }\n    [, ...] | ALL [ PRIVILEGES ] }\n    ON { [ TABLE ] table_name [, ...]\n         | ALL TABLES IN SCHEMA schema_name [, ...] }\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\n GRANT { { SELECT | INSERT | UPDATE | REFERENCES } ( column_name [, ...] )\n    [, ...] | ALL [ PRIVILEGES ] ( column_name [, ...] ) }\n    ON [ TABLE ] table_name [, ...]\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\n GRANT { { USAGE | SELECT | UPDATE }\n    [, ...] | ALL [ PRIVILEGES ] }\n    ON { SEQUENCE sequence_name [, ...]\n         | ALL SEQUENCES IN SCHEMA schema_name [, ...] }\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\n GRANT { { CREATE | CONNECT | TEMPORARY | TEMP } [, ...] | ALL [ PRIVILEGES ] }\n    ON DATABASE database_name [, ...]\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\n GRANT { USAGE | ALL [ PRIVILEGES ] }\n    ON DOMAIN domain_name [, ...]\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\n GRANT { USAGE | ALL [ PRIVILEGES ] }\n    ON FOREIGN DATA WRAPPER fdw_name [, ...]\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\n GRANT { USAGE | ALL [ PRIVILEGES ] }\n    ON FOREIGN SERVER server_name [, ...]\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\n GRANT { EXECUTE | ALL [ PRIVILEGES ] }\n    ON { { FUNCTION | PROCEDURE | ROUTINE } routine_name [ ( [ [ argmode ] [ arg_name ] arg_type [, ...] ] ) ] [, ...]\n         | ALL { FUNCTIONS | PROCEDURES | ROUTINES } IN SCHEMA schema_name [, ...] }\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\n GRANT { USAGE | ALL [ PRIVILEGES ] }\n    ON LANGUAGE lang_name [, ...]\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\n GRANT { { SELECT | UPDATE } [, ...] | ALL [ PRIVILEGES ] }\n    ON LARGE OBJECT loid [, ...]\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\n GRANT { { CREATE | USAGE } [, ...] | ALL [ PRIVILEGES ] }\n    ON SCHEMA schema_name [, ...]\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\n GRANT { CREATE | ALL [ PRIVILEGES ] }\n    ON TABLESPACE tablespace_name [, ...]\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\n GRANT { USAGE | ALL [ PRIVILEGES ] }\n    ON TYPE type_name [, ...]\n    TO role_specification [, ...] [ WITH GRANT OPTION ]\n where role_specification can be:\n [ GROUP ] role_name\n  | PUBLIC\n  | CURRENT_USER\n  | SESSION_USER\n GRANT role_name [, ...] TO role_name [, ...] [ WITH ADMIN OPTION ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"The GRANT command has two basic variants: one that grants privileges on a database object (table, column, view, foreign table, sequence, database, foreign-data wrapper, foreign server, function, procedure, procedural language, schema, or tablespace), and one that grants membership in a role. These variants are similar in many ways, but they are different enough to be described separately."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"GRANT on Database Objects"}),"\n",(0,t.jsx)(n.li,{children:"GRANT on Roles"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://www.postgresql.org/docs/current/sql-grant.html",children:"https://www.postgresql.org/docs/current/sql-grant.html"})}),"\n",(0,t.jsx)(n.h2,{id:"processes",children:"Processes"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"show full processlist;\nshow processlist;\n\nkill 882461\n\n-- kill a thread in rds\nCALL mysql.rds_kill(882461);\n\nSELECT * FROM INFORMATION_SCHEMA.PROCESSLIST\n"})}),"\n",(0,t.jsx)(n.p,{children:"Mysql show processlist lists many processes sleep and info = null?"}),"\n",(0,t.jsx)(n.p,{children:"Those are idle connections being held by a client. You should make sure that whatever client library you are using (JDBC, ...) is configured to not keep unused connections open so long, or that your # clients * max # of connections isn't too big."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"# kill all processes from a single user\nselect concat('KILL ',id,';') from information_schema.processlist where user='user';\n\nkill <process_id>\n\nselect * from sys.user_summary_by_file_io;\n\nselect * from information_schema.innoDB_locks;\nselect * from information_schema.innodb_lock_waits;\n"})})]})}function E(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,a)=>{a.d(n,{R:()=>l,x:()=>r});var s=a(296540);const t={},o=s.createContext(t);function l(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);