"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[99749],{607791:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var a=t(785893),s=t(511151);const r={},i="Commands",o={id:"technologies/elasticsearch/commands",title:"Commands",description:"Monitoring",source:"@site/docs/technologies/elasticsearch/commands.md",sourceDirName:"technologies/elasticsearch",slug:"/technologies/elasticsearch/commands",permalink:"/technologies/elasticsearch/commands",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/technologies/elasticsearch/commands.md",tags:[],version:"current",lastUpdatedAt:1678191863,formattedLastUpdatedAt:"Mar 7, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Architecture",permalink:"/technologies/elasticsearch/architecture"},next:{title:"ElastAlert",permalink:"/technologies/elasticsearch/elastalert"}},c={},l=[{value:"Monitoring",id:"monitoring",level:2}];function m(n){const e={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h1,{id:"commands",children:"Commands"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'// List indices\nGET /_cat/indices?v\n\nPUT /megacorp/_doc/1\n{\n    "first_name" : "John",\n    "last_name" :  "Smith",\n    "age" :        25,\n    "about" :      "I love to go rock climbing",\n    "interests": [ "sports", "music" ]\n}\n\nGET /megacorp/employee/1\n\n// Retrieving part of a document\nGET /website/blog/123?_source=title,text\n\nDELETE /index_name\n\nDELETE /megacorp/employee/1\n\nGET /megacorp/_search\n\nGET /megacorp/_search?q=last_name:Smith\n\n// QueryDSL\nGET /megacorp/_search\n{\n    "query" : {\n        "match" : {\n            "last_name" : "Smith"\n        }\n    }\n}\n\nGET /megacorp/_search\n{\n    "query" : {\n        "bool" : {\n            "must" : {\n                "match" : {\n                    "last_name" : "smith"\n                 }\n            },\n            "filter" : {\n                "range" : {\n                    "age" : { "gt" : 30 }\n                 }\n            }\n        }\n    }\n}\n\n// Highlights\nGET /megacorp/_search\n{\n    "query" : {\n        "match_phrase" : {\n            "about" : "rock climbing"\n        }\n    },\n    "highlight": {\n        "fields" : {\n            "about" : {}\n        }\n    }\n}\n\n// Analytics - most popular interests enjoyed by employees\nGET /megacorp/_search\n{\n  "aggs": {\n    "all_interests": {\n      "terms": { "field": "interests" }\n    }\n  }\n}\n\n// Analytics - Popular interests of people called Smith\nGET /megacorp/_search\n{\n  "query": {\n    "match": {\n      "last_name": "smith"\n    }\n  },\n  "aggs": {\n    "all_interests": {\n      "terms": {\n        "field": "interests"\n      }\n    }\n  }\n}\n\n// Analytics - average age of employees who share a particular interest\nGET /megacorp/employee/_search\n{\n    "aggs" : {\n        "all_interests" : {\n            "terms" : { "field" : "interests" },\n            "aggs" : {\n                "avg_age" : {\n                    "avg" : { "field" : "age" }\n                }\n            }\n        }\n    }\n}\n\n// Creating an Index\nPUT /blogs\n{\n   "settings" : {\n      "number_of_shards" : 3,\n      "number_of_replicas" : 1\n   }\n}\n\n// Testing Analyzers\nGET /_analyze\n{\n  "analyzer": "standard",\n  "text": "Text to analyze"\n}\n\n// Viewing the Mapping\nGET /gb/_mapping/tweet\n\n// Aggregations\nGET /server_log-2019.09.25/_search\n{\n    "aggs" : {\n        "hosts" : {\n            "terms" : {\n                "field" : "tag.host"\n            },\n            "aggs" : {\n                "containers" : {\n                    "terms" : { "field" : "tag.container_name" }\n                }\n            }\n        }\n    }\n}\n'})}),"\n",(0,a.jsx)(e.h2,{id:"monitoring",children:"Monitoring"}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.code,{children:"GET /_cluster/health"})}),"\n",(0,a.jsx)(e.p,{children:"The status field provides an overall indication of how the cluster is functioning. The meanings of the three colors are provided here for reference:"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"green: All primary and replica shards are active."}),"\n",(0,a.jsx)(e.li,{children:"yellow: All primary shards are active, but not all replica shards are active."}),"\n",(0,a.jsx)(e.li,{children:"red: Not all primary shards are active."}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(m,{...n})}):m(n)}},511151:(n,e,t)=>{t.d(e,{Z:()=>o,a:()=>i});var a=t(667294);const s={},r=a.createContext(s);function i(n){const e=a.useContext(r);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:i(n.components),a.createElement(r.Provider,{value:e},n.children)}}}]);