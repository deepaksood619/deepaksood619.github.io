"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[42727],{866105:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"ai/big-data/design-of-key-value-stores","title":"Design of Key-Value Stores","description":"- We will discuss the design and insight of key-value/NoSQL stores for today\'s cloud storage systems.","source":"@site/docs/ai/big-data/design-of-key-value-stores.md","sourceDirName":"ai/big-data","slug":"/ai/big-data/design-of-key-value-stores","permalink":"/ai/big-data/design-of-key-value-stores","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/ai/big-data/design-of-key-value-stores.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1722285222000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Design of HBase","permalink":"/ai/big-data/design-of-hbase"},"next":{"title":"Design of Zookeeper","permalink":"/ai/big-data/design-of-zookeeper"}}');var t=s(474848),a=s(28453);const l={},r="Design of Key-Value Stores",o={},d=[{value:"The Key-Value Abstration",id:"the-key-value-abstration",level:2},{value:"Is it a kind of database?",id:"is-it-a-kind-of-database",level:2},{value:"Mismatch with today&#39;s workloads",id:"mismatch-with-todays-workloads",level:2},{value:"Needs of Today&#39;s Workloads",id:"needs-of-todays-workloads",level:2},{value:"Key-value / NoSQL Data Model",id:"key-value--nosql-data-model",level:2},{value:"Column-Oriented Storage",id:"column-oriented-storage",level:2},{value:"Links",id:"links",level:2}];function c(e){const n={a:"a",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"design-of-key-value-stores",children:"Design of Key-Value Stores"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"We will discuss the design and insight of key-value/NoSQL stores for today's cloud storage systems."}),"\n",(0,t.jsx)(n.li,{children:"We will also discuss Apache Cassandra and different consistency solutions"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"the-key-value-abstration",children:"The Key-Value Abstration"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"(Business) Key -> Value"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"(flipkart.com) item number -> information about it"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"(easemytrip.com) Flight number -> information about flight, e.g., availability"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"(twitter.com) tweet id -> information about tweet"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"(mybank.com) account number -> information about it"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"It's a dictionary datastructure"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Insert, lookup, and delete by key"}),"\n",(0,t.jsx)(n.li,{children:"Example: hash table, binary tree"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"But distributed"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Seems familiar? Remember ",(0,t.jsx)(n.strong,{children:"Distributed Hash Tables (DHT) in P2P systems"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Key-value stores reuse many techniques from DHTs"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"is-it-a-kind-of-database",children:"Is it a kind of database?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"RDMSs have been around for ages"}),"\n",(0,t.jsx)(n.li,{children:"MySQL is the most popular among them"}),"\n",(0,t.jsx)(n.li,{children:"Data stored in tables"}),"\n",(0,t.jsx)(n.li,{children:"Schema-based, i.e., structured tables"}),"\n",(0,t.jsx)(n.li,{children:"Each row (data item) in a table has a primary key that is unique within that table"}),"\n",(0,t.jsxs)(n.li,{children:["Queried using ",(0,t.jsx)(n.strong,{children:"SQL (Structured Query Language)"})]}),"\n",(0,t.jsx)(n.li,{children:"Supports joins"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"image",src:s(827799).A+"",width:"1000",height:"750"})}),"\n",(0,t.jsx)(n.h2,{id:"mismatch-with-todays-workloads",children:"Mismatch with today's workloads"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data: Large and unstructured:"})," Difficult to come out with schemas where the data can fit"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Lots of random reads and writes:"})," Coming from millions of clients"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Sometimes write-heavy:"})," Lot more writes compare to read"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Foreign keys rarely needed"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Joins infrequent"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"needs-of-todays-workloads",children:"Needs of Today's Workloads"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Speed (Lightning fast writes)"}),"\n",(0,t.jsx)(n.li,{children:"Avoid Single Point of Failuer (SPoF) (Fault tolerant)"}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Low TCO (Total cost of operation and Total cost of ownership)"})}),"\n",(0,t.jsx)(n.li,{children:"Fewer system administrators"}),"\n",(0,t.jsxs)(n.li,{children:["Incremental Scalability","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Adding more nodes adds linear capabilities"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Scale out, not scale up"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"key-value--nosql-data-model",children:"Key-value / NoSQL Data Model"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"NoSQL = Not Only SQL"}),"\n",(0,t.jsxs)(n.li,{children:["Necessaary API operations: get(key) and put(key, value)","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:'And some extended operations, e.g., "CQL" in Cassandra key-value store'}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Tables"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Column families"})," in Cassandra, ",(0,t.jsx)(n.strong,{children:"Table"})," in HBase, ",(0,t.jsx)(n.strong,{children:"Collection"})," in MongoDB"]}),"\n",(0,t.jsx)(n.li,{children:"Like RDBMS tables, but ..."}),"\n",(0,t.jsxs)(n.li,{children:["May be unstructured: May not have schemas","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Some columns may be missing from some rows"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Don't always support joins or have foreign keys"}),"\n",(0,t.jsx)(n.li,{children:"Can have index tables, just like RDBMSs"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"image",src:s(993576).A+"",width:"1000",height:"750"})}),"\n",(0,t.jsx)(n.h2,{id:"column-oriented-storage",children:"Column-Oriented Storage"}),"\n",(0,t.jsx)(n.p,{children:"NoSQL systems often use column-oriented storage"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"RDMSs store an entire row together (on disk or at a server)"}),"\n",(0,t.jsxs)(n.li,{children:["NoSQL systems typically store a column together (or a group of columns)","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Entries within a column are indexed and easy to locate, given a key"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Why useful?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Range searches within a column are fast since you don't need to fetch the entire database"}),"\n",(0,t.jsxs)(n.li,{children:["E.g., Get me all blog_ids from the blog table that were updated within the past month","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Search in the last_updated column, fetch corresponding blog_id column"}),"\n",(0,t.jsx)(n.li,{children:"Don't need to fetch the other columns"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"links",children:"Links"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/databases/nosql-databases/cassandra/design",children:"Cassandra - Design"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},827799:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/Big-Data_Design-of-Key-Value-Stores-image1-fc3315c24c3a8eebfa24229c6196a65e.jpg"},993576:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/Big-Data_Design-of-Key-Value-Stores-image2-3571a37b2d4469b136a9cf2516a238e3.jpg"},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>r});var i=s(296540);const t={},a=i.createContext(t);function l(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);