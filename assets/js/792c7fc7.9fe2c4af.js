"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[44799],{992629:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"data-structures/hierarchical-data-structure/space-partitioning-trees","title":"Space-partitioning trees","description":"Use a tree to represent a recursive subdivision of 2d space","source":"@site/docs/data-structures/hierarchical-data-structure/space-partitioning-trees.md","sourceDirName":"data-structures/hierarchical-data-structure","slug":"/data-structures/hierarchical-data-structure/space-partitioning-trees","permalink":"/data-structures/hierarchical-data-structure/space-partitioning-trees","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/data-structures/hierarchical-data-structure/space-partitioning-trees.md","tags":[],"version":"current","lastUpdatedBy":"Deepak Sood","lastUpdatedAt":1681237065000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Segment Tree","permalink":"/data-structures/hierarchical-data-structure/segment-tree"},"next":{"title":"Tree DS","permalink":"/data-structures/hierarchical-data-structure/tree-ds"}}');var s=i(474848),n=i(28453);const a={},d="Space-partitioning trees",c={},o=[{value:"Grid - Divide space uniformly into squares",id:"grid---divide-space-uniformly-into-squares",level:2},{value:"2d tree - Recursively divide space into two halfplanes",id:"2d-tree---recursively-divide-space-into-two-halfplanes",level:2},{value:"Quadtree / Rtree - Recursively divide space into four quadrants",id:"quadtree--rtree---recursively-divide-space-into-four-quadrants",level:2},{value:"BSP tree - Recursively divide space into two regions",id:"bsp-tree---recursively-divide-space-into-two-regions",level:2},{value:"Applications",id:"applications",level:2}];function l(e){const t={h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"space-partitioning-trees",children:"Space-partitioning trees"})}),"\n",(0,s.jsx)(t.p,{children:"Use a tree to represent a recursive subdivision of 2d space"}),"\n",(0,s.jsx)(t.h2,{id:"grid---divide-space-uniformly-into-squares",children:"Grid - Divide space uniformly into squares"}),"\n",(0,s.jsx)(t.h2,{id:"2d-tree---recursively-divide-space-into-two-halfplanes",children:"2d tree - Recursively divide space into two halfplanes"}),"\n",(0,s.jsx)(t.h2,{id:"quadtree--rtree---recursively-divide-space-into-four-quadrants",children:"Quadtree / Rtree - Recursively divide space into four quadrants"}),"\n",(0,s.jsx)(t.p,{children:"It is a two-dimensional analog of octrees and is most often used to partition a two-dimensional space by recursively subdividing it into four quadrants or regions."}),"\n",(0,s.jsx)(t.p,{children:"\ud835\ude50\ud835\ude68\ud835\ude5a \ud835\ude58\ud835\ude56\ud835\ude68\ud835\ude5a: find nearby interest points"}),"\n",(0,s.jsx)(t.h2,{id:"bsp-tree---recursively-divide-space-into-two-regions",children:"BSP tree - Recursively divide space into two regions"}),"\n",(0,s.jsx)(t.h2,{id:"applications",children:"Applications"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Ray tracing"}),"\n",(0,s.jsx)(t.li,{children:"2d range search"}),"\n",(0,s.jsx)(t.li,{children:"Flight simulators"}),"\n",(0,s.jsx)(t.li,{children:"N-body simulation"}),"\n",(0,s.jsx)(t.li,{children:"Collision detection"}),"\n",(0,s.jsx)(t.li,{children:"Astronomical databases"}),"\n",(0,s.jsx)(t.li,{children:"Nearest neighbor search"}),"\n",(0,s.jsx)(t.li,{children:"Adaptive mesh generation"}),"\n",(0,s.jsx)(t.li,{children:"Accelerate rendering in Doom (game)"}),"\n",(0,s.jsx)(t.li,{children:"Hidden surface removal and shadow casting"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"\ud835\udde5\ud835\uddd4\ud835\uddec \ud835\uddd6\ud835\uddd4\ud835\udde6\ud835\udde7\ud835\udddc\ud835\udde1\ud835\uddda"}),"\n",(0,s.jsx)(t.p,{children:"It is the most basic of many computer graphics rendering algo that uses geometric algo of ray tracing."}),"\n",(0,s.jsx)(t.p,{children:"\ud835\ude50\ud835\ude68\ud835\ude5a \ud835\ude58\ud835\ude56\ud835\ude68\ud835\ude5a: using longitude and latitude, return the Country of the point."})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>d});var r=i(296540);const s={},n=r.createContext(s);function a(e){const t=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(n.Provider,{value:t},e.children)}}}]);