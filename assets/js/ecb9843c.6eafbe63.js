"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[76750],{86852:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>d,contentTitle:()=>i,default:()=>l,frontMatter:()=>s,metadata:()=>t,toc:()=>m});const t=JSON.parse('{"id":"devops/terraform/commands","title":"Commands","description":"Usage: terraform [-version] [-help]  [args]","source":"@site/docs/devops/terraform/commands.md","sourceDirName":"devops/terraform","slug":"/devops/terraform/commands","permalink":"/devops/terraform/commands","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/devops/terraform/commands.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1739572825000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Terraform","permalink":"/devops/terraform/"},"next":{"title":"Documentation","permalink":"/devops/terraform/documentation"}}');var n=o(474848),a=o(28453);const s={},i="Commands",d={},m=[{value:"Main commands",id:"main-commands",level:3},{value:"Global options (use these before the subcommand, if any)",id:"global-options-use-these-before-the-subcommand-if-any",level:3},{value:"All other commands",id:"all-other-commands",level:3},{value:"Terraform refresh",id:"terraform-refresh",level:4}];function c(e){const r={code:"code",h1:"h1",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"commands",children:"Commands"})}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.code,{children:"Usage: terraform [-version] [-help] <command> [args]"})}),"\n",(0,n.jsx)(r.p,{children:"The available commands for execution are listed below. The primary workflow commands are given first, followed by less common or more advanced commands."}),"\n",(0,n.jsx)(r.h3,{id:"main-commands",children:"Main commands"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"brew install terraform\n\ninit          Prepare your working directory for other commands\nvalidate      Check whether the configuration is valid\nplan          Show changes required by the current configuration\napply         Create or update infrastructure\ndestroy       Destroy previously-created infrastructure\n"})}),"\n",(0,n.jsx)(r.h3,{id:"global-options-use-these-before-the-subcommand-if-any",children:"Global options (use these before the subcommand, if any)"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:'-chdir=DIR    Switch to a different working directory before executing the\n   given subcommand.\n-help         Show this help output, or the help for a specified subcommand.\n-version      An alias for the "version" subcommand.\n'})}),"\n",(0,n.jsx)(r.h3,{id:"all-other-commands",children:"All other commands"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"console       Try Terraform expressions at an interactive command prompt\nfmt           Reformat your configuration in the standard style\nforce-unlock  Release a stuck lock on the current workspace\nget           Install or upgrade remote Terraform modules\ngraph         Generate a Graphviz graph of the steps in an operation\nimport        Associate existing infrastructure with a Terraform resource\nlogin         Obtain and save credentials for a remote host\nlogout        Remove locally-stored credentials for a remote host\nmetadata      Metadata related commands\noutput        Show output values from your root module\nproviders     Show the providers required for this configuration\nrefresh       Update the state to match remote systems\nshow          Show the current state or a saved plan\nstate         Advanced state management\ntaint         Mark a resource instance as not fully functional\ntest          Experimental support for module integration testing\nuntaint       Remove the 'tainted' state from a resource instance\nversion       Show the current Terraform version\nworkspace     Workspace management\n"})}),"\n",(0,n.jsx)(r.h4,{id:"terraform-refresh",children:"Terraform refresh"}),"\n",(0,n.jsxs)(r.p,{children:["The ",(0,n.jsx)(r.code,{children:"terraform refresh"})," command reads the current settings from all managed remote objects and updates the Terraform state to match."]})]})}function l(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,r,o)=>{o.d(r,{R:()=>s,x:()=>i});var t=o(296540);const n={},a=t.createContext(n);function s(e){const r=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),t.createElement(a.Provider,{value:r},e.children)}}}]);