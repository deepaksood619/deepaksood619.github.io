"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[59144],{651366:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"devops/others/kong","title":"Kong","description":"Kong is a cloud-native, fast, scalable, and distributed Microservice Abstraction Layer (also known as an API Gateway, API Middleware or in some cases Service Mesh). Made available as an open-source project in 2015, its core values are high performance and extensibility.","source":"@site/docs/devops/others/kong.md","sourceDirName":"devops/others","slug":"/devops/others/kong","permalink":"/devops/others/kong","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/devops/others/kong.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1734020743000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"KeyCloak","permalink":"/devops/others/keycloak"},"next":{"title":"Other - CICD","permalink":"/devops/others/other-cicd"}}');var t=s(474848),r=s(28453);const a={},i="Kong",l={},c=[{value:"Features",id:"features",level:2},{value:"Kong DB Less Declarative Config",id:"kong-db-less-declarative-config",level:2},{value:"Kong Helm Charts",id:"kong-helm-charts",level:2},{value:"Commands",id:"commands",level:2},{value:"Konga",id:"konga",level:2},{value:"References",id:"references",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"kong",children:"Kong"})}),"\n",(0,t.jsxs)(n.p,{children:["Kong is a cloud-native, fast, scalable, and distributed Microservice Abstraction Layer ",(0,t.jsx)(n.em,{children:"(also known as an API Gateway, API Middleware or in some cases Service Mesh)"}),". Made available as an open-source project in 2015, its core values are high performance and extensibility."]}),"\n",(0,t.jsx)(n.p,{children:"If you are building for web, mobile or IoT (Internet of Things) you will likely end up needing common functionality to run your actual software. Kong can help by acting as a gateway (or a sidecar) for microservices requests while providing load balancing, logging, authentication, rate-limiting, transformations, and more through plugins."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"image",src:s(123441).A+"",width:"999",height:"661"})}),"\n",(0,t.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Cloud-Native:"})," Platform agnostic, Kong can run from bare metal to Kubernetes."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Dynamic Load Balancing:"})," Load balance traffic across multiple upstream services."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Hash-based Load Balancing:"})," Load balance with consistent hashing/sticky sessions."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Circuit-Breaker:"})," Intelligent tracking of unhealthy upstream services."]}),"\n",(0,t.jsx)(n.li,{children:"**Health Checks:**Active and passive monitoring of your upstream services."}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Service Discovery:"})," Resolve SRV records in third-party DNS resolvers like Consul."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Serverless:"})," Invoke and secure AWS Lambda or OpenWhisk functions directly from Kong."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"WebSockets:"})," Communicate to your upstream services via WebSockets."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"OAuth2.0:"})," Easily add OAuth2.0 authentication to your APIs."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Logging:"})," Log requests and responses to your system over HTTP, TCP, UDP, or to disk."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Security:"})," ACL, Bot detection, whitelist/blacklist IPs, etc..."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Syslog:"})," Logging to System log."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"SSL:"})," Setup a Specific SSL Certificate for an underlying service or API."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Monitoring:"})," Live monitoring provides key load and performance server metrics."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Forward Proxy:"})," Make Kong connect to intermediary transparent HTTP proxies."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Authentications:"})," HMAC, JWT, Basic, and more."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Rate-limiting:"})," Block and throttle requests based on many variables."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Transformations:"})," Add, remove, or manipulate HTTP requests and responses."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Caching:"})," Cache and serve responses at the proxy layer."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"CLI:"})," Control your Kong cluster from the command line."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"REST API:"})," Kong can be operated with its RESTful API for maximum flexibility."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Geo-Replicated:"})," Configs are always up-to-date across different regions."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Failure Detection & Recovery:"})," Kong is unaffected if one of your Cassandra nodes goes down."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Clustering:"})," All Kong nodes auto-join the cluster keeping their config updated across nodes."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Scalability:"})," Distributed by nature, Kong scales horizontally by simply adding nodes."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Performance:"})," Kong handles load with ease by scaling and using NGINX at the core."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Plugins:"})," Extendable architecture for adding functionality to Kong and APIs."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"kong-db-less-declarative-config",children:"Kong DB Less Declarative Config"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://docs.konghq.com/1.3.x/db-less-and-declarative-config",children:"https://docs.konghq.com/1.3.x/db-less-and-declarative-config"})}),"\n",(0,t.jsx)(n.h2,{id:"kong-helm-charts",children:"Kong Helm Charts"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'helm install --name kg \\\n--set=admin.type=ClusterIP,proxy.type=LoadBalancer,proxy.loadBalancerIP=104.211.225.153 \\\n--namespace kong \\\nstable/kong\n\nhelm upgrade --set=admin.useTLS=true --namespace kong kg stable/kong\n\nhelm delete --purge kg\n\nhelm status kg\n\nexport POD_NAME=$(kubectl get pods --namespace kong -l "release=kg, app=kong" -o jsonpath="{.items[0].metadata.name}")\nkubectl port-forward --namespace kong $POD_NAME 8444:8444\n\n# Notes\n    1. Kong Admin can be accessed inside the cluster using:\n            DNS=kg-kong-admin.kong.svc.cluster.local\n            PORT=8444\n\n    To connect from outside the K8s cluster:\n            HOST=127.0.0.1\n\n            # Execute the following commands to route the connection to Admin SSL port:\n            export POD_NAME=$(kubectl get pods --namespace kong -l "release=kg, app=kong" -o jsonpath="{.items[0].metadata.name}")\n            kubectl port-forward --namespace kong $POD_NAME 8444:8444\n\n    2. Kong Proxy can be accessed inside the cluster using:\n            DNS=kg-kong-proxy.kong.svc.cluster.localPORT=443To connect from outside the K8s cluster:\n            HOST=$(kubectl get svc --namespace kong kg-kong-proxy -o jsonpath=\'{.status.loadBalancer.ingress.ip}\')\n            PORT=$(kubectl get svc --namespace kong kg-kong-proxy -o jsonpath=\'{.spec.ports[0].nodePort}\')\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/helm/charts/tree/master/stable/kong",children:"https://github.com/helm/charts/tree/master/stable/kong"})}),"\n",(0,t.jsx)(n.h2,{id:"commands",children:"Commands"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'docker network create kong-net\n\ndocker run --name kong-database \\\n--network=kong-net \\\n-p 5432:5432 \\\n-e POSTGRES_USER=kong \\\n-e POSTGRES_DB=kong \\\npostgres:11.2\n\ndocker run --rm \\\n--network=kong-net \\\n-e KONG_DATABASE=postgres \\\n-e KONG_PG_HOST=kong-database \\\nkong:latest kong migrations bootstrap\n\ndocker run --name kong \\\n--network=kong-net \\\n-e KONG_DATABASE=postgres \\\n-e KONG_PG_HOST=kong-database \\\n-e KONG_PROXY_ACCESS_LOG=/dev/stdout \\\n-e KONG_ADMIN_ACCESS_LOG=/dev/stdout \\\n-e KONG_PROXY_ERROR_LOG=/dev/stderr \\\n-e KONG_ADMIN_ERROR_LOG=/dev/stderr \\\n-e "KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl" \\\n-p 8000:8000 \\\n-p 8443:8443 \\\n-p 8001:8001 \\\n-p 8444:8444 \\\nkong:latest\n\ndocker run -p 1337:1337 \\\n--network=kong-net \\\n--name konga \\\n-v /Users/kongadata:/app/kongadata \\\n-e NODE_ENV=production \\\npantsel/konga\n\ncurl -X POST \\\n-H "Content-Type: application/json" \\\n-d \'{"name":"JohnDoe","username":"jdoe"}\' \\\nhttp://localhost:8000/fake-api/users\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"http://localhost:8000/fake-api/users",children:"http://localhost:8000/fake-api/users"})}),"\n",(0,t.jsx)(n.h2,{id:"konga",children:"Konga"}),"\n",(0,t.jsx)(n.p,{children:"More than just another GUI to Kong Admin API"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/pantsel/konga",children:"https://github.com/pantsel/konga"})}),"\n",(0,t.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/Kong/kong",children:"GitHub - Kong/kong: \ud83e\udd8d The Cloud-Native API Gateway and AI Gateway."})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://medium.com/@tselentispanagis/managing-microservices-and-apis-with-kong-and-konga-7d14568bb59d",children:"Managing microservices and APIs with Kong and Konga | by Tselentis Panagis | Medium"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://konghq.com/",children:"The Platform Powering the API World | Kong Inc."})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},123441:(e,n,s)=>{s.d(n,{A:()=>o});const o=s.p+"assets/images/DevOps-Others-Kong-image1-3d4594fa144d3613f0bff575b8f90456.jpg"},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>i});var o=s(296540);const t={},r=o.createContext(t);function a(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);