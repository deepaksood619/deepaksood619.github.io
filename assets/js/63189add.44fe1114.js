"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[34987],{487117:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>u,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"algorithms/string-algorithms/intro","title":"Intro","description":"Subarray/substring","source":"@site/docs/algorithms/string-algorithms/intro.md","sourceDirName":"algorithms/string-algorithms","slug":"/algorithms/string-algorithms/intro","permalink":"/algorithms/string-algorithms/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/algorithms/string-algorithms/intro.md","tags":[],"version":"current","lastUpdatedBy":"Deepak Sood","lastUpdatedAt":1678191863000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Brute Force","permalink":"/algorithms/string-algorithms/brute-force"},"next":{"title":"Knuth-Morris-Pratt","permalink":"/algorithms/string-algorithms/knuth-morris-pratt"}}');var n=s(474848),a=s(28453);const o={},i="Intro",u={},c=[{value:"Subarray/substring",id:"subarraysubstring",level:2},{value:"Subsequence",id:"subsequence",level:2}];function l(e){const r={h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"intro",children:"Intro"})}),"\n",(0,n.jsx)(r.h2,{id:"subarraysubstring",children:"Subarray/substring"}),"\n",(0,n.jsxs)(r.p,{children:["A subbarray is a ",(0,n.jsx)(r.strong,{children:"contiguous"})," part of array. An array that is inside another array. For example, consider the array [1, 2, 3, 4], There are 10 non-empty sub-arrays. The subbarays are (1), (2), (3), (4), (1,2), (2,3), (3,4), (1,2,3), (2,3,4) and (1,2,3,4). In general, for an array/string of size n, there are",(0,n.jsx)(r.strong,{children:"n*(n+1)/2"}),"non-empty subarrays/subsrings."]}),"\n",(0,n.jsx)(r.h2,{id:"subsequence",children:"Subsequence"}),"\n",(0,n.jsx)(r.p,{children:"A subsequence is a sequence that can be derived from another sequence by zero or more elements, without changing the order of the remaining elements."}),"\n",(0,n.jsxs)(r.p,{children:["For the same example, there are 15 sub-sequences. They are (1), (2), (3), (4), (1,2), (1,3),(1,4), (2,3), (2,4), (3,4), (1,2,3), (1,2,4), (1,3,4), (2,3,4), (1,2,3,4). More generally, we can say that for a sequence of size n, we can have (",(0,n.jsx)(r.strong,{children:"2n-1"}),") non-empty sub-sequences in total."]}),"\n",(0,n.jsxs)(r.p,{children:['*A string example to differentiate:*Consider strings "geeksforgeeks" and "gks". "gks" is a subsequence of "geeksforgeeks" but not a substring. "geeks" is both a subsequence and subarray. Every subarray is a subsequence. More specifically, ',(0,n.jsx)(r.strong,{children:"Subsequence is a generalization of substring."})]})]})}function h(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,r,s)=>{s.d(r,{R:()=>o,x:()=>i});var t=s(296540);const n={},a=t.createContext(n);function o(e){const r=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),t.createElement(a.Provider,{value:r},e.children)}}}]);