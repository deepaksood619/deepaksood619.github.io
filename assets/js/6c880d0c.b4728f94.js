"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[84997],{699445:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"python/python-intro/data-structure/readme","title":"Data Structure","description":"Built-in data structures","source":"@site/docs/python/python-intro/data-structure/readme.md","sourceDirName":"python/python-intro/data-structure","slug":"/python/python-intro/data-structure/","permalink":"/python/python-intro/data-structure/","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/python/python-intro/data-structure/readme.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1701793554000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Classes","permalink":"/python/python-intro/classes"},"next":{"title":"Dict Evolution","permalink":"/python/python-intro/data-structure/dict-evolution"}}');var a=n(474848),s=n(28453);const i={},o="Data Structure",l={},c=[{value:"Built-in data structures",id:"built-in-data-structures",level:2}];function d(t){const e={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...t.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"data-structure",children:"Data Structure"})}),"\n",(0,a.jsx)(e.h2,{id:"built-in-data-structures",children:"Built-in data structures"}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsx)(e.li,{children:"List"}),"\n",(0,a.jsxs)(e.li,{children:["Tuples","\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"namedtuples"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["Dictionaries","\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"defaultdict"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(e.li,{children:"Sets"}),"\n",(0,a.jsxs)(e.li,{children:["Queue","\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"PriorityQueue"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(e.li,{children:"Array"}),"\n"]}),"\n",(0,a.jsx)(e.p,{children:'An array is a vector containing homogeneous elements i.e. belonging to the same data type. Elements are allocated with contiguous memory locations allowing easy modification, that is, addition, deletion, accessing of elements. In Python, we have to use thearraymodule to declare arrays. If the elements of an array belong to different data types, an exception "Incompatible data types" is thrown.'}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# creating an array containing same\n# data type elements\nimport array\n\nsample_array = array.array('i', [1, 2, 3])\n\n# accessing elements of array\nfor i in sample_array:\n      print(i)\n\n# must be b, B, u, h, H, i, I, l, L, q, Q, f or d\n"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.a,{href:"https://docs.python.org/3/library/array.html",children:"https://docs.python.org/3/library/array.html"})})]})}function u(t={}){const{wrapper:e}={...(0,s.R)(),...t.components};return e?(0,a.jsx)(e,{...t,children:(0,a.jsx)(d,{...t})}):d(t)}},28453:(t,e,n)=>{n.d(e,{R:()=>i,x:()=>o});var r=n(296540);const a={},s=r.createContext(a);function i(t){const e=r.useContext(s);return r.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function o(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:i(t.components),r.createElement(s.Provider,{value:e},t.children)}}}]);