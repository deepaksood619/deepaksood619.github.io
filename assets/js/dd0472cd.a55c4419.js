"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[99477],{825129:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"languages/golang/hello-world","title":"Hello World","description":"hello.go","source":"@site/docs/languages/golang/hello-world.md","sourceDirName":"languages/golang","slug":"/languages/golang/hello-world","permalink":"/languages/golang/hello-world","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/languages/golang/hello-world.md","tags":[],"version":"current","lastUpdatedBy":"Deepak Sood","lastUpdatedAt":1678191863000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Examples","permalink":"/languages/golang/examples"},"next":{"title":"Interview Questions","permalink":"/languages/golang/interview-questions"}}');var a=t(474848),l=t(28453);const s={},i="Hello World",r={},c=[{value:"hello.go",id:"hellogo",level:2},{value:"A Go program basically consists of the following parts",id:"a-go-program-basically-consists-of-the-following-parts",level:2},{value:"Important Points",id:"important-points",level:2},{value:"Naming Rules",id:"naming-rules",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"hello-world",children:"Hello World"})}),"\n",(0,a.jsx)(n.h2,{id:"hellogo",children:"hello.go"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",children:'# The main package is the starting point to run the program\n\npackage main\n\n# preprocessor command, tells the compilerto include the files lying in the package fmt\n\nimport "fmt"\n\n# program execution begins here\n\nfunc main() {\n\n# Notice the capital P of Println method. In Go language, a name is exported if it starts with capital letter. Exported means the function or variable/constant is accessible to the importer of the respective package\n\nfmt.Println("Hello, \u4e16\u754c")\n\n}\n\n## Running\n\ngo run hello.go\n\n## Commands\n\ngo mod init github.io/deepaksood619/pcbook\n\ngo test ./... # run all test in all packages\n\ngo test ./serializer/file_test.go\n'})}),"\n",(0,a.jsx)(n.h2,{id:"a-go-program-basically-consists-of-the-following-parts",children:"A Go program basically consists of the following parts"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Package Declaration"}),"\n",(0,a.jsx)(n.li,{children:"Import Packages"}),"\n",(0,a.jsx)(n.li,{children:"Functions"}),"\n",(0,a.jsx)(n.li,{children:"Variables"}),"\n",(0,a.jsx)(n.li,{children:"Statements and Expressions"}),"\n",(0,a.jsx)(n.li,{children:"Comments"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"important-points",children:"Important Points"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"One more interesting thing you may notice is thelack of semicolons. In fact, in Go they are optional -- you may use them to separate the statements, but it's not required and generally not advised to use."}),"\n",(0,a.jsx)(n.li,{children:"short form of creating vars. the := operatordeclares and assigns a value to a variable at the same time. Using this form you don't have to provide the type of variable - the compiler will figure that out based on the value you passed."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"naming-rules",children:"Naming Rules"}),"\n",(0,a.jsx)(n.p,{children:"Go has a set of naming rules that you'll have to follow:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"a name must begin with a letter"}),"\n",(0,a.jsx)(n.li,{children:"if the name begins with a Capital letter, it's considered asexportedand can be usedoutside of the current package. Otherwise, the variable/function/type can be usedonly inside the current package. THIS IS IMPORTANT!"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"These are all enforced rules. Simple!"}),"\n",(0,a.jsx)(n.p,{children:"One more additional rule set by the community is to usecamelCase. It is also popular to abbreviate obvious variables - using i instead of index etc. That's all you need to know about naming conventions."})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var o=t(296540);const a={},l=o.createContext(a);function s(e){const n=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(l.Provider,{value:n},e.children)}}}]);