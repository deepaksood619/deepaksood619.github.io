"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[85174],{642641:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>d});var a=s(785893),r=s(511151);const t={},l="Aggregation Queries",c={id:"languages/sql/dql-data-query-language/aggregation-queries",title:"Aggregation Queries",description:"AVG",source:"@site/docs/languages/sql/dql-data-query-language/aggregation-queries.md",sourceDirName:"languages/sql/dql-data-query-language",slug:"/languages/sql/dql-data-query-language/aggregation-queries",permalink:"/languages/sql/dql-data-query-language/aggregation-queries",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/languages/sql/dql-data-query-language/aggregation-queries.md",tags:[],version:"current",lastUpdatedAt:1707138374,formattedLastUpdatedAt:"Feb 5, 2024",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"DQL - Data Query Language",permalink:"/languages/sql/dql-data-query-language/"},next:{title:"Analytical Queries",permalink:"/languages/sql/dql-data-query-language/analytical-queries"}},i={},d=[{value:"AVG",id:"avg",level:3},{value:"COUNT",id:"count",level:3},{value:"DIFFERENCE",id:"difference",level:3},{value:"MAX",id:"max",level:3},{value:"MIN",id:"min",level:3},{value:"ROUND",id:"round",level:3},{value:"SUM",id:"sum",level:3},{value:"GROUP BY",id:"group-by",level:3},{value:"GROUP BY ALL",id:"group-by-all",level:4},{value:"Guidelines",id:"guidelines",level:4},{value:"Is this a valid query?",id:"is-this-a-valid-query",level:3},{value:"Examples",id:"examples",level:3},{value:"max_by, min_by",id:"max_by-min_by",level:3},{value:"Databricks aggregate functions",id:"databricks-aggregate-functions",level:2},{value:"COUNT_IF",id:"count_if",level:3},{value:"Links",id:"links",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"aggregation-queries",children:"Aggregation Queries"}),"\n",(0,a.jsx)(n.h3,{id:"avg",children:"AVG"}),"\n",(0,a.jsx)(n.p,{children:"AVG() is an aggregate function that returns the average value for a numeric column."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"SELECT AVG(column_name)\nFROM table_name;\n"})}),"\n",(0,a.jsx)(n.h3,{id:"count",children:"COUNT"}),"\n",(0,a.jsx)(n.p,{children:"COUNT() is a function that takes the name of a column as an argument and counts the number of rows where the column is not NULL."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"SELECT COUNT(column_name)\nFROM table_name;\n\n-- To count all rows\nSELECT COUNT(*) FROM table_name;\n"})}),"\n",(0,a.jsx)(n.h3,{id:"difference",children:"DIFFERENCE"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"SELECT MAX(POPULATION) - MIN(POPULATION)\nFROM CITY;\n"})}),"\n",(0,a.jsx)(n.h3,{id:"max",children:"MAX"}),"\n",(0,a.jsx)(n.p,{children:"MAX() is a function that takes the name of a column as an argument and returns the largest value in that column."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"SELECT MAX(column_name)\nFROM table_name;\n"})}),"\n",(0,a.jsx)(n.h3,{id:"min",children:"MIN"}),"\n",(0,a.jsx)(n.p,{children:"MIN() is a function that takes the name of a column as an argument and returns the smallest value in that column."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"SELECT MIN(column_name)\nFROM table_name;\n"})}),"\n",(0,a.jsx)(n.h3,{id:"round",children:"ROUND"}),"\n",(0,a.jsx)(n.p,{children:"ROUND() is a function that takes a column name and an integer as an argument. It rounds the values in the column to the number of decimal places specified by the integer."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"SELECT ROUND(column_name, integer)\nFROM table_name;\n"})}),"\n",(0,a.jsx)(n.h3,{id:"sum",children:"SUM"}),"\n",(0,a.jsx)(n.p,{children:"SUM() is a function that takes the name of a column as an argument and returns the sum of all the values in that column."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"SELECT SUM(column_name)\nFROM table_name;\n"})}),"\n",(0,a.jsx)(n.h3,{id:"group-by",children:"GROUP BY"}),"\n",(0,a.jsx)(n.p,{children:"GROUP BY is a clause in SQL that is only used with aggregate functions. It is used in collaboration with the SELECT statement to arrange identical data into groups."}),"\n",(0,a.jsx)(n.p,{children:"The GROUP BY statement comes after any WHERE statements, but before ORDER BY or LIMIT"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"SELECT COUNT(*)\nFROM table_name\nGROUP BY column_name;\n\nSELECT ROUND(imdb_rating), COUNT(name) FROM movies GROUP BY 1 ORDER BY 1;\n-- Here, the 1 refers to the first column in our SELECT statement, ROUND(imdb_rating)\n\n-- group by all\nSELECT car_model, count(DISTINCT city) AS count FROM dealer GROUP BY ALL;\n"})}),"\n",(0,a.jsx)(n.h4,{id:"group-by-all",children:"GROUP BY ALL"}),"\n",(0,a.jsxs)(n.p,{children:["A shorthand notation to add all ",(0,a.jsx)(n.code,{children:"SELECT"}),"-list expressions not containing aggregate functions as ",(0,a.jsx)(n.code,{children:"group_expression"}),"s. If no such expression exist ",(0,a.jsx)(n.code,{children:"GROUP BY ALL"})," is equivalent to omitting the ",(0,a.jsx)(n.code,{children:"GROUP BY"})," clause which results in a global aggregation."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/sql-ref-syntax-qry-select-groupby.html",children:"GROUP BY clause | Databricks on AWS"})}),"\n",(0,a.jsx)(n.h4,{id:"guidelines",children:"Guidelines"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"All the dependent columns or columns used in GROUP BY function must form the basis of grouping, hence must be included in GROUP BY clause also"}),"\n",(0,a.jsx)(n.li,{children:"GROUP BY clause does not support the use of column alias, but the actual names"}),"\n",(0,a.jsx)(n.li,{children:"GROUP BY clause can only be used with aggregate functions like SUM, AVG, COUNT, MAX, and MIN"}),"\n",(0,a.jsxs)(n.li,{children:["Aggregate functions cannot be used in a GROUP BY clause","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Use Inner query for solving this"}),"\n",(0,a.jsx)(n.li,{children:"Example -"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"SELECT\n cp.CoinId,\n cp.createdAt AS max_createdAt,\n COUNT(*) AS count_duplicates\nFROM\n coin cp\n INNER JOIN (\n  SELECT\n   CoinId,\n   MAX(createdAt) AS max_createdAt\n  FROM\n   coin\n  GROUP BY\n   CoinId\n ) cp_max\n ON cp.CoinId = cp_max.CoinId AND cp.createdAt = cp_max.max_createdAt\nGROUP BY\n cp.CoinId,\n cp.createdAt\nHAVING\n COUNT(*) > 1;\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://www.tutorialspoint.com/sql_certificate/using_the_group_functions.htm",children:"Using Group functions"})}),"\n",(0,a.jsx)(n.h3,{id:"is-this-a-valid-query",children:"Is this a valid query?"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"SELECT city, COUNT(*) FROM census WHERE COUNT(*) > 5\nGROUP BY city ORDER BY COUNT(*) DESC\n"})}),"\n",(0,a.jsx)(n.p,{children:"no, GROUP BY happens after WHERE, so you can't use aggregations in a WHERE"}),"\n",(0,a.jsxs)(n.p,{children:["Use ",(0,a.jsx)(n.code,{children:"HAVING COUNT(*) > 5"})," instead instead of WHERE"]}),"\n",(0,a.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"SELECT\n    CONCAT(HOUR(create_date),\n            ':00-',\n            HOUR(create_date) + 1,\n            ':00') AS Hours,\n    COUNT(*) AS `usage`\nFROM\n    communication_log\nWHERE\n    channel = 'sms'\n        AND create_date BETWEEN '2021-08-25 00:00:00' AND NOW()\nGROUP BY HOUR(create_date);\n\nSELECT create_date, count(*)\nFROM communication_log\nWHERE\n    channel = 'sms'\n        AND create_date BETWEEN '2021-08-25 00:00:00' AND NOW()\nGROUP BY hour( create_date ) , day( create_date );\n\nSELECT YEAR(create_date),\n    MONTH(create_date),\n    count(id)\nFROM st_customer_detail\nGROUP BY YEAR(create_date),\n        MONTH(create_date)\nORDER BY YEAR(create_date) DESC, MONTH(create_date) DESC;\n\nSELECT\n    template_id, COUNT(*) AS template_count\nFROM\n    (SELECT\n        customer_id, template_id, COUNT(*) AS count\n    FROM\n        communication_log\n    WHERE\n        channel = 'sms' AND is_success = 1\n            AND create_date BETWEEN NOW() - INTERVAL 16 HOUR AND NOW()\n    GROUP BY customer_id , template_id) inner_query\nWHERE\n    count > 2\nGROUP BY template_id\nORDER BY template_count DESC;\n\n-- Department wise bifurcation\nselect a.channel, a.department, a.name, count(*) from (\nSELECT ct.department, ct.channel, ct.name\nFROM communication_log cl\nLEFT JOIN communication_templates ct ON cl.template_id = ct.name\nWHERE cl.id BETWEEN 422020686 AND 435852382\n    AND is_success = '1'\nGROUP BY cl.id\n) a group by a.channel, a.department, a.name;\n\n-- average temperature by hour and month\n-- output hours in rows and months in columns\n-- transform row as column using CASE\nSELECT\n    DAY(exam_date),\n    AVG(marks),\n    round(AVG(CASE WHEN MONTH(exam_date) = 1 THEN marks ELSE 0 END),2) jan,\n    round(AVG(CASE WHEN MONTH(exam_date) = 2 THEN marks ELSE 0 END),2) feb,\n    round(AVG(CASE WHEN MONTH(exam_date) = 3 THEN marks ELSE 0 END),2) mar,\n    round(AVG(CASE WHEN MONTH(exam_date) = 4 THEN marks ELSE 0 END),2) apr,\n    round(AVG(CASE WHEN MONTH(exam_date) = 5 THEN marks ELSE 0 END),2) may,\n    round(AVG(CASE WHEN MONTH(exam_date) = 6 THEN marks ELSE 0 END),2) june,\n    round(AVG(CASE WHEN MONTH(exam_date) = 7 THEN marks ELSE 0 END),2) july,\n    round(AVG(CASE WHEN MONTH(exam_date) = 8 THEN marks ELSE 0 END),2) aug,\n    round(AVG(CASE WHEN MONTH(exam_date) = 9 THEN marks ELSE 0 END),2) sep,\n    round(AVG(CASE WHEN MONTH(exam_date) = 10 THEN marks ELSE 0 END),2) oct,\n    round(AVG(CASE WHEN MONTH(exam_date) = 11 THEN marks ELSE 0 END),2) nov,\n    round(AVG(CASE WHEN MONTH(exam_date) = 12 THEN marks ELSE 0 END),2) december\nFROM\n    demo_table\nGROUP BY MONTH(exam_date) , DAY(exam_date);\n\n-- count vowels in names in a table\nselect d_name, sum(\n    if (d_name like '%a%', 1, 0)\n    + if( d_name like '%e%', 1, 0)\n    + if( d_name like '%i%', 1, 0)\n    + if( d_name like '%o%', 1, 0)\n    + if( d_name like '%u%', 1, 0)\n) as vowel_count from (select distinct name as d_name\nfrom demo_table) a group by a.d_name;\n"})}),"\n",(0,a.jsx)(n.h3,{id:"max_by-min_by",children:"max_by, min_by"}),"\n",(0,a.jsxs)(n.p,{children:["Returns the value of an ",(0,a.jsx)(n.code,{children:"expr1"})," associated with the maximum value of ",(0,a.jsx)(n.code,{children:"expr2"})," in a group."]}),"\n",(0,a.jsxs)(n.p,{children:["This function can also be invoked as a ",(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/sql-ref-window-functions.html",children:"window function"})," using the ",(0,a.jsx)(n.code,{children:"OVER"})," clause."]}),"\n",(0,a.jsxs)(n.p,{children:["This function is non-deterministic if ",(0,a.jsx)(n.code,{children:"expr2"})," is not unique within the group."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"-- max_by\nSELECT max_by(x, y) FROM VALUES (('a', 10)), (('b', 50)), (('c', 20)) AS tab(x, y);\n>>> b\n\n-- min_by\nSELECT min_by(x, y) FROM VALUES (('a', 10)), (('b', 50)), (('c', 20)) AS tab(x, y);\n>>> a\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/max_by.html",children:"max_by aggregate function | Databricks on AWS"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/min_by.html",children:"min_by aggregate function | Databricks on AWS"})}),"\n",(0,a.jsx)(n.h2,{id:"databricks-aggregate-functions",children:"Databricks aggregate functions"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Function"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/any.html",children:"any(expr)"})}),(0,a.jsxs)(n.td,{children:["Returns true if at least one value of ",(0,a.jsx)(n.code,{children:"expr"})," in the group is true."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/any_value.html",children:"any_value(expr[,ignoreNull])"})}),(0,a.jsxs)(n.td,{children:["Returns any random value of ",(0,a.jsx)(n.code,{children:"expr"})," for a group of rows."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/approx_count_distinct.html",children:"approx_count_distinct(expr[,relativeSD])"})}),(0,a.jsxs)(n.td,{children:["Returns the estimated number of distinct values in ",(0,a.jsx)(n.code,{children:"expr"})," within the group."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/approx_percentile.html",children:"approx_percentile(expr,percentage[,accuracy])"})}),(0,a.jsxs)(n.td,{children:["Returns the approximate percentile of the ",(0,a.jsx)(n.code,{children:"expr"})," within the group."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/approx_top_k.html",children:"approx_top_k(expr[,k[,maxItemsTracked]])"})}),(0,a.jsxs)(n.td,{children:["Returns the top ",(0,a.jsx)(n.code,{children:"k"})," most frequently occurring item values in an ",(0,a.jsx)(n.code,{children:"expr"})," along with their approximate counts."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/array_agg.html",children:"array_agg(expr)"})}),(0,a.jsxs)(n.td,{children:["Returns an array consisting of all values in ",(0,a.jsx)(n.code,{children:"expr"})," within the group."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/avg.html",children:"avg(expr)"})}),(0,a.jsx)(n.td,{children:"Returns the mean calculated from values of a group."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/bit_and.html",children:"bit_and(expr)"})}),(0,a.jsxs)(n.td,{children:["Returns the bitwise ",(0,a.jsx)(n.code,{children:"AND"})," of all input values in the group."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/bit_or.html",children:"bit_or(expr)"})}),(0,a.jsxs)(n.td,{children:["Returns the bitwise ",(0,a.jsx)(n.code,{children:"OR"})," of all input values in the group."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/bit_xor.html",children:"bit_xor(expr)"})}),(0,a.jsxs)(n.td,{children:["Returns the bitwise ",(0,a.jsx)(n.code,{children:"XOR"})," of all input values in the group."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/bool_and.html",children:"bool_and(expr)"})}),(0,a.jsxs)(n.td,{children:["Returns true if all values in ",(0,a.jsx)(n.code,{children:"expr"})," are true within the group."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/bool_or.html",children:"bool_or(expr)"})}),(0,a.jsxs)(n.td,{children:["Returns true if at least one value in ",(0,a.jsx)(n.code,{children:"expr"})," is true within the group."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/collect_list.html",children:"collect_list(expr)"})}),(0,a.jsxs)(n.td,{children:["Returns an array consisting of all values in ",(0,a.jsx)(n.code,{children:"expr"})," within the group."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/collect_set.html",children:"collect_set(expr)"})}),(0,a.jsxs)(n.td,{children:["Returns an array consisting of all unique values in ",(0,a.jsx)(n.code,{children:"expr"})," within the group."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/corr.html",children:"corr(expr1,expr2)"})}),(0,a.jsx)(n.td,{children:"Returns Pearson coefficient of correlation between a group of number pairs."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/count.html",children:(0,a.jsx)(n.code,{children:"count(*)"})})}),(0,a.jsx)(n.td,{children:"Returns the total number of retrieved rows in a group, including rows containing null."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsxs)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/count.html",children:[(0,a.jsx)(n.code,{children:"count(expr[, \u2026]"}),")"]})}),(0,a.jsx)(n.td,{children:"Returns the number of rows in a group for which the supplied expressions are all non-null."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/count_if.html",children:"count_if(expr)"})}),(0,a.jsxs)(n.td,{children:["Returns the number of true values for the group in ",(0,a.jsx)(n.code,{children:"expr"}),"."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/count_min_sketch.html",children:"count_min_sketch(expr, epsilon, confidence, seed)"})}),(0,a.jsxs)(n.td,{children:["Returns a count-min sketch of all values in the group in ",(0,a.jsx)(n.code,{children:"expr"})," with the ",(0,a.jsx)(n.code,{children:"epsilon"}),", ",(0,a.jsx)(n.code,{children:"confidence"})," and ",(0,a.jsx)(n.code,{children:"seed"}),"."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/covar_pop.html",children:"covar_pop(expr1,expr2)"})}),(0,a.jsx)(n.td,{children:"Returns the population covariance of number pairs in a group."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/covar_samp.html",children:"covar_samp(expr1,expr2)"})}),(0,a.jsx)(n.td,{children:"Returns the sample covariance of number pairs in a group."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/every.html",children:"every(expr)"})}),(0,a.jsxs)(n.td,{children:["Returns true if all values of ",(0,a.jsx)(n.code,{children:"expr"})," in the group are true."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/first.html",children:"first(expr[,ignoreNull])"})}),(0,a.jsxs)(n.td,{children:["Returns the first value of ",(0,a.jsx)(n.code,{children:"expr"})," for a group of rows."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/first_value.html",children:"first_value(expr[,ignoreNull])"})}),(0,a.jsxs)(n.td,{children:["Returns the first value of ",(0,a.jsx)(n.code,{children:"expr"})," for a group of rows."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/hll_sketch_agg.html",children:"hll_sketch_agg(expr[,lgConfigK])"})}),(0,a.jsx)(n.td,{children:"Returns a HyperLogLog sketch used to approximate a distinct values count."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/hll_union_agg.html",children:"hll_union_agg(expr[,allowDifferentLgConfigK])"})}),(0,a.jsx)(n.td,{children:"Aggregates HyperLogLog sketches for a group of rows."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/kurtosis.html",children:"kurtosis(expr)"})}),(0,a.jsx)(n.td,{children:"Returns the kurtosis value calculated from values of a group."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/last.html",children:"last(expr[,ignoreNull])"})}),(0,a.jsxs)(n.td,{children:["Returns the last value of ",(0,a.jsx)(n.code,{children:"expr"})," for the group of rows."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/last_value.html",children:"last_value(expr[,ignoreNull])"})}),(0,a.jsxs)(n.td,{children:["Returns the last value of ",(0,a.jsx)(n.code,{children:"expr"})," for the group of rows."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/max.html",children:"max(expr)"})}),(0,a.jsxs)(n.td,{children:["Returns the maximum value of ",(0,a.jsx)(n.code,{children:"expr"})," in a group."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/max_by.html",children:"max_by(expr1,expr2)"})}),(0,a.jsxs)(n.td,{children:["Returns the value of an ",(0,a.jsx)(n.code,{children:"expr1"})," associated with the maximum value of ",(0,a.jsx)(n.code,{children:"expr2"})," in a group."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/mean.html",children:"mean(expr)"})}),(0,a.jsx)(n.td,{children:"Returns the mean calculated from values of a group."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/median.html",children:"median(expr)"})}),(0,a.jsx)(n.td,{children:"Returns the median calculated from values of a group."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/min.html",children:"min(expr)"})}),(0,a.jsxs)(n.td,{children:["Returns the minimum value of ",(0,a.jsx)(n.code,{children:"expr"})," in a group."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/min_by.html",children:"min_by(expr1, expr2)"})}),(0,a.jsxs)(n.td,{children:["Returns the value of an ",(0,a.jsx)(n.code,{children:"expr1"})," associated with the minimum value of ",(0,a.jsx)(n.code,{children:"expr2"})," in a group."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/mode.html",children:"mode(expr)"})}),(0,a.jsxs)(n.td,{children:["Returns the most frequent, not ",(0,a.jsx)(n.code,{children:"NULL"}),", value of ",(0,a.jsx)(n.code,{children:"expr"})," in a group."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/percentile.html",children:"percentile(expr, percentage [,frequency])"})}),(0,a.jsxs)(n.td,{children:["Returns the exact percentile value of ",(0,a.jsx)(n.code,{children:"expr"})," at the specified ",(0,a.jsx)(n.code,{children:"percentage"}),"."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/percentile_approx.html",children:"percentile_approx(expr,percentage[,accuracy])"})}),(0,a.jsxs)(n.td,{children:["Returns the approximate percentile of the ",(0,a.jsx)(n.code,{children:"expr"})," within the group."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/percentile_cont.html",children:"percentile_cont(pct) WITHIN GROUP (ORDER BY key)"})}),(0,a.jsxs)(n.td,{children:["Returns the interpolated percentile of the ",(0,a.jsx)(n.code,{children:"key"})," within the group."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/percentile_disc.html",children:"percentile_disc(pct) WITHIN GROUP (ORDER BY key)"})}),(0,a.jsxs)(n.td,{children:["Returns the discrete percentile of the ",(0,a.jsx)(n.code,{children:"key"})," within the group."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/regr_avgx.html",children:"regr_avgx(yExpr, xExpr)"})}),(0,a.jsxs)(n.td,{children:["Returns the mean of ",(0,a.jsx)(n.code,{children:"xExpr"})," calculated from values of a group where ",(0,a.jsx)(n.code,{children:"xExpr"})," and ",(0,a.jsx)(n.code,{children:"yExpr"})," are NOT NULL."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/regr_avgy.html",children:"regr_avgy(yExpr, xExpr)"})}),(0,a.jsxs)(n.td,{children:["Returns the mean of ",(0,a.jsx)(n.code,{children:"yExpr"})," calculated from values of a group where ",(0,a.jsx)(n.code,{children:"xExpr"})," and ",(0,a.jsx)(n.code,{children:"yExpr"})," are NOT NULL."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/regr_count.html",children:"regr_count(yExpr, xExpr)"})}),(0,a.jsxs)(n.td,{children:["Returns the number of non-null value pairs ",(0,a.jsx)(n.code,{children:"yExpr"}),", ",(0,a.jsx)(n.code,{children:"xExpr"})," in the group."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/regr_intercept.html",children:"regr_intercept(yExpr, xExpr)"})}),(0,a.jsxs)(n.td,{children:["Returns the intercept of the uni-variate linear regression line in a group where ",(0,a.jsx)(n.code,{children:"xExpr"})," and ",(0,a.jsx)(n.code,{children:"yExpr"})," are NOT NULL."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/regr_r2.html",children:"regr_r2(yExpr, xExpr)"})}),(0,a.jsxs)(n.td,{children:["Returns the coefficient of determination from values of a group where ",(0,a.jsx)(n.code,{children:"xExpr"})," and ",(0,a.jsx)(n.code,{children:"yExpr"})," are NOT NULL."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/regr_slope.html",children:"regr_slope(yExpr, xExpr)"})}),(0,a.jsxs)(n.td,{children:["Returns the slope of the linear regression line of non-null value pairs ",(0,a.jsx)(n.code,{children:"yExpr"}),", ",(0,a.jsx)(n.code,{children:"xExpr"})," in the group."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/regr_sxx.html",children:"regr_sxx(yExpr, xExpr)"})}),(0,a.jsxs)(n.td,{children:["Returns the sum of squares of the ",(0,a.jsx)(n.code,{children:"xExpr"})," values of a group where ",(0,a.jsx)(n.code,{children:"xExpr"})," and ",(0,a.jsx)(n.code,{children:"yExpr"})," are NOT NULL."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/regr_sxy.html",children:"regr_sxy(yExpr, xExpr)"})}),(0,a.jsxs)(n.td,{children:["Returns the sum of products of ",(0,a.jsx)(n.code,{children:"yExpr"})," and ",(0,a.jsx)(n.code,{children:"xExpr"})," calculated from values of a group where ",(0,a.jsx)(n.code,{children:"xExpr"})," and ",(0,a.jsx)(n.code,{children:"yExpr"})," are NOT NULL."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/regr_syy.html",children:"regr_syy(yExpr, xExpr)"})}),(0,a.jsxs)(n.td,{children:["Returns the sum of squares of the ",(0,a.jsx)(n.code,{children:"yExpr"})," values of a group where ",(0,a.jsx)(n.code,{children:"xExpr"})," and ",(0,a.jsx)(n.code,{children:"yExpr"})," are NOT NULL."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/skewness.html",children:"skewness(expr)"})}),(0,a.jsx)(n.td,{children:"Returns the skewness value calculated from values of a group."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/some.html",children:"some(expr)"})}),(0,a.jsxs)(n.td,{children:["Returns true if at least one value of ",(0,a.jsx)(n.code,{children:"expr"})," in a group is ",(0,a.jsx)(n.code,{children:"true"}),"."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/std.html",children:"std(expr)"})}),(0,a.jsx)(n.td,{children:"Returns the sample standard deviation calculated from the values within the group."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/stddev.html",children:"stddev(expr)"})}),(0,a.jsx)(n.td,{children:"Returns the sample standard deviation calculated from the values within the group."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/stddev_pop.html",children:"stddev_pop(expr)"})}),(0,a.jsx)(n.td,{children:"Returns the population standard deviation calculated from values of a group."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/stddev_samp.html",children:"stddev_samp(expr)"})}),(0,a.jsx)(n.td,{children:"Returns the sample standard deviation calculated from values of a group."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/sum.html",children:"sum(expr)"})}),(0,a.jsx)(n.td,{children:"Returns the sum calculated from values of a group."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/try_avg.html",children:"try_avg(expr)"})}),(0,a.jsx)(n.td,{children:"Returns the mean calculated from values of a group, NULL if there is an overflow."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/try_sum.html",children:"try_sum(expr)"})}),(0,a.jsx)(n.td,{children:"Returns the sum calculated from values of a group, NULL if there is an overflow."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/var_pop.html",children:"var_pop(expr)"})}),(0,a.jsx)(n.td,{children:"Returns the population variance calculated from values of a group."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/var_samp.html",children:"var_samp(expr)"})}),(0,a.jsx)(n.td,{children:"Returns the sample variance calculated from values of a group."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/variance.html",children:"variance(expr)"})}),(0,a.jsx)(n.td,{children:"Returns the sample variance calculated from values of a group."})]})]})]}),"\n",(0,a.jsx)(n.h3,{id:"count_if",children:"COUNT_IF"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"SELECT\nCOUNT_IF(col1 = 'abc' AND col2 IN ('abc', 'xyz')) AS cUser\nFROM table_name\nWHERE status = 'ACTIVE'\n"})}),"\n",(0,a.jsx)(n.h2,{id:"links",children:"Links"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"/languages/sql/dql-data-query-language/window-functions",children:"Window Functions"})})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},511151:(e,n,s)=>{s.d(n,{Z:()=>c,a:()=>l});var a=s(667294);const r={},t=a.createContext(r);function l(e){const n=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);