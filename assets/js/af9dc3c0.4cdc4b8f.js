"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[47070],{599671:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>o,frontMatter:()=>d,metadata:()=>i,toc:()=>t});const i=JSON.parse('{"id":"computer-science/system-design/addressing-failures","title":"Addressing Failures","description":"Cascading Failures","source":"@site/docs/computer-science/system-design/addressing-failures.md","sourceDirName":"computer-science/system-design","slug":"/computer-science/system-design/addressing-failures","permalink":"/computer-science/system-design/addressing-failures","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/computer-science/system-design/addressing-failures.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1701793554000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"System Design","permalink":"/computer-science/system-design/"},"next":{"title":"API Gateway","permalink":"/computer-science/system-design/api-gateway"}}');var r=s(474848),l=s(28453);const d={},a="Addressing Failures",c={},t=[{value:"Cascading Failures",id:"cascading-failures",level:2},{value:"Causes",id:"causes",level:2},{value:"Prevention",id:"prevention",level:2},{value:"Load Shedding",id:"load-shedding",level:2},{value:"Triggering Conditions for Cascading Failures",id:"triggering-conditions-for-cascading-failures",level:2},{value:"Testing for Cascading Failures",id:"testing-for-cascading-failures",level:2},{value:"Immediate Steps to Address Cascading Failures",id:"immediate-steps-to-address-cascading-failures",level:2},{value:"Reference",id:"reference",level:2}];function h(e){const n={a:"a",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"addressing-failures",children:"Addressing Failures"})}),"\n",(0,r.jsx)(n.h2,{id:"cascading-failures",children:"Cascading Failures"}),"\n",(0,r.jsxs)(n.p,{children:["A cascading failure is a failure that grows over time as a result of positive feedback.",(0,r.jsx)(n.a,{href:"https://landing.google.com/sre/book/chapters/addressing-cascading-failures.html#id-GbduZFnh9",children:"^107^"})," It can occur when a portion of an overall system fails, increasing the probability that other portions of the system fail. For example, a single replica for a service can fail due to overload, increasing load on remaining replicas and increasing their probability of failing, causing a domino effect that takes down all the replicas for a service."]}),"\n",(0,r.jsx)(n.h2,{id:"causes",children:"Causes"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Server Overload"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Resource Exhaustion"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"CPU"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Increased number of in-flight requests"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Excessively long queue lengths"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Thread starvation"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"CPU or request starvation"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Missed RPC Deadlines"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Reduced CPU caching benefits"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Memory"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Dying tasks"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Increases rate of Garbage Collection (GC), resulting in increased CPU Usage"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Reduction in cache hit rates"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Threads"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"File Descriptors"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Dependencies among resources"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Service Unavailability"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"prevention",children:"Prevention"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Load test the server's capacity limits, and test the failure mode for overload"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Serve degraded results"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Instrument the server to reject requests when overloaded"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Instrument higher-level systems to reject requests, rather than overloading servers"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Perform capacity planning"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Queue Management"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Load Shedding and Graceful Degradation"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"load-shedding",children:"Load Shedding"}),"\n",(0,r.jsx)(n.p,{children:"The idea is to ignore some requests rather than crashing a system and making it fail to serve any request."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"image",src:s(724798).A+"",width:"818",height:"265"})}),"\n",(0,r.jsxs)(n.ol,{start:"8",children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Retries"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Latency and Deadlines"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Picking a Deadline"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Missing Deadlines"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Deadline Propagation"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Cancellation Propagation"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Bimodal Latency"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Slow Startup and Cold Caching"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Always go Downward in the Stack"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"triggering-conditions-for-cascading-failures",children:"Triggering Conditions for Cascading Failures"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Process Death"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Process Updates"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"New Rollouts"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Organic Growth"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Planned Changes, Drains, or Turndowns"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Request Profile Changes"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Resource Limits"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"testing-for-cascading-failures",children:"Testing for Cascading Failures"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Test Until Failure and Beyond"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Test Popular Clients"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Test Noncritical Backends"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"immediate-steps-to-address-cascading-failures",children:"Immediate Steps to Address Cascading Failures"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Increase Resources"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Stop Health Check Failures/Deaths"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Restart Servers"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Drop Traffic"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Enter Degraded Modes"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Eliminate Batch Load"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Eliminate Bad Traffic"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"reference",children:"Reference"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"http://highscalability.com/blog/2018/4/25/google-addressing-cascading-failures.html",children:"http://highscalability.com/blog/2018/4/25/google-addressing-cascading-failures.html"})})]})}function o(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},724798:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/Addressing-Failures-image1-09dfbd242159d546163a10b85417fbb9.jpg"},28453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>a});var i=s(296540);const r={},l=i.createContext(r);function d(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);