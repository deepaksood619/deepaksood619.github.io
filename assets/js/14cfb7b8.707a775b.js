"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[26580],{223176:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"databases/nosql-databases/druid/commands","title":"Commands","description":"| Service             | Port |","source":"@site/docs/databases/nosql-databases/druid/commands.md","sourceDirName":"databases/nosql-databases/druid","slug":"/databases/nosql-databases/druid/commands","permalink":"/databases/nosql-databases/druid/commands","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/databases/nosql-databases/druid/commands.md","tags":[],"version":"current","lastUpdatedBy":"Deepak Sood","lastUpdatedAt":1728328563000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Cheatsheet","permalink":"/databases/nosql-databases/druid/cheatsheet"},"next":{"title":"Documentation","permalink":"/databases/nosql-databases/druid/documentation"}}');var a=s(474848),t=s(28453);const i={},d="Commands",l={},o=[{value:"Hack",id:"hack",level:2},{value:"APIs",id:"apis",level:2},{value:"Druid segment cleanup",id:"druid-segment-cleanup",level:2},{value:"Druid Commands",id:"druid-commands",level:2},{value:"Dashboards",id:"dashboards",level:3},{value:"Debugging",id:"debugging",level:3},{value:"SQL Commands",id:"sql-commands",level:2},{value:"Dashboard",id:"dashboard",level:2},{value:"Ingestion Spec",id:"ingestion-spec",level:2},{value:"Important Points",id:"important-points",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"commands",children:"Commands"})}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:(0,a.jsx)(n.strong,{children:"Service"})}),(0,a.jsx)(n.th,{children:(0,a.jsx)(n.strong,{children:"Port"})})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"druid-zookeeper"})}),(0,a.jsx)(n.td,{children:"2181"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"druid-coordinator"})}),(0,a.jsx)(n.td,{children:"8081"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"druid-overlord"})}),(0,a.jsx)(n.td,{children:"8090"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"druid-middlemanager"})}),(0,a.jsx)(n.td,{children:"8091"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"druid-historical"})}),(0,a.jsx)(n.td,{children:"8083"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"druid-broker"})}),(0,a.jsx)(n.td,{children:"8082"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"druid-router"})}),(0,a.jsx)(n.td,{children:"8888"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"druid-postgresql"})}),(0,a.jsx)(n.td,{children:"5432"})]})]})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"DRUID_ZOOKEEPER_IP=172.18.3.2\nDRUID_POSTGRESQL_IP=172.18.3.3\nDRUID_COORDINATOR_IP=172.18.3.4\nDRUID_HISTORICAL_IP=172.18.3.5\nDRUID_BROKER_IP=172.18.3.6\nDRUID_INIT_IP=172.18.3.6\nDRUID_OVERLORD_IP=172.18.3.7\nDRUID_MIDDLEMANAGER_IP=172.18.3.8\nDRUID_ROUTER_IP=172.18.3.15\n"})}),"\n",(0,a.jsx)(n.h2,{id:"hack",children:"Hack"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"docker exec -it druid-historical bash\nmkdir /var/druid/tmp\n"})}),"\n",(0,a.jsx)(n.h2,{id:"apis",children:"APIs"}),"\n",(0,a.jsx)(n.p,{children:"Historical"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"http://localhost:8083/druid/historical/v1/readiness",children:"http://localhost:8083/druid/historical/v1/readiness"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"http://localhost:8083/druid/historical/v1/loadstatus",children:"http://localhost:8083/druid/historical/v1/loadstatus"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"http://localhost:8083/status",children:"http://localhost:8083/status"})}),"\n",(0,a.jsx)(n.h2,{id:"druid-segment-cleanup",children:"Druid segment cleanup"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"docker exec -it druid-historical bash\n\n## # first remove segment-cache and then segments\n\ncd /var/druid/segment-cache and cd /var/druid/segments\nremove last 20 days of segments\n"})}),"\n",(0,a.jsx)(n.h2,{id:"druid-commands",children:"Druid Commands"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"#query top pages from wikipedia dataset\ncurl -X 'POST' -H 'Content-Type:application/json' -d @wikipedia-top-pages.json [http://localhost:8082/druid/v2?pretty](http://localhost:8082/druid/v2/?pretty)\n\n#submit supervisor spec to kafka-indexing-service\ncurl -XPOST -H'Content-Type: application/json' -d @wikipedia-kafka-supervisor.json http://localhost:8090/druid/indexer/v1/supervisor\n\ncurl -XPOST -H'Content-Type: application/json' -d @smap-kafka-supervisor-spec.json http://localhost:8090/druid/indexer/v1/supervisor\n"})}),"\n",(0,a.jsx)(n.h3,{id:"dashboards",children:"Dashboards"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"8081: coordinator (for seeing clusters and datasources"}),"\n",(0,a.jsx)(n.li,{children:"8090: overlord (for managing supervisor spec and tasks)"}),"\n",(0,a.jsxs)(n.li,{children:["Others","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"8082: broker"}),"\n",(0,a.jsx)(n.li,{children:"8083: historical"}),"\n",(0,a.jsx)(n.li,{children:"8091: middlemanager"}),"\n",(0,a.jsx)(n.li,{children:"2181: zookeeper"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"debugging",children:"Debugging"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"stop druid-historical\ncd /var/lib/docker/volumes/druid-volume/_data/segment-cache\nremove docker segment-cache\nrm -rf *\nstart druid-historical\n"})}),"\n",(0,a.jsx)(n.h2,{id:"sql-commands",children:"SQL Commands"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"# find duplicate count\nSELECT controller_name, site_name, count(reading) as DuplicateCount FROM (SELECT controller_name, stream_path, site_name, reading, __time, count(reading) as readingCount FROM \"live-Samhi\"\n  WHERE __time BETWEEN TIMESTAMP '2019-11-18 08:00:00' AND TIMESTAMP '2019-11-19 08:00:00'\n  AND stream_path LIKE '/Samhi-41%'\n  GROUP BY __time, stream_path, reading, site_name, controller_name\n  HAVING readingCount > 1\n  ORDER BY __time DESC)\n  GROUP BY site_name, controller_name\n\n# find duplicate values\nSELECT controller_name, stream_path, site_name, reading, __time, count(reading) as readingCount FROM \"live-Samhi\"\n  WHERE __time BETWEEN TIMESTAMP '2019-11-18 08:00:00' AND TIMESTAMP '2019-11-19 09:00:00'\n  AND stream_path LIKE '/Samhi-41%'\n  GROUP BY __time, stream_path, reading, site_name, controller_name\n  HAVING readingCount > 1\nORDER BY __time DESC\n"})}),"\n",(0,a.jsx)(n.h2,{id:"dashboard",children:"Dashboard"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"http://10.9.1.21:8888/unified-console.html",children:"http://10.9.1.21:8888/unified-console.html"})}),"\n",(0,a.jsx)(n.h2,{id:"ingestion-spec",children:"Ingestion Spec"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "type": "kafka",\n  "dataSchema": {\n    "dataSource": "live-Samhi",\n    "parser": {\n      "type": "string",\n      "parseSpec": {\n        "format": "json",\n        "timestampSpec": {\n          "column": "time",\n          "format": "auto"\n        },\n        "dimensionsSpec": {\n          "spatialDimensions": [\n            {\n              "dimName": "coordinates",\n              "dims": [\n                "site_latitude",\n                "site_longitude"\n              ]\n            }\n          ],\n          "dimensions": [\n            "uuid",\n            "path",\n            {\n              "name": "reading",\n              "type": "float"\n            },\n            "stream_path",\n            "stream_uuid",\n            "device_tags",\n            "device_is_virtual",\n            "device_id",\n            "device_display_name",\n            "device_path",\n            "device_type",\n            "device_category",\n            "physical_parameter_display",\n            "physical_parameter_unit",\n            "physical_parameter_type",\n            "physical_parameter_name",\n            "site_longitude",\n            "site_latitude",\n            "site_name",\n            "customer_name",\n            "client_name",\n            "controller_name",\n            "site_Size",\n            "site_Floors",\n            "site_site_code",\n            "site_Hotel_Type",\n            "site_Display_Name",\n            "metric_tod_metadata",\n            "metric_operational_metadata",\n            "live_parent",\n            "live_region",\n            "live_purpose",\n            "live_pie_breakup",\n            "live_room_number",\n            "live_room_direction"\n          ]\n        }\n      }\n    },\n    "metricsSpec": [\n      {\n        "type": "count",\n        "name": "count"\n      }\n    ],\n    "granularitySpec": {\n      "type": "uniform",\n      "segmentGranularity": "HOUR",\n      "rollup": false\n    }\n  },\n  "tuningConfig": {\n    "type": "kafka",\n    "maxSavedParseExceptions": 1000,\n    "forceExtendableShardSpecs": true\n  },\n  "ioConfig": {\n    "topic": "druid_telemetry_data_Samhi",\n    "taskCount": 1,\n    "replicas": 1,\n    "taskDuration": "PT120S",\n    "completionTimeout": "PT5M",\n    "useEarliestOffset": true,\n    "consumerProperties": {\n      "bootstrap.servers": "kafka0.abc.com:31090,kafka1.abc.com:31091,kafka2.abc.com:31092"\n    }\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"important-points",children:"Important Points"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Compression - 1:10"}),"\n",(0,a.jsx)(n.li,{children:"Number of hyper threads"}),"\n",(0,a.jsxs)(n.li,{children:["Concurrency of queries","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"4 gb/s per hyperthread - how much data you are consuming"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Servers","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"I3.extra large - 3 data server"}),"\n",(0,a.jsx)(n.li,{children:"1 middlemaanger"}),"\n",(0,a.jsx)(n.li,{children:"2 query server - m5 large"}),"\n",(0,a.jsx)(n.li,{children:"Master - m5 large"}),"\n",(0,a.jsx)(n.li,{children:"m4.xlarge"}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>d});var r=s(296540);const a={},t=r.createContext(a);function i(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);