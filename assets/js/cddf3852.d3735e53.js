"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[44569],{611283:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>a,toc:()=>h});var r=t(785893),i=t(511151);const o={},s="Generators",a={id:"python/python-intro/generators",title:"Generators",description:"- Generator functions allow you to declare a function that behaves like an iterator.",source:"@site/docs/python/python-intro/generators.md",sourceDirName:"python/python-intro",slug:"/python/python-intro/generators",permalink:"/python/python-intro/generators",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/python/python-intro/generators.md",tags:[],version:"current",lastUpdatedAt:1701793554,formattedLastUpdatedAt:"Dec 5, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Functions",permalink:"/python/python-intro/functions"},next:{title:"Input Output Template",permalink:"/python/python-intro/input-output-template"}},p={},h=[{value:"Using Generator Expression (introduced with PEP 289)",id:"using-generator-expression-introduced-with-pep-289",level:2},{value:"References",id:"references",level:2}];function c(e){const n={a:"a",h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"generators",children:"Generators"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Generator functions allow you to declare a function that behaves like an iterator."}),"\n",(0,r.jsx)(n.li,{children:"They allow programmers to make an iterator in a fast, easy, and clean way."}),"\n",(0,r.jsx)(n.li,{children:"Generators introduce theyieldstatement to Python. It works a bit likereturnbecause it returns a value."}),"\n",(0,r.jsx)(n.li,{children:"The difference is thatit saves the stateof the function. The next time the function is called, execution continues fromwhere it left off, with thesame variable valuesit had before yielding."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"If we transform ourPrimesiterator into a generator, it'll look like this:"}),"\n",(0,r.jsx)(n.p,{children:"def Primes(max):"}),"\n",(0,r.jsx)(n.p,{children:"number = 1"}),"\n",(0,r.jsx)(n.p,{children:"while number < max:"}),"\n",(0,r.jsx)(n.p,{children:"number += 1"}),"\n",(0,r.jsx)(n.p,{children:"if check_prime(number):"}),"\n",(0,r.jsx)(n.p,{children:"yield number"}),"\n",(0,r.jsx)(n.p,{children:"primes = Primes(100000000000)"}),"\n",(0,r.jsx)(n.p,{children:"print(primes)"}),"\n",(0,r.jsx)(n.p,{children:"for x in primes:"}),"\n",(0,r.jsx)(n.p,{children:"print(x)"}),"\n",(0,r.jsxs)(n.h2,{id:"using-generator-expression-introduced-with-pep-289",children:["Using Generator Expression (introduced with ",(0,r.jsx)(n.a,{href:"https://www.python.org/dev/peps/pep-0289/",children:"PEP 289"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"primes = (i for i in range(2, 100000000000) if check_prime(i))"}),"\n",(0,r.jsx)(n.p,{children:"print(primes)"}),"\n",(0,r.jsx)(n.p,{children:"for x in primes:"}),"\n",(0,r.jsx)(n.p,{children:"print(x)"}),"\n",(0,r.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://medium.freecodecamp.org/how-and-why-you-should-use-python-generators-f6fb56650888",children:"https://medium.freecodecamp.org/how-and-why-you-should-use-python-generators-f6fb56650888"})})]})}function l(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},511151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>s});var r=t(667294);const i={},o=r.createContext(i);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);