"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[69553],{693768:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"databases/nosql-databases/cassandra/commands","title":"Commands","description":"cqlsh - Cassandra cli tools","source":"@site/docs/databases/nosql-databases/cassandra/commands.md","sourceDirName":"databases/nosql-databases/cassandra","slug":"/databases/nosql-databases/cassandra/commands","permalink":"/databases/nosql-databases/cassandra/commands","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/databases/nosql-databases/cassandra/commands.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1705054005000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Cassandra","permalink":"/databases/nosql-databases/cassandra/"},"next":{"title":"Consistency","permalink":"/databases/nosql-databases/cassandra/consistency"}}');var i=n(474848),a=n(28453);const r={},o="Commands",l={},c=[{value:"cqlsh - Cassandra cli tools",id:"cqlsh---cassandra-cli-tools",level:2},{value:"nodetool",id:"nodetool",level:2}];function d(e){const t={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"commands",children:"Commands"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"docker run --name cas1 -p 9042:9042 -e CASSANDRA_CLUSTER_NAME=MyCluster -e CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch -e CASSANDRA_DC=datacenter1 -d cassandra\n\ndocker run --name cas2 -e CASSANDRA_SEEDS=\"$(docker inspect --format='{{ .NetworkSettings.IPAddress }}' cas1)\" -e CASSANDRA_CLUSTER_NAME=MyCluster -e CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch -e CASSANDRA_DC=datacenter1 -d cassandra:latest\n\ndocker exec -it cas1 nodetool status\n\ndocker exec -it cas1 nodetool ring\n\ndocker exec -it cas1 nodetool getendpoints killrvideo videos '1645ea59-14bd-11e5-a993-8138354b7e31'\n\ndocker exec -it cas2 cqlsh\n"})}),"\n",(0,i.jsx)(t.h2,{id:"cqlsh---cassandra-cli-tools",children:"cqlsh - Cassandra cli tools"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"brew install cassandra\n\n./bin/cqlsh\n"})}),"\n",(0,i.jsx)(t.h2,{id:"nodetool",children:"nodetool"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"assassinate - Forcefully remove a dead node without re-replicating any data. Use as a last resort if you cannot removenode"}),"\n",(0,i.jsx)(t.li,{children:"bootstrap - Monitor/manage node's bootstrap process"}),"\n",(0,i.jsx)(t.li,{children:"cleanup - Triggers the immediate cleanup of keys no longer belonging to a node. By default, clean all keyspaces"}),"\n",(0,i.jsx)(t.li,{children:"clearsnapshot - Remove the snapshot with the given name from the given keyspaces. If no snapshotName is specified we will remove all snapshots"}),"\n",(0,i.jsx)(t.li,{children:"compact - Force a (major) compaction on one or more tables or user-defined compaction on given SSTables"}),"\n",(0,i.jsx)(t.li,{children:"compactionhistory - Print history of compaction"}),"\n",(0,i.jsx)(t.li,{children:"compactionstats - Print statistics on compactions"}),"\n",(0,i.jsxs)(t.li,{children:["decommission - Decommission the ",(0,i.jsx)(t.em,{children:"node I am connecting to"})]}),"\n",(0,i.jsx)(t.li,{children:"describecluster - Print the name, snitch, partitioner and schema version of a cluster"}),"\n",(0,i.jsx)(t.li,{children:"describering - Shows the token ranges info of a given keyspace"}),"\n",(0,i.jsx)(t.li,{children:"disableautocompaction - Disable autocompaction for the given keyspace and table"}),"\n",(0,i.jsx)(t.li,{children:"disablebackup - Disable incremental backup"}),"\n",(0,i.jsx)(t.li,{children:"disablebinary - Disable native transport (binary protocol)"}),"\n",(0,i.jsx)(t.li,{children:"disablegossip - Disable gossip (effectively marking the node down)"}),"\n",(0,i.jsx)(t.li,{children:"disablehandoff - Disable storing hinted handoffs"}),"\n",(0,i.jsx)(t.li,{children:"disablehintsfordc - Disable hints for a data center"}),"\n",(0,i.jsx)(t.li,{children:"disablethrift - Disable thrift server"}),"\n",(0,i.jsx)(t.li,{children:"drain - Drain the node (stop accepting writes and flush all tables)"}),"\n",(0,i.jsx)(t.li,{children:"enableautocompaction - Enable autocompaction for the given keyspace and table"}),"\n",(0,i.jsx)(t.li,{children:"enablebackup - Enable incremental backup"}),"\n",(0,i.jsx)(t.li,{children:"enablebinary - Reenable native transport (binary protocol)"}),"\n",(0,i.jsx)(t.li,{children:"enablegossip - Reenable gossip"}),"\n",(0,i.jsx)(t.li,{children:"enablehandoff - Reenable future hints storing on the current node"}),"\n",(0,i.jsx)(t.li,{children:"enablehintsfordc - Enable hints for a data center that was previsouly disabled"}),"\n",(0,i.jsx)(t.li,{children:"enablethrift - Reenable thrift server"}),"\n",(0,i.jsx)(t.li,{children:"failuredetector - Shows the failure detector information for the cluster"}),"\n",(0,i.jsx)(t.li,{children:"flush - Flush one or more tables"}),"\n",(0,i.jsx)(t.li,{children:"garbagecollect - Remove deleted data from one or more tables"}),"\n",(0,i.jsx)(t.li,{children:"gcstats - Print GC Statistics"}),"\n",(0,i.jsx)(t.li,{children:"getcompactionthreshold - Print min and max compaction thresholds for a given table"}),"\n",(0,i.jsx)(t.li,{children:"getcompactionthroughput - Print the MB/s throughput cap for compaction in the system"}),"\n",(0,i.jsx)(t.li,{children:"getconcurrentcompactors - Get the number of concurrent compactors in the system."}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"getendpoints - Print the end points that owns the key"})," - returns the IP addresses of the node(s)which store the partitions withthe respective partition key value"]}),"\n",(0,i.jsx)(t.li,{children:"getinterdcstreamthroughput - Print the Mb/s throughput cap for inter-datacenter streaming in the system"}),"\n",(0,i.jsx)(t.li,{children:"getlogginglevels - Get the runtime logging levels"}),"\n",(0,i.jsx)(t.li,{children:"getsstables - Print the sstable filenames that own the key"}),"\n",(0,i.jsx)(t.li,{children:"getstreamthroughput - Print the Mb/s throughput cap for streaming in the system"}),"\n",(0,i.jsx)(t.li,{children:"gettimeout - Print the timeout of the given type in ms"}),"\n",(0,i.jsx)(t.li,{children:"gettraceprobability - Print the current trace probability value"}),"\n",(0,i.jsx)(t.li,{children:"gossipinfo - Shows the gossip information for the cluster"}),"\n",(0,i.jsx)(t.li,{children:"help - Display help information"}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.strong,{children:"info - Print node information (uptime, load, ...)"})}),"\n",(0,i.jsx)(t.li,{children:"invalidatecountercache - Invalidate the counter cache"}),"\n",(0,i.jsx)(t.li,{children:"invalidatekeycache - Invalidate the key cache"}),"\n",(0,i.jsx)(t.li,{children:"invalidaterowcache - Invalidate the row cache"}),"\n",(0,i.jsx)(t.li,{children:"join - Join the ring"}),"\n",(0,i.jsx)(t.li,{children:"listsnapshots - Lists all the snapshots along with the size on disk and true size."}),"\n",(0,i.jsx)(t.li,{children:"move - Move node on the token ring to a new token"}),"\n",(0,i.jsx)(t.li,{children:"netstats - Print network information on provided host (connecting node by default)"}),"\n",(0,i.jsx)(t.li,{children:"pausehandoff - Pause hints delivery process"}),"\n",(0,i.jsx)(t.li,{children:"proxyhistograms - Print statistic histograms for network operations"}),"\n",(0,i.jsx)(t.li,{children:"rangekeysample - Shows the sampled keys held across all keyspaces"}),"\n",(0,i.jsx)(t.li,{children:"rebuild - Rebuild data by streaming from other nodes (similarly to bootstrap)"}),"\n",(0,i.jsx)(t.li,{children:"rebuild_index - A full rebuild of native secondary indexes for a given table"}),"\n",(0,i.jsx)(t.li,{children:"refresh - Load newly placed SSTables to the system without restart"}),"\n",(0,i.jsx)(t.li,{children:"refreshsizeestimates - Refresh system.size_estimates"}),"\n",(0,i.jsx)(t.li,{children:"reloadlocalschema - Reload local node schema from system tables"}),"\n",(0,i.jsx)(t.li,{children:"reloadtriggers - Reload trigger classes"}),"\n",(0,i.jsx)(t.li,{children:"relocatesstables - Relocates sstables to the correct disk"}),"\n",(0,i.jsx)(t.li,{children:"removenode - Show status of current node removal, force completion of pending removal or remove provided ID"}),"\n",(0,i.jsx)(t.li,{children:"repair - Repair one or more tables"}),"\n",(0,i.jsx)(t.li,{children:"replaybatchlog - Kick off batchlog replay and wait for finish"}),"\n",(0,i.jsx)(t.li,{children:"resetlocalschema - Reset node's local schema and resync"}),"\n",(0,i.jsx)(t.li,{children:"resumehandoff - Resume hints delivery process"}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.strong,{children:"ring - Print information about the token ring"})}),"\n",(0,i.jsx)(t.li,{children:"scrub - Scrub (rebuild sstables for) one or more tables"}),"\n",(0,i.jsx)(t.li,{children:"setcachecapacity - Set global key, row, and counter cache capacities (in MB units)"}),"\n",(0,i.jsx)(t.li,{children:"setcachekeystosave - Set number of keys saved by each cache for faster post-restart warmup. 0 to disable"}),"\n",(0,i.jsx)(t.li,{children:"setcompactionthreshold - Set min and max compaction thresholds for a given table"}),"\n",(0,i.jsx)(t.li,{children:"setcompactionthroughput - Set the MB/s throughput cap for compaction in the system, or 0 to disable throttling"}),"\n",(0,i.jsx)(t.li,{children:"setconcurrentcompactors - Set number of concurrent compactors in the system."}),"\n",(0,i.jsx)(t.li,{children:"sethintedhandoffthrottlekb - Set hinted handoff throttle in kb per second, per delivery thread."}),"\n",(0,i.jsx)(t.li,{children:"setinterdcstreamthroughput - Set the Mb/s throughput cap for inter-datacenter streaming in the system, or 0 to disable throttling"}),"\n",(0,i.jsx)(t.li,{children:"setlogginglevel - Set the log level threshold for a given class. If both class and level are empty/null, it will reset to the initial configuration"}),"\n",(0,i.jsx)(t.li,{children:"setstreamthroughput - Set the Mb/s throughput cap for streaming in the system, or 0 to disable throttling"}),"\n",(0,i.jsx)(t.li,{children:"settimeout - Set the specified timeout in ms, or 0 to disable timeout"}),"\n",(0,i.jsx)(t.li,{children:"settraceprobability - Sets the probability for tracing any given request to value. 0 disables, 1 enables for all requests, 0 is the default"}),"\n",(0,i.jsx)(t.li,{children:"snapshot - Take a snapshot of specified keyspaces or a snapshot of the specified table"}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.strong,{children:"status - Print cluster information (state, load, IDs, ...)"})}),"\n",(0,i.jsx)(t.li,{children:"statusbackup - Status of incremental backup"}),"\n",(0,i.jsx)(t.li,{children:"statusbinary - Status of native transport (binary protocol)"}),"\n",(0,i.jsx)(t.li,{children:"statusgossip - Status of gossip"}),"\n",(0,i.jsx)(t.li,{children:"statushandoff - Status of storing future hints on the current node"}),"\n",(0,i.jsx)(t.li,{children:"statusthrift - Status of thrift server"}),"\n",(0,i.jsx)(t.li,{children:"stop - Stop compaction"}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.strong,{children:"stopdaemon - Stop cassandra daemon"})}),"\n",(0,i.jsx)(t.li,{children:"tablehistograms - Print statistic histograms for a given table"}),"\n",(0,i.jsx)(t.li,{children:"tablestats - Print statistics on tables"}),"\n",(0,i.jsx)(t.li,{children:"toppartitions - Sample and print the most active partitions for a given column family"}),"\n",(0,i.jsx)(t.li,{children:"tpstats - Print usage statistics of thread pools"}),"\n",(0,i.jsx)(t.li,{children:"truncatehints - Truncate all hints on the local node, or truncate hints for the endpoint(s) specified."}),"\n",(0,i.jsx)(t.li,{children:"upgradesstables - Rewrite sstables (for the requested tables) that are not on the current version (thus upgrading them to said current version)"}),"\n",(0,i.jsx)(t.li,{children:"verify - Verify (check data checksum for) one or more tables"}),"\n",(0,i.jsx)(t.li,{children:"version - Print cassandra version"}),"\n",(0,i.jsx)(t.li,{children:"viewbuildstatus - Show progress of a materialized view build"}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var s=n(296540);const i={},a=s.createContext(i);function r(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);