"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[32711],{678779:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"languages/others/toml","title":"TOML","description":"Tom\'s Obvious, Minimal Language","source":"@site/docs/languages/others/toml.md","sourceDirName":"languages/others","slug":"/languages/others/toml","permalink":"/languages/others/toml","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/languages/others/toml.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1701793554000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"TLA+","permalink":"/languages/others/tla-plus"},"next":{"title":"Web Assembly","permalink":"/languages/others/web-assembly"}}');var a=s(474848),i=s(28453);const l={},r="TOML",o={},d=[{value:"Example",id:"example",level:2},{value:"This is a TOML document",id:"this-is-a-toml-document",level:2},{value:"Indentation (tabs and/or spaces) is allowed but not required",id:"indentation-tabs-andor-spaces-is-allowed-but-not-required",level:2},{value:"Line breaks are OK when inside arrays",id:"line-breaks-are-ok-when-inside-arrays",level:2},{value:"Spec",id:"spec",level:2},{value:"Uses",id:"uses",level:2},{value:"References",id:"references",level:2}];function c(e){const n={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"toml",children:"TOML"})}),"\n",(0,a.jsx)(n.p,{children:"Tom's Obvious, Minimal Language"}),"\n",(0,a.jsx)(n.p,{children:"TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics. TOML is designed to map unambiguously to a hash table. TOML should be easy to parse into data structures in a wide variety of languages."}),"\n",(0,a.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(n.h2,{id:"this-is-a-toml-document",children:"This is a TOML document"}),"\n",(0,a.jsx)(n.p,{children:'title = "TOML Example"'}),"\n",(0,a.jsx)(n.p,{children:'[owner]\nname = "Tom Preston-Werner"\ndob = 1979-05-27T07:32:00-08:00 # First class dates'}),"\n",(0,a.jsx)(n.p,{children:'[database]\nserver = "192.168.1.1"\nports = [ 8001, 8001, 8002 ]\nconnection_max = 5000\nenabled = true'}),"\n",(0,a.jsx)(n.p,{children:"[servers]"}),"\n",(0,a.jsx)(n.h2,{id:"indentation-tabs-andor-spaces-is-allowed-but-not-required",children:"Indentation (tabs and/or spaces) is allowed but not required"}),"\n",(0,a.jsx)(n.p,{children:'[servers.alpha]\nip = "10.0.0.1"\ndc = "eqdc10"'}),"\n",(0,a.jsx)(n.p,{children:'[servers.beta]\nip = "10.0.0.2"\ndc = "eqdc10"'}),"\n",(0,a.jsx)(n.p,{children:'[clients]\ndata = [ ["gamma", "delta"], [1, 2] ]'}),"\n",(0,a.jsx)(n.h2,{id:"line-breaks-are-ok-when-inside-arrays",children:"Line breaks are OK when inside arrays"}),"\n",(0,a.jsx)(n.p,{children:'hosts = [\n"alpha",\n"omega"\n]'}),"\n",(0,a.jsx)(n.h2,{id:"spec",children:"Spec"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"TOML is case sensitive."}),"\n",(0,a.jsx)(n.li,{children:"A TOML file must be a valid UTF-8 encoded Unicode document."}),"\n",(0,a.jsx)(n.li,{children:"Whitespace means tab (0x09) or space (0x20)."}),"\n",(0,a.jsx)(n.li,{children:"Newline means LF (0x0A) or CRLF (0x0D0A)."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"uses",children:"Uses"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Telegraf Configuration"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://github.com/toml-lang/toml",children:"https://github.com/toml-lang/toml"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://learnxinyminutes.com/docs/toml",children:"https://learnxinyminutes.com/docs/toml"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>r});var t=s(296540);const a={},i=t.createContext(a);function l(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);