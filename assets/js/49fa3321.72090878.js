"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[82626],{75664:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>u,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var n=r(785893),s=r(511151);const a={},o="Questions",i={id:"data-structures/graph/questions",title:"Questions",description:"- Implement Breadth and Depth First Search",source:"@site/docs/data-structures/graph/questions.md",sourceDirName:"data-structures/graph",slug:"/data-structures/graph/questions",permalink:"/data-structures/graph/questions",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/data-structures/graph/questions.md",tags:[],version:"current",lastUpdatedAt:1678191863,formattedLastUpdatedAt:"Mar 7, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Intro",permalink:"/data-structures/graph/intro"},next:{title:"Undirected Graph",permalink:"/data-structures/graph/undirected-graph"}},u={},d=[];function c(t){const e={h1:"h1",li:"li",ul:"ul",...(0,s.a)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{id:"questions",children:"Questions"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:"Implement Breadth and Depth First Search"}),"\n",(0,n.jsx)(e.li,{children:"Check if a graph is a tree or not"}),"\n",(0,n.jsx)(e.li,{children:"Count number of edges in a graph"}),"\n",(0,n.jsx)(e.li,{children:"Find the shortest path between two vertices"}),"\n"]})]})}function p(t={}){const{wrapper:e}={...(0,s.a)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(c,{...t})}):c(t)}},511151:(t,e,r)=>{r.d(e,{Z:()=>i,a:()=>o});var n=r(667294);const s={},a=n.createContext(s);function o(t){const e=n.useContext(a);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function i(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:o(t.components),n.createElement(a.Provider,{value:e},t.children)}}}]);