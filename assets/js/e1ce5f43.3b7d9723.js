"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[96282],{772795:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var s=t(785893),r=t(511151);const o={},i="11. Services",a={id:"frontend/others/angularjs/11-services",title:"11. Services",description:"Service is a broad category encompassing any value, function, or feature that your application needs.",source:"@site/docs/frontend/others/angularjs/11-services.md",sourceDirName:"frontend/others/angularjs",slug:"/frontend/others/angularjs/11-services",permalink:"/frontend/others/angularjs/11-services",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/frontend/others/angularjs/11-services.md",tags:[],version:"current",lastUpdatedAt:1678191863,formattedLastUpdatedAt:"Mar 7, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"10. Directives",permalink:"/frontend/others/angularjs/10-directives"},next:{title:"12. Dependency Injection",permalink:"/frontend/others/angularjs/12-dependency-injection"}},c={},d=[];function l(e){const n={em:"em",h1:"h1",li:"li",p:"p",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"11-services",children:"11. Services"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Service"})," is a broad category encompassing any value, function, or feature that your application needs."]}),"\n",(0,s.jsx)(n.p,{children:"Almost anything can be a service. A service is typically a class with a narrow, well-defined purpose. It should do something specific and do it well."}),"\n",(0,s.jsx)(n.p,{children:"Examples include:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"logging service"}),"\n",(0,s.jsx)(n.li,{children:"data service"}),"\n",(0,s.jsx)(n.li,{children:"message bus"}),"\n",(0,s.jsx)(n.li,{children:"tax calculator"}),"\n",(0,s.jsx)(n.li,{children:"application configuration"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Component classes should be lean. They don't fetch data from the server, validate user input, or log directly to the console. They delegate such tasks to services."}),"\n",(0,s.jsxs)(n.p,{children:["A component's job is to enable the user experience and nothing more. It mediates between the view (rendered by the template) and the application logic (which often includes some notion of a ",(0,s.jsx)(n.em,{children:"model"}),"). A good component presents properties and methods for data binding. It delegates everything nontrivial to services."]})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},511151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>i});var s=t(667294);const r={},o=s.createContext(r);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);