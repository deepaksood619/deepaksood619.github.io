"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[76338],{415789:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>l,frontMatter:()=>a,metadata:()=>d,toc:()=>o});var u=r(785893),n=r(511151);const a={},s="Dequeue",d={id:"data-structures/linear-data-structure/dequeue",title:"Dequeue",description:"Dequeue",source:"@site/docs/data-structures/linear-data-structure/dequeue.md",sourceDirName:"data-structures/linear-data-structure",slug:"/data-structures/linear-data-structure/dequeue",permalink:"/data-structures/linear-data-structure/dequeue",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/data-structures/linear-data-structure/dequeue.md",tags:[],version:"current",lastUpdatedAt:1681237065,formattedLastUpdatedAt:"Apr 11, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Circular Buffer",permalink:"/data-structures/linear-data-structure/circular-buffer"},next:{title:"Indexed Priority Queue",permalink:"/data-structures/linear-data-structure/indexed-priority-queue"}},i={},o=[{value:"Dequeue",id:"dequeue-1",level:2}];function c(e){const t={em:"em",h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,n.a)(),...e.components};return(0,u.jsxs)(u.Fragment,{children:[(0,u.jsx)(t.h1,{id:"dequeue",children:"Dequeue"}),"\n",(0,u.jsx)(t.h2,{id:"dequeue-1",children:"Dequeue"}),"\n",(0,u.jsxs)(t.p,{children:["A ",(0,u.jsx)(t.em,{children:"double-ended queue"})," or ",(0,u.jsx)(t.em,{children:"deque"}),' (pronounced "deck") is a generalization of a stack and a queue that supports adding and removing items from either the front or the back of the data structure']}),"\n",(0,u.jsx)(t.p,{children:"Dequeue - double ended queue"}),"\n",(0,u.jsxs)(t.ul,{children:["\n",(0,u.jsx)(t.li,{children:"Insert items from any end"}),"\n",(0,u.jsx)(t.li,{children:"Get items from any end"}),"\n"]})]})}function l(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,u.jsx)(t,{...e,children:(0,u.jsx)(c,{...e})}):c(e)}},511151:(e,t,r)=>{r.d(t,{Z:()=>d,a:()=>s});var u=r(667294);const n={},a=u.createContext(n);function s(e){const t=u.useContext(a);return u.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),u.createElement(a.Provider,{value:t},e.children)}}}]);