"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[52148],{847168:(t,e,s)=>{s.r(e),s.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var r=s(785893),n=s(511151);const i={},o="System Sort",a={id:"algorithms/searching-sorting/system-sort",title:"System Sort",description:"Java System Sort - Arrays.sort()",source:"@site/docs/algorithms/searching-sorting/system-sort.md",sourceDirName:"algorithms/searching-sorting",slug:"/algorithms/searching-sorting/system-sort",permalink:"/algorithms/searching-sorting/system-sort",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/algorithms/searching-sorting/system-sort.md",tags:[],version:"current",lastUpdatedAt:1707138374,formattedLastUpdatedAt:"Feb 5, 2024",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Shuffle Sort",permalink:"/algorithms/searching-sorting/shuffle-sort"},next:{title:"TimSort",permalink:"/algorithms/searching-sorting/timsort"}},l={},c=[];function d(t){const e={h1:"h1",li:"li",p:"p",ul:"ul",...(0,n.a)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{id:"system-sort",children:"System Sort"}),"\n",(0,r.jsx)(e.p,{children:"Java System Sort - Arrays.sort()"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Has different method for each primitive type"}),"\n",(0,r.jsx)(e.li,{children:"Has a method for data types that implement Comparable"}),"\n",(0,r.jsx)(e.li,{children:"Has a method that uses a Comparator"}),"\n",(0,r.jsx)(e.li,{children:"Uses tuned quicksort for primitive types; tuned mergesort for objects"}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:"Quicksort"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Cutoff to insertion sort for small subarrays"}),"\n",(0,r.jsx)(e.li,{children:"Partitioning scheme: Bentley-Mcllroy 3-way partitioning"}),"\n",(0,r.jsxs)(e.li,{children:["Partitioning item","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Small arrays: middle entry"}),"\n",(0,r.jsx)(e.li,{children:"Medium arrays: median of 3"}),"\n",(0,r.jsxs)(e.li,{children:["Large arrays: Tukey's ninther (median of the median of 3 samples, each of 3 entries)","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Approximate the median of 9"}),"\n",(0,r.jsx)(e.li,{children:"Uses at most 12 compares"}),"\n",(0,r.jsx)(e.li,{children:"Better partitioning than random shuffle and less costly"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]})}function m(t={}){const{wrapper:e}={...(0,n.a)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(d,{...t})}):d(t)}},511151:(t,e,s)=>{s.d(e,{Z:()=>a,a:()=>o});var r=s(667294);const n={},i=r.createContext(n);function o(t){const e=r.useContext(i);return r.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:o(t.components),r.createElement(i.Provider,{value:e},t.children)}}}]);