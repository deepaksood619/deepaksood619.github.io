"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[55349],{58316:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>h});var r=t(785893),n=t(511151);const o={},a="Halting Problem",l={id:"algorithms/algorithmic-complexity/halting-problem",title:"Halting Problem",description:"In computability theory), the**halting problem** is the problem of determining, from a description of an arbitrary computer program and an input, whether the program will finish running (i.e., halt) or continue to run forever.",source:"@site/docs/algorithms/algorithmic-complexity/halting-problem.md",sourceDirName:"algorithms/algorithmic-complexity",slug:"/algorithms/algorithmic-complexity/halting-problem",permalink:"/algorithms/algorithmic-complexity/halting-problem",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/algorithms/algorithmic-complexity/halting-problem.md",tags:[],version:"current",lastUpdatedAt:1701793554,formattedLastUpdatedAt:"Dec 5, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Finite-State Machine",permalink:"/algorithms/algorithmic-complexity/finite-state-machine"},next:{title:"NP Hardness",permalink:"/algorithms/algorithmic-complexity/np-hardness"}},s={},h=[{value:"References",id:"references",level:2}];function c(e){const i={a:"a",em:"em",h1:"h1",h2:"h2",p:"p",strong:"strong",...(0,n.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.h1,{id:"halting-problem",children:"Halting Problem"}),"\n",(0,r.jsxs)(i.p,{children:["In ",(0,r.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Computability_theory_(computer_science)",children:"computability theory"}),", the",(0,r.jsx)(i.strong,{children:"halting problem"})," is the problem of determining, from a description of an arbitrary ",(0,r.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Computer_program",children:"computer program"})," and an input, whether the program will finish running (i.e., halt) or continue to run forever."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Alan_Turing",children:"Alan Turing"})," proved in 1936 that a general ",(0,r.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Algorithm",children:"algorithm"})," to solve the halting problem for ",(0,r.jsx)(i.em,{children:"all"}),"possible program-input pairs cannot exist. A key part of the proof was a mathematical definition of a computer and program, which became known as a ",(0,r.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Turing_machine",children:"Turing machine"}),"; the halting problem is ",(0,r.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Undecidable_problem",children:(0,r.jsx)(i.em,{children:"undecidable"})})," over Turing machines. It is one of the first examples of a ",(0,r.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Decision_problem",children:"decision problem"}),"."]}),"\n",(0,r.jsxs)(i.p,{children:["Informally, for any program ",(0,r.jsx)(i.em,{children:"f"}),' that might determine if programs halt, a "pathological" program ',(0,r.jsx)(i.em,{children:"g"})," called with an input can pass its own source and its input to ",(0,r.jsx)(i.em,{children:"f"})," and then specifically do the opposite of what ",(0,r.jsx)(i.em,{children:"f"})," predicts ",(0,r.jsx)(i.em,{children:"g"})," will do. No ",(0,r.jsx)(i.em,{children:"f"})," can exist that handles this case."]}),"\n",(0,r.jsx)(i.h2,{id:"references",children:"References"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Halting_problem",children:"https://en.wikipedia.org/wiki/Halting_problem"})})]})}function p(e={}){const{wrapper:i}={...(0,n.a)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},511151:(e,i,t)=>{t.d(i,{Z:()=>l,a:()=>a});var r=t(667294);const n={},o=r.createContext(n);function a(e){const i=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),r.createElement(o.Provider,{value:i},e.children)}}}]);