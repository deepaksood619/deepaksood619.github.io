"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[74509],{41659:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"databases/sql-databases/aws-redshift/redshift-sql-queries-commands","title":"Redshift SQL Queries / Commands","description":"Simplify Online Analytical Processing (OLAP) queries in Amazon Redshift using new SQL constructs such as ROLLUP, CUBE, and GROUPING SETS | AWS Big Data Blog","source":"@site/docs/databases/sql-databases/aws-redshift/redshift-sql-queries-commands.md","sourceDirName":"databases/sql-databases/aws-redshift","slug":"/databases/sql-databases/aws-redshift/redshift-sql-queries-commands","permalink":"/databases/sql-databases/aws-redshift/redshift-sql-queries-commands","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/databases/sql-databases/aws-redshift/redshift-sql-queries-commands.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1701793554000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Pricing / Sizing","permalink":"/databases/sql-databases/aws-redshift/pricing-sizing"},"next":{"title":"Workload management (WLM) and query monitoring rules (QMR)","permalink":"/databases/sql-databases/aws-redshift/wlm-qmr"}}');var a=n(474848),i=n(28453);const r={},o="Redshift SQL Queries / Commands",d={},l=[{value:"UNLOAD",id:"unload",level:2},{value:"Redshift Spectrum",id:"redshift-spectrum",level:2}];function c(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"redshift-sql-queries--commands",children:"Redshift SQL Queries / Commands"})}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.a,{href:"https://aws.amazon.com/blogs/big-data/simplify-online-analytical-processing-olap-queries-in-amazon-redshift-using-new-sql-constructs-such-as-rollup-cube-and-grouping-sets/",children:"Simplify Online Analytical Processing (OLAP) queries in Amazon Redshift using new SQL constructs such as ROLLUP, CUBE, and GROUPING SETS | AWS Big Data Blog"})}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.a,{href:"https://docs.aws.amazon.com/redshift/latest/dg/c_designing-queries-best-practices.html",children:"https://docs.aws.amazon.com/redshift/latest/dg/c_designing-queries-best-practices.html"})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-sql",children:"copy public.perfios_parsed\nfrom 's3://stashfin-migration-data/bank_score_data/perfios/parsed_data/old_data/2017/01/Jan_2017'\niam_role 'arn:aws:iam::331916247734:role/'\nCOMPUPDATE off FORMAT AS PARQUET;\n\ncopy colender.incred_loan_mapping from 's3://rds-s3-redshift-bucket/ETL_Colender_Dashboard/INCRED/INCRED_Loan_Mapping.csv'\ncredentials 'aws_access_key_id=AKIAU2R6AAK3P4L7TV7P;aws_secret_access_key=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'\nDELIMITER ',' IGNOREHEADER 1 FILLRECORD IGNOREBLANKLINES NULL 'nan'\nACCEPTINVCHARS EMPTYASNULL ESCAPE COMPUPDATE OFF\n\nselect version();\n\n-- show sizes\n SELECT tbl, name, size_mb FROM\n (\n  SELECT tbl, count(*) AS size_mb\n  FROM stv_blocklist\n  GROUP BY tbl\n )\n LEFT JOIN\n (select distinct id, name FROM stv_tbl_perm)\n ON id = tbl\n ORDER BY size_mb DESC\n LIMIT 10;\n\n SELECT   TRIM(pgdb.datname) AS Database,\n         TRIM(a.name) AS Table,\n         ((b.mbytes/part.total::decimal)*100)::decimal(5,2) AS pct_of_total,\n         b.mbytes,\n         b.unsorted_mbytes\nFROM     stv_tbl_perm a\nJOIN     pg_database AS pgdb\n  ON     pgdb.oid = a.db_id\nJOIN     ( SELECT   tbl,\n                    SUM( DECODE(unsorted, 1, 1, 0)) AS unsorted_mbytes,\n                    COUNT(*) AS mbytes\n           FROM     stv_blocklist\n           GROUP BY tbl ) AS b\n       ON a.id = b.tbl\nJOIN     ( SELECT SUM(capacity) AS total\n           FROM   stv_partitions\n           WHERE  part_begin = 0 ) AS part\n      ON 1 = 1\nWHERE    a.slice = 0\nORDER BY 4 desc, db_id, name;\n\n-- show all users and Grant\nselect usesysid as user_id,\n       usename as username,\n       usecreatedb as db_create,\n       usesuper as is_superuser,\n       valuntil as password_expiration\nfrom pg_user\norder by user_id;\n\n CREATE USER intern2_datascience WITH password 's4XfxXE8D8FqXxNH';\n grant usage on schema data_analytics to developer; (important for 1st time)\n\n grant select on all tables in schema data_analytics to user_name;\n\n GRANT SELECT on SCHEMA_NAME.TABLE_NAME TO USER_NAME;\n GRANT SELECT on public.sentinel_customers TO bhupesh_goyal;\n GRANT SELECT on public.dsa_customers TO bhupesh_goyal;\n\n GRANT SELECT on sttash_website_live.equifax_api_request_inquiry TO outsource_consultant;\n\n grant select,update,delete on all tables in schema colender to developer;\n\n https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_USER.html\n\nselect\n id,\n docs,\n is_valid_json_array(docs),\n json_array_length(docs),\n json_extract_array_element_text(docs, 1) as json_text,\n is_valid_json(json_text),\n json_extract_path_text(json_text, 'doc_status'),\n json_extract_path_text(json_text, 'id')\nfrom\n sttash_website_live.fos_scan_doc_comment\nlimit 1;\n https://docs.aws.amazon.com/redshift/latest/dg/json-functions.html\n\n-- getting blocking queries\n SELECT waiting.relation::regclass AS waiting_table,\n        blocking.relation::regclass AS blocking_table,\n        waiting.pid AS waiting_pid,\n        blocking.pid AS blocking_pid,\n        waiting.mode AS waiting_mode,\n        blocking.mode AS blocking_mode,\n        waiting.GRANTED AS waiting_granted,\n        blocking.GRANTED AS blocking_granted,\n        waiting.TRANSACTION AS waiting_txn,\n        blocking.TRANSACTION AS blocking_txn\n FROM pg_locks AS waiting\n   LEFT JOIN pg_locks AS blocking\n          ON ( (waiting. \"database\" = blocking. \"database\"\n         AND (waiting.relation = blocking.relation\n          OR blocking.relation IS NULL\n          OR waiting.relation IS NULL))\n          OR waiting.TRANSACTION = blocking.TRANSACTION)\n WHERE 1 = 1\n AND   NOT waiting.GRANTED\n AND   waiting.pid <> blocking.pid\n AND   blocking_granted = 't'\n ORDER BY blocking_granted,\n          waiting_granted,\n          blocking_pid,\n          waiting_pid;\n\n select a.txn_owner, a.txn_db, a.xid, a.pid, a.txn_start, a.lock_mode, a.relation as table_id,nvl(trim(c.\"name\"),d.relname) as tablename, a.granted,b.pid as blocking_pid ,datediff(s,a.txn_start,getdate())/86400||' days '||datediff(s,a.txn_start,getdate())%86400/3600||' hrs '||datediff(s,a.txn_start,getdate())%3600/60||' mins '||datediff(s,a.txn_start,getdate())%60||' secs' as txn_duration from svv_transactions a left join (select pid,relation,granted from pg_locks group by 1,2,3) b on a.relation=b.relation and a.granted='f' and b.granted='t' left join (select * from stv_tbl_perm where slice=0) c on a.relation=c.id left join pg_class d on a.relation=d.oid where a.relation is not null;\n\n SELECT * from stl_query where pid=4887;\n\nSELECT pg_terminate_backend(4887);\n"})}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.a,{href:"https://aws.amazon.com/premiumsupport/knowledge-center/redshift-high-cpu-usage",children:"https://aws.amazon.com/premiumsupport/knowledge-center/redshift-high-cpu-usage"})}),"\n",(0,a.jsxs)(s.p,{children:["While the queries are running, ",(0,a.jsx)(s.a,{href:"https://aws.amazon.com/premiumsupport/knowledge-center/prevent-locks-blocking-queries-redshift/",children:"retrieve locking information"}),". To identify long-running sessions, use the following SQL query:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-sql",children:"select *,datediff(s,txn_start,getdate())/86400||' days '||datediff(s,txn_start,getdate())%86400/3600||' hrs '||datediff(s,txn_start,getdate())%3600/60||' mins '||datediff(s,txn_start,getdate())%60||' secs'\nfrom svv_transactions where lockable_object_type='transactionid' and pid<>pg_backend_pid() order by 3;\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Then, run ",(0,a.jsx)(s.a,{href:"https://docs.aws.amazon.com/redshift/latest/dg/PG_TERMINATE_BACKEND.html",children:"PG_TERMINATE_BACKEND"})," to stop any long-running transactions. To prevent these sessions from remaining open, be sure that all transactions are closed. For example, make sure that all transactions starting with a ",(0,a.jsx)(s.a,{href:"https://docs.aws.amazon.com/redshift/latest/dg/r_BEGIN.html",children:"BEGIN"})," statement are also accompanied by anENDorCOMMITstatement."]}),"\n",(0,a.jsx)(s.p,{children:"Then, run the following SQL query to identify queries consuming high CPU:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-sql",children:'select stq.userid, stq.query, trim(stq.label) as label, stq.xid, stq.pid, svq.service_class,\nquery_cpu_usage_percent as "cpu_%",starttime, endtime, datediff(s,starttime, endtime) as duration_s,\nsubstring(stq.querytxt,1,100) as querytext from stl_query stq\njoin svl_query_metrics svq on stq.query=svq.query\nwhere query_cpu_usage_percent is not null and starttime > sysdate - 1\norder by query_cpu_usage_percent desc;\n'})}),"\n",(0,a.jsx)(s.p,{children:"To analyze segment and slice-level execution steps for each query, run the following query:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-sql",children:'select query, segment, step, label ,is_rrscan as rrS, is_diskbased as disk, is_delayed_scan as DelayS, min(start_time) as starttime, max(end_time) as endtime, datediff(ms, min(start_time), max(end_time)) as "elapsed_msecs", sum(rows) as row_s , sum(rows_pre_filter) as rows_pf, CASE WHEN sum(rows_pre_filter) = 0 THEN 100 ELSE sum(rows)::float/sum(rows_pre_filter)::float*100 END as pct_filter, SUM(workmem)/1024/1024 as "Memory(MB)", SUM(bytes)/1024/1024 as "MB_produced" from svl_query_report where query in (query_ids) group by query, segment, step, label , is_rrscan, is_diskbased , is_delayed_scan order by query, segment, step, label;\n'})}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Reduce query concurrency per queue to provide more memory to each query slot. This reduction helps queries that require more memory to run more efficiently."}),"\n",(0,a.jsxs)(s.li,{children:["Enable ",(0,a.jsx)(s.a,{href:"https://docs.aws.amazon.com/redshift/latest/dg/wlm-short-query-acceleration.html",children:"short query acceleration"}),"(SQA) to prioritize short-running queries over long-running queries."]}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:"unload",children:"UNLOAD"}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.a,{href:"https://docs.aws.amazon.com/redshift/latest/dg/r_UNLOAD.html",children:"https://docs.aws.amazon.com/redshift/latest/dg/r_UNLOAD.html"})}),"\n",(0,a.jsx)(s.h2,{id:"redshift-spectrum",children:"Redshift Spectrum"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-sql",children:"SELECT * FROM SVV_EXTERNAL_DATABASES;\n\nSELECT * FROM SVV_EXTERNAL_SCHEMAS;\n\nSELECT * FROM SVV_EXTERNAL_TABLES;\n\nSELECT * FROM SVV_EXTERNAL_PARTITIONS;\n\nSELECT * FROM SVV_EXTERNAL_COLUMNS;\ncreate external schema spectrum_schema from data catalog\n\ndatabase 'pinpointanalytics'\n\niam_role 'arn:aws:iam::331916247734:role/service-role/AmazonRedshift-CommandsAccessRole-20211208T161606';\ndrop schema spectrum_schema;\nCREATE EXTERNAL TABLE spectrum_schema.test_loan_data (\n\nid integer,\n\nloan_status integer)\n\nROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.OpenCSVSerde'\n\nLOCATION 's3://data-team-reporting/test/';\nSELECT * FROM spectrum_schema.test_loan_data limit 10;\n"})})]})}function m(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>o});var t=n(296540);const a={},i=t.createContext(a);function r(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);