"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[26132],{931892:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"databases-nosql/duckdb","title":"DuckDB","description":"DuckDB is an open-source, high-performance, in-process SQL database management system (RDBMS) for analytics:","source":"@site/docs/databases-nosql/duckdb.md","sourceDirName":"databases-nosql","slug":"/databases-nosql/duckdb","permalink":"/databases-nosql/duckdb","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/databases-nosql/duckdb.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1758109499000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Paper","permalink":"/databases-nosql/druid/paper"},"next":{"title":"etcd","permalink":"/databases-nosql/etcd"}}');var t=s(474848),i=s(28453);const r={},d="DuckDB",o={},c=[{value:"Commands",id:"commands",level:2},{value:"Performance Optimization",id:"performance-optimization",level:2},{value:"Tutorials",id:"tutorials",level:2},{value:"Links",id:"links",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"duckdb",children:"DuckDB"})}),"\n",(0,t.jsx)(n.p,{children:"DuckDB is an open-source, high-performance, in-process SQL database management system (RDBMS) for analytics:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Designed for OLAP -"})," DuckDB is designed for online analytical processing (OLAP) workloads, rather than transactional (OLTP) applications."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Embedded -"})," DuckDB operates within the same process as your application or notebook, eliminating network overhead."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Versatile -"})," DuckDB can handle diverse data formats, such as CSV, JSON, Parquet, and Apache Arrow. It also integrates with databases like MySQL, SQLite, and Postgres."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Easy to use -"})," DuckDB provides a rich SQL dialect, with support for arbitrary and nested correlated subqueries, window functions, collations, and complex types."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fast -"})," DuckDB is designed to be fast, reliable, and portable. It can efficiently process and query gigabytes of data from various sources."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Embeddable -"})," DuckDB enables users to analyze data on edge, which can improve response times and preserve bandwidth."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"commands",children:"Commands"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"brew install duckdb\n"})}),"\n",(0,t.jsx)(n.h2,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://duckdb.org/docs/guides/performance/overview.html",children:"Performance Guide \u2013 DuckDB"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"tutorials",children:"Tutorials"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://www.packtpub.com/en-us/learning/how-to-tutorials/hands-on-exploratory-data-analysis-with-duckdb",children:"Hands-On Exploratory Data Analysis with DuckDB"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"links",children:"Links"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://towardsdatascience.com/my-first-billion-of-rows-in-duckdb-11873e5edbb5",children:"My First Billion (of Rows) in DuckDB | by Jo\xe3o Pedro | Towards Data Science"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://www.fivetran.com/blog/how-fast-is-duckdb-really",children:"How fast is DuckDB really? | Blog | Fivetran"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://duckdb.org/2024/06/26/benchmarks-over-time.html",children:"Benchmarking Ourselves over Time at DuckDB \u2013 DuckDB"})}),"\n",(0,t.jsxs)(n.li,{children:['"One Size Fits All": An Idea Whose Time Has Come and Gone - ',(0,t.jsx)(n.a,{href:"https://blobs.duckdb.org/papers/stonebraker-centintemel-one-size-fits-all-icde-2015.pdf",children:"stonebraker-centintemel-one-size-fits-all-icde-2015.pdf"})]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/duckdb/duckdb",children:"GitHub - duckdb/duckdb: DuckDB is an analytical in-process SQL database management system"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://duckdb.org/",children:"DuckDB \u2013 An in-process SQL OLAP database management system"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/duckdb-in-action/examples",children:"GitHub - duckdb-in-action/examples"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://www.datacamp.com/blog/an-introduction-to-duckdb-what-is-it-and-why-should-you-use-it",children:"Introduction to DuckDB: A Guide for Data Analysis | DataCamp"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://towardsdatascience.com/handling-billions-of-records-in-minutes-with-sql-%EF%B8%8F-484d2d6027bc",children:"Handling Billions of Rows with SQL in Minutes Using DuckDB | Towards Data Science"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://youtu.be/fo7-rRRVHf8",children:"QuackETL| DuckDB-Powered Lightweight ETL: An Extensible Framework for Seamless Data Integration - YouTube"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://www.youtube.com/watch?v=uHm6FEb2Re4&ab_channel=Fireship",children:"DuckDB in 100 Seconds - YouTube"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>d});var a=s(296540);const t={},i=a.createContext(t);function r(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);