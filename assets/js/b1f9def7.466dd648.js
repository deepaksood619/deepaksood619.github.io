"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[54963],{55601:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"ai/deep-learning/commands","title":"Commands","description":"Libraries","source":"@site/docs/ai/deep-learning/commands.md","sourceDirName":"ai/deep-learning","slug":"/ai/deep-learning/commands","permalink":"/ai/deep-learning/commands","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/ai/deep-learning/commands.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1726756705000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Deep Learning","permalink":"/ai/deep-learning/"},"next":{"title":"Components","permalink":"/ai/deep-learning/components"}}');var s=a(474848),r=a(28453);const i={},o="Commands",d={},l=[{value:"Libraries",id:"libraries",level:2},{value:"Python- Numpy Vectors",id:"python--numpy-vectors",level:2},{value:"Datasets",id:"datasets",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"commands",children:"Commands"})}),"\n",(0,s.jsx)(n.h2,{id:"libraries",children:"Libraries"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://idrgfain.labs.coursera.org/notebooks/Week%202/Logistic%20Regression%20as%20a%20Neural%20Network/www.numpy.org",children:"numpy"})," is the fundamental package for scientific computing with Python."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"http://www.h5py.org/",children:"h5py"})," is a common package to interact with a dataset that is stored on an H5 file."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"http://matplotlib.org/",children:"matplotlib"})," is a famous library to plot graphs in Python."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"http://www.pythonware.com/products/pil/",children:"PIL"})," and ",(0,s.jsx)(n.a,{href:"https://www.scipy.org/",children:"scipy"})," are used here to test your model with your own picture at the end."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"python--numpy-vectors",children:"Python- Numpy Vectors"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import numpy as np\n\na = np.random.randn(5)\nprint(a.shape)\n\n(5, )\n\nprint(a.T)\n[ ]\n\nprint(np.dot(a, a.T))\n\n# use (5,1) instead of (5) i.e rank 1 array (nor a row vector nor a column vector)\n\n# don't use rank 1 array\n\na = np.random.randn(5,1) # a.shape = (5,1), column vector\n\na = np.random.randn(1,5) # a.shape = (1,5), row vector\n\nprint(a.T)\n\n[[ ]]\n\nassert (a.shape == (5,1))\n\na = a.reshape((5,1)) # to change from rank 1 array to column vector\n\ndef sigmoid(x):\n    s = 1/(1+np.exp(-x))\n\ndef sigmoid_derivative(x):\n    s = 1/(1+np.exp(-x))\n    ds = s*(1-s)\n\ndef image2vector(image):\n    v = image.reshape(image.shape [0]*image.shape [1]*image.shape [2], 1)\n\ndef normalizeRows(x):\n    x_norm = np.linalg.norm(x, ord = 2, axis=1, keepdims=True)\n    x = x/x_norm\n\ndef softmax(x):\n    x_exp = np.exp(x)\n    x_sum = np.sum(x_exp, axis=1, keepdims=True)\n    s = x_exp / x_sum\n\ndef L1(yhat, y):\n    loss = np.sum(abs(y-yhat))\n\ndef L2(yhat, y):\n    loss = np.sum(np.dot((y-yhat),(y-yhat)))\n\n# A trick when you want to flatten a matrix X of shape (a, b, c, d) to a matrix X_flatten of shape (b\u2217\u2217c\u2217\u2217d, a) is to use:\n\nX_flatten = X.reshape(X.shape [0], -1).T\n"})}),"\n",(0,s.jsx)(n.h2,{id:"datasets",children:"Datasets"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/spMohanty/PlantVillage-Dataset",children:"GitHub - spMohanty/PlantVillage-Dataset: Dataset of diseased plant leaf images and corresponding labels"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://www.kaggle.com/datasets/vipoooool/new-plant-diseases-dataset/data",children:"New Plant Diseases Dataset"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Code - ",(0,s.jsx)(n.a,{href:"https://www.kaggle.com/code/youssefelbadry10/detecting-plant-diseases-pytorch",children:"Detecting Plant Diseases | Pytorch | Kaggle"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.kaggle.com/datasets/smaranjitghose/corn-or-maize-leaf-disease-dataset/data",children:"Corn or Maize Leaf Disease Dataset | Kaggle"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.kaggle.com/datasets/qramkrishna/corn-leaf-infection-dataset",children:"Corn Leaf Infection Dataset | Kaggle"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.kaggle.com/c/leaf-classification/data",children:"Leaf Classification | Kaggle"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.kaggle.com/code/akarshu121/cancer-detection-with-cnn-for-beginners",children:"Cancer Detection (With CNN for Beginners) | Kaggle"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>o});var t=a(296540);const s={},r=t.createContext(s);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);