"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[93638],{185776:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"about-deepak-sood/projects/80-stashfin","title":"Stashfin","description":"Product","source":"@site/docs/about-deepak-sood/projects/80-stashfin.md","sourceDirName":"about-deepak-sood/projects","slug":"/about-deepak-sood/projects/80-stashfin","permalink":"/about-deepak-sood/projects/80-stashfin","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/about-deepak-sood/projects/80-stashfin.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1734554726000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Bake.io Data Engineering","permalink":"/about-deepak-sood/projects/75-bake-io-data-engineering"},"next":{"title":"Stashfin Terms","permalink":"/about-deepak-sood/projects/81-stashfin-terms"}}');var a=s(474848),r=s(28453);const t={},l="Stashfin",o={},d=[{value:"Product",id:"product",level:2},{value:"Processes",id:"processes",level:2},{value:"Dev Onboarding",id:"dev-onboarding",level:3},{value:"Vision",id:"vision",level:2},{value:"Big Things",id:"big-things",level:3},{value:"Microservices",id:"microservices",level:3},{value:"Others",id:"others",level:3},{value:"Team Management",id:"team-management",level:4},{value:"Data Architecture",id:"data-architecture",level:3},{value:"New Architecture",id:"new-architecture",level:4},{value:"Values / long term vision / where we should to reach(target)",id:"values--long-term-vision--where-we-should-to-reachtarget",level:4},{value:"Event Streaming Framework (for upstream data from customers to server)",id:"event-streaming-framework-for-upstream-data-from-customers-to-server",level:4},{value:"UserDeviceApps Workflow",id:"userdeviceapps-workflow",level:5},{value:"UserDeviceSms Workflow",id:"userdevicesms-workflow",level:5},{value:"Event Streaming Framework (for downstream data from servers to customers/potential customers)",id:"event-streaming-framework-for-downstream-data-from-servers-to-customerspotential-customers",level:4},{value:"Database that will be used",id:"database-that-will-be-used",level:4}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",img:"img",li:"li",ol:"ol",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"stashfin",children:"Stashfin"})}),"\n",(0,a.jsx)(n.h2,{id:"product",children:"Product"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"/economics/fintech-nbfc-banking-terms",children:"NBFC / Banking Terms"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"stashfin-product-architecture",src:s(832832).A+"",width:"999",height:"550"})}),"\n",(0,a.jsx)(n.h2,{id:"processes",children:"Processes"}),"\n",(0,a.jsx)(n.h3,{id:"dev-onboarding",children:"Dev Onboarding"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Day 1 = Explain the product fully, along with installation and hands-on usage with feedbacks if possible"}),"\n",(0,a.jsx)(n.li,{children:"Day 1 = Clearly explain on what is our current architecture and processes we are following, introduce to team + manager + onboarding buddy"}),"\n",(0,a.jsx)(n.li,{children:"Day 2 = Let person review the architecture diagrams + docs of the team which you are joining + tell him the 1st task he will be working on, and exact 1st commit/feature deploy he has to do."}),"\n",(0,a.jsx)(n.li,{children:"Day 3-7 = how is the task going, what problems person is facing, and show him the right path or right person to speak to."}),"\n",(0,a.jsx)(n.li,{children:"Start incrementally given difficult tasks, and then assign few junior devs to start managing, if person prefers"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"vision",children:"Vision"}),"\n",(0,a.jsx)(n.h3,{id:"big-things",children:"Big Things"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Migrate all APIs\xa0- Type Hint"}),"\n",(0,a.jsx)(n.li,{children:"LMS main search and page migrate using Django Admin"}),"\n",(0,a.jsxs)(n.li,{children:["Migrate everything to Python (Django + Flask)","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Cron jobs + APIs (Every ",(0,a.jsx)(n.code,{children:"<10 mins"})," cron must be removed)"]}),"\n",(0,a.jsx)(n.li,{children:"UserDevice data"}),"\n",(0,a.jsx)(n.li,{children:"Authentication & authorization system"}),"\n",(0,a.jsx)(n.li,{children:"Logging / Monitoring / Scalability"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Redis Queue for event based system","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Every ",(0,a.jsx)(n.code,{children:"<10 mins"})," cron must be removed"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["DB Break into multiple components (start moving schema to multiple schemas)","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"DB data consistency (column contraints)"}),"\n",(0,a.jsx)(n.li,{children:"Data Models ER Diagram with Foreign Key Contraints"}),"\n",(0,a.jsx)(n.li,{children:"Private database"}),"\n",(0,a.jsx)(n.li,{children:"Increase Isolation level"}),"\n",(0,a.jsx)(n.li,{children:"Single database for applications, no reader/writer config (till we really hit that scale), upgrade db, postgres"}),"\n",(0,a.jsx)(n.li,{children:"Remove DMS and Redshift (on-line aggregations)"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Product overhaul - end to end with\xa0highly deterministic flow\xa0and real time monitoring at every single step","\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Fraud at each step without performance implications"}),"\n",(0,a.jsx)(n.li,{children:"Full customer logging and path traversal along with historical data"}),"\n",(0,a.jsxs)(n.li,{children:["Product flow - Figma","\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Paytail modern app"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"Testing at each path (Testing apps, and flows easily)"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"Democratize analytics (use redash)"}),"\n",(0,a.jsx)(n.li,{children:"Quality of code increase, quantity of code decrease, UAT, Testing, No regressions"}),"\n",(0,a.jsx)(n.li,{children:"Documentation and knowledge base and onboarding wiki"}),"\n",(0,a.jsx)(n.li,{children:"AI Team"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"microservices",children:"Microservices"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Payments (2 people)"}),"\n",(0,a.jsx)(n.li,{children:"Decision Engine (2 people)"}),"\n",(0,a.jsx)(n.li,{children:"External Mobile APIs + API Gateways (2 people)"}),"\n",(0,a.jsx)(n.li,{children:"LMS in Django"}),"\n",(0,a.jsx)(n.li,{children:"Collections in Django"}),"\n",(0,a.jsx)(n.li,{children:"LiteLMS in Django"}),"\n",(0,a.jsx)(n.li,{children:"Communications (done)"}),"\n",(0,a.jsx)(n.li,{children:"KYC (Django)"}),"\n",(0,a.jsx)(n.li,{children:"LMS - Lead search and status"}),"\n",(0,a.jsx)(n.li,{children:"Frontend team"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"others",children:"Others"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["All tests will be local","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"databases will be running locally for some of the stuff"}),"\n",(0,a.jsx)(n.li,{children:"There will be a test aurora database with fake PII data and other stuff, developers wil not get access to dailydb, or prod"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Right database for the right job","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Only ACID guarantees things will be saved in mysql, others will not be"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"Move all emails, msgs, notifications to pinpoint"}),"\n",(0,a.jsxs)(n.li,{children:["Security implemented correctly","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"No unsecured credentials in local (only test db credentials, test s3 bucket access credentials)"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"Microservices architecture"}),"\n",(0,a.jsx)(n.li,{children:"Remove LMS"}),"\n",(0,a.jsx)(n.li,{children:"Moving from reactive to proactive actions"}),"\n",(0,a.jsx)(n.li,{children:"Event based architecture"}),"\n",(0,a.jsxs)(n.li,{children:["Break the database","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Only MySQL and Redis database"}),"\n",(0,a.jsx)(n.li,{children:"Redshift for Analytics"}),"\n",(0,a.jsx)(n.li,{children:"No T-1 database"}),"\n",(0,a.jsx)(n.li,{children:"No reader and writer access for users to databases"}),"\n",(0,a.jsx)(n.li,{children:"No database more than 8/16 GB"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"Android - MultiLingual"}),"\n",(0,a.jsx)(n.li,{children:"AI models at the edge"}),"\n",(0,a.jsxs)(n.li,{children:["All branches must be master only (so that repositories must be small enough)","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Remove each different frontend to a different backend repository"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"team-management",children:"Team Management"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Create hierarchy of people, and every team will have 4 person team, with one team lead. (more juniors then seniors)"}),"\n",(0,a.jsx)(n.li,{children:"Create a flat hierarchy with very good people like Vishal, Ankur, that are self managed (very limited interns and all) - keep number of people to 10/12 i.e. whole engineering team - This will help us go fully remote, hire better developers"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"data-architecture",children:"Data Architecture"}),"\n",(0,a.jsx)(n.h4,{id:"new-architecture",children:"New Architecture"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Save all logs and everything to aurora, either move data from aurora to redshift using DMS"}),"\n",(0,a.jsx)(n.li,{children:"Do analytics on T-1, dumped s3 data or redshift"}),"\n",(0,a.jsx)(n.li,{children:"Maintenance script dump data to s3 and delete from mysql"}),"\n",(0,a.jsx)(n.li,{children:"Do analytics on s3 or redshift"}),"\n",(0,a.jsx)(n.li,{children:"logging to files instead of database and then sent via a sidecar"}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"values--long-term-vision--where-we-should-to-reachtarget",children:"Values / long term vision / where we should to reach(target)"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Decouple data processing from storage"}),"\n",(0,a.jsx)(n.li,{children:"Multiple databases will be used across multiple modules, each selected for query performance and best way to save data"}),"\n",(0,a.jsxs)(n.li,{children:["Each data can be processed multiple times according to requirements","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["data can land in multiple places","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"storage is cheap"}),"\n",(0,a.jsx)(n.li,{children:"compute is expensive"}),"\n",(0,a.jsx)(n.li,{children:"denormalize database"}),"\n",(0,a.jsx)(n.li,{children:"query must be performant"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"Compacted and stored in long term storage solutions"}),"\n",(0,a.jsx)(n.li,{children:"Analysis must be done to get analytics (like no. of finance apps, etc) from the data and saved into a OLAP/OLTP database"}),"\n",(0,a.jsx)(n.li,{children:"Can be parsed and an event can be triggered according to some condition"}),"\n",(0,a.jsx)(n.li,{children:"Can be stored in a transaction database"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Two types of aggregations","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"On the fly aggregations (aggregations performed before/while storing data)"}),"\n",(0,a.jsx)(n.li,{children:"On demand aggregations (done by data science team for creating reports)"}),"\n",(0,a.jsx)(n.li,{children:"High CPU compute queries that are done often must be moved from on-demand to on-the-fly aggregations"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"We have to cater to both read-heavy workloads and write-heavy workloads"}),"\n",(0,a.jsxs)(n.li,{children:["Tiered storage","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"In-memory storage (1 - 4 weeks data)"}),"\n",(0,a.jsx)(n.li,{children:"Relational/non-relational disk based storage based on SSD (1 year data)"}),"\n",(0,a.jsx)(n.li,{children:"Compressed and saved on tape/HDD for long term storage (greater than 1 year data)"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"Have a event driven workflows"}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"event-streaming-framework-for-upstream-data-from-customers-to-server",children:"Event Streaming Framework (for upstream data from customers to server)"}),"\n",(0,a.jsx)(n.h5,{id:"userdeviceapps-workflow",children:"UserDeviceApps Workflow"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Android/PHP pushes all apps raw data to Kafka/Kinesis","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Consumer consumes and add to DynamoDB by updating the cust_id as csv of apps for LTS"}),"\n",(0,a.jsx)(n.li,{children:"Consumer consumes, parses and add apps analytics to mysql/wide column (like total number of apps, types of apps - finance, gaming, others)"}),"\n",(0,a.jsx)(n.li,{children:"Consumer consumes, and puts to types of apps in global pool"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h5,{id:"userdevicesms-workflow",children:"UserDeviceSms Workflow"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Android/PHP pushes all sms raw data to Kafka/Kinesis","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Consumer consumes and saves raw data (cust_id, sms_time as primary key) to dynamoDB for LTS"}),"\n",(0,a.jsx)(n.li,{children:"Consumer consumes and parses data for bank sms and save to mysql/wide column for analytics"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"event-streaming-framework-for-downstream-data-from-servers-to-customerspotential-customers",children:"Event Streaming Framework (for downstream data from servers to customers/potential customers)"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["High fanout (like one sms will be sent to lakhs of customers)","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["SMS template/Email template/Notification template must be enriched before sending","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"adding the amount that the customer is eligible for"}),"\n",(0,a.jsx)(n.li,{children:"adding customer specific links"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"All communications/clicks/engagement should be tracked"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"database-that-will-be-used",children:"Database that will be used"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"OLTP for transactional loads (that needs join)"}),"\n",(0,a.jsx)(n.li,{children:"OLAP for analytical loads"}),"\n",(0,a.jsx)(n.li,{children:"In memory key value for very fast lookup"}),"\n",(0,a.jsx)(n.li,{children:"Key-value NoSQL for fast lookups (not transactional data)"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},832832:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/Pasted image 20231201172554-97046df3ad0e2844834ab2a8b5a3ec36.jpg"},28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>l});var i=s(296540);const a={},r=i.createContext(a);function t(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);