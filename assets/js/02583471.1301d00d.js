"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[50775],{969969:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"computer-science/testing/load-performance-testing-qa-tools","title":"Load / Performance Testing / QA Tools","description":"Website Performance Testing Tools","source":"@site/docs/computer-science/testing/load-performance-testing-qa-tools.md","sourceDirName":"computer-science/testing","slug":"/computer-science/testing/load-performance-testing-qa-tools","permalink":"/computer-science/testing/load-performance-testing-qa-tools","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/computer-science/testing/load-performance-testing-qa-tools.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1737871355000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"iperf3 Testing","permalink":"/computer-science/testing/iperf3-testing"},"next":{"title":"Mocking","permalink":"/computer-science/testing/mocking"}}');var i=n(474848),a=n(28453);const o={},r="Load / Performance Testing / QA Tools",l={},c=[{value:"Website Performance Testing Tools",id:"website-performance-testing-tools",level:2},{value:"Bash - add artificial load to the CPU",id:"bash---add-artificial-load-to-the-cpu",level:2},{value:"dd -- convert and copy a file (Check read and write throughput)",id:"dd----convert-and-copy-a-file-check-read-and-write-throughput",level:2},{value:"server latency",id:"server-latency",level:3},{value:"server throughput",id:"server-throughput",level:3},{value:"Grinder",id:"grinder",level:2},{value:"JMeter",id:"jmeter",level:2},{value:"Gatling",id:"gatling",level:2},{value:"Tsung",id:"tsung",level:2},{value:"Siege",id:"siege",level:2},{value:"Httperf",id:"httperf",level:2},{value:"Taurus",id:"taurus",level:2},{value:"Artillery",id:"artillery",level:2},{value:"Goad",id:"goad",level:2},{value:"Apache Bench",id:"apache-bench",level:2},{value:"HTTP Load Testing Tools",id:"http-load-testing-tools",level:2},{value:"- wrk",id:"--wrk",level:3},{value:"- Apache Bench - Apache HTTP Server Benchmarking Tool (for percentiles)",id:"--apache-bench---apache-http-server-benchmarking-tool-for-percentiles",level:3},{value:"- Siege (for constant load)",id:"--siege-for-constant-load",level:3},{value:"- hey / boom",id:"--hey--boom",level:3},{value:"- https://k6.io",id:"--httpsk6io",level:3},{value:"- https://fortio.org/",id:"--httpsfortioorg",level:3},{value:"Datasets for load testing databases",id:"datasets-for-load-testing-databases",level:2},{value:"Test application",id:"test-application",level:2},{value:"Locust",id:"locust",level:2},{value:"Running Locust Distributed",id:"running-locust-distributed",level:3},{value:"Commands",id:"commands",level:3},{value:"QA Companies",id:"qa-companies",level:2},{value:"Others",id:"others",level:2}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"load--performance-testing--qa-tools",children:"Load / Performance Testing / QA Tools"})}),"\n",(0,i.jsx)(t.h2,{id:"website-performance-testing-tools",children:"Website Performance Testing Tools"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://gtmetrix.com",children:"https://gtmetrix.com"})}),"\n",(0,i.jsxs)(t.li,{children:["LightHouse","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://github.com/marketplace/actions/lighthouse-ci-action",children:"Lighthouse CI Action \xb7 Actions \xb7 GitHub Marketplace \xb7 GitHub"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://www.browserstack.com",children:"https://www.browserstack.com"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://www.browserstack.com/automate-turboscale",children:"BrowserStack Automate TurboScale"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://www.sitespeed.io",children:"https://www.sitespeed.io"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://estimator.dev",children:"https://estimator.dev"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://imagekit.io/website-analyzer",children:"Free web performance analyser tool for images - Website Analyzer | ImageKit.io"})}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"bash---add-artificial-load-to-the-cpu",children:"Bash - add artificial load to the CPU"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"while true; do i=0; done\n\ni = 0\nx = 2\nwhile True:\n  x = x*x\n  i += 1\n  if i == 32:\n    break\n\nwhile true:\n  for i in range(1,1000000):\n    pass\n"})}),"\n",(0,i.jsx)(t.h2,{id:"dd----convert-and-copy-a-file-check-read-and-write-throughput",children:"dd -- convert and copy a file (Check read and write throughput)"}),"\n",(0,i.jsx)(t.p,{children:"The dd utility copies the standard input to the standard output. Input data is read and written in 512-byte blocks. If input reads are short, input from multiple reads are aggregated to form the output block. When finished, dd displays the number of complete and partial input and output blocks and truncated input records to the standard error output."}),"\n",(0,i.jsx)(t.h3,{id:"server-latency",children:"server latency"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.code,{children:"dd if=/dev/zero of=/tmp/test2.img bs=512 count=1000 oflag=dsync"})}),"\n",(0,i.jsx)(t.h3,{id:"server-throughput",children:"server throughput"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.code,{children:"if=/dev/zero of=/tmp/test1.img bs=1G count=1 oflag=dsync"})}),"\n",(0,i.jsx)(t.h2,{id:"grinder",children:"Grinder"}),"\n",(0,i.jsx)(t.h2,{id:"jmeter",children:"JMeter"}),"\n",(0,i.jsx)(t.p,{children:"TheApache JMeter application is open source software. It is a pure Java application designed to load test an application and measure its performance."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://towardsdatascience.com/load-testing-of-a-real-time-pipeline-d32475163285",children:"https://towardsdatascience.com/load-testing-of-a-real-time-pipeline-d32475163285"})}),"\n",(0,i.jsx)(t.h2,{id:"gatling",children:"Gatling"}),"\n",(0,i.jsx)(t.p,{children:"Gatling is a highly capable load testing tool. It is designed for ease of use, maintainability and high performance."}),"\n",(0,i.jsxs)(t.p,{children:["Gatling is an open-source load and performance testing framework based on ",(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Scala_(programming_language)",children:"Scala"}),", ",(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Akka_(toolkit)",children:"Akka"})," and ",(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Netty_(software)",children:"Netty"}),". The first stable release was published on January 13, 2012. In 2015, Gatling's founder, St\xe9phane Landelle, created a company (named \"Gatling Corp\"), dedicated to the development of the open-source project. According to Gatling Corp's official blog, Gatling was downloaded more than 800,000 times (August 2017). In June 2016, Gatling officially presented Gatling FrontLine, Gatling's Enterprise Version with additional features"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Gatling_(software)",children:"https://en.wikipedia.org/wiki/Gatling_(software)"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://gatling.io/",children:"https://gatling.io"})}),"\n",(0,i.jsx)(t.h2,{id:"tsung",children:"Tsung"}),"\n",(0,i.jsx)(t.p,{children:"Tsung is an open-source multi-protocol distributed load testing tool. It can be used to stress HTTP, WebDAV, SOAP, PostgreSQL, MySQL, LDAP, MQTT, and Jabber/XMPP servers."}),"\n",(0,i.jsx)(t.h2,{id:"siege",children:"Siege"}),"\n",(0,i.jsx)(t.p,{children:"Siege is an HTTP load testing and benchmarking utility. Siege supports basic authentication, cookies, HTTP, HTTPS and FTP protocols. It lets its user hit a server with a configurable number of simulated clients."}),"\n",(0,i.jsx)(t.h2,{id:"httperf",children:"Httperf"}),"\n",(0,i.jsx)(t.p,{children:"Httperf is a tool for measuring web server performance. It provides a flexible facility for generating various HTTP workloads and for measuring server performance."}),"\n",(0,i.jsx)(t.h2,{id:"taurus",children:"Taurus"}),"\n",(0,i.jsx)(t.p,{children:"Although not specifically related to Perf testing, Taurus provides an automation-friendly framework for continuous testing, including functional and performance."}),"\n",(0,i.jsx)(t.h2,{id:"artillery",children:"Artillery"}),"\n",(0,i.jsx)(t.p,{children:"Artillery is a modern, powerful & easy-to-use load testing and functional testing toolkit. Use it to shipscalable applications that stayperformant &resilientunder high load."}),"\n",(0,i.jsx)(t.h2,{id:"goad",children:"Goad"}),"\n",(0,i.jsx)(t.p,{children:"Goad takes full advantage of the power of Amazon Lambdas for distributed load testing. You can use goad to launch HTTP loads from up to four AWS regions at once. Each lambda can handle hundreds of concurrent connections, able to achieve peak loads of up to100,000 concurrent requests."}),"\n",(0,i.jsx)(t.h2,{id:"apache-bench",children:"Apache Bench"}),"\n",(0,i.jsx)(t.p,{children:"abis a tool for benchmarking your Apache Hypertext Transfer Protocol (HTTP) server. It is designed to give you an impression of how your current Apache installation performs."}),"\n",(0,i.jsx)(t.h2,{id:"http-load-testing-tools",children:"HTTP Load Testing Tools"}),"\n",(0,i.jsxs)(t.h3,{id:"--wrk",children:["- ",(0,i.jsx)(t.a,{href:"https://github.com/wg/wrk",children:"wrk"})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:'wrk --duration 20s --threads 10 --connections 200 [URL]\n\nwrk -c 5 -t 5 -d 99999 -H "Connection: Close" http://application-cpu\n\nwrk -c 5 -t 5 -d 99999 -H "Connection: Close" https://facebook.com\n'})}),"\n",(0,i.jsxs)(t.h3,{id:"--apache-bench---apache-http-server-benchmarking-tool-for-percentiles",children:["- Apache Bench - ",(0,i.jsx)(t.a,{href:"https://httpd.apache.org/docs/2.4/programs/ab.html",children:"Apache HTTP Server Benchmarking Tool"})," (for percentiles)"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"apt install apache2\nbrew install apache2\nab -c 50 -n 500 -s 90 http://www.example.com\n\nab -c 50 -n 500 -s 90 http://example-website.staging\n\nab -c 100 -n 500 -s 90 http://example-website.staging (Success)\n\nab -c 500 -n 5000 -s 90 http://example-website.staging (Fail)\n\nab -c 500 -n 5000 -s 90 http://bigbet-nlb-7ac1185001d91c31.elb.us-west-2.amazonaws.com\n\n## ab -c 500 -n 5000 -s 90 [URL]\n\n## ab -c 500 -n 500 -s 90\n\nab -c 50 -n 5000 -s 90 -p data.json -T application/json -rk https://staff.lendenclub.com/core/lender_app/prospect/verify\n\n-r Don't exit on socket receive errors.\n\n-k Enable the HTTP KeepAlive feature, i.e., perform multiple requests within one HTTP session. Default is no KeepAlive.\n\n"})}),"\n",(0,i.jsxs)(t.h3,{id:"--siege-for-constant-load",children:["- ",(0,i.jsx)(t.a,{href:"https://github.com/JoeDog/siege",children:"Siege"})," (for constant load)"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"apt-get install -y siege\n\nsiege -c2 -t2m [URL]\n"})}),"\n",(0,i.jsx)(t.h3,{id:"--hey--boom",children:"- hey / boom"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"hey https://dev.example.com\n\nhttps://github.com/rakyll/hey\n"})}),"\n",(0,i.jsxs)(t.h3,{id:"--httpsk6io",children:["- ",(0,i.jsx)(t.a,{href:"https://k6.io",children:"https://k6.io"})]}),"\n",(0,i.jsx)(t.p,{children:"Open source load testing tool and SaaS for engineering teams"}),"\n",(0,i.jsxs)(t.h3,{id:"--httpsfortioorg",children:["- ",(0,i.jsx)(t.a,{href:"https://fortio.org/",children:"https://fortio.org/"})]}),"\n",(0,i.jsx)(t.p,{children:"Fortio load testing library, command line tool, advanced echo server and web UI in go (golang). Allows to specify a set query-per-second load and record latency histograms and other useful stats."}),"\n",(0,i.jsx)(t.p,{children:"Fortio runs at a specified query per second (qps) and records an histogram of execution time and calculates percentiles (e.g. p99 ie the response time such as 99% of the requests take less than that number (in seconds, SI unit)). It can run for a set duration, for a fixed number of calls, or until interrupted (at a constant target QPS, or max speed/load per connection/thread)."}),"\n",(0,i.jsx)(t.h2,{id:"datasets-for-load-testing-databases",children:"Datasets for load testing databases"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"TPCC benchmark"}),"\n",(0,i.jsxs)(t.li,{children:["Yahoo! Cloud Serving Benchmark (YCSB)","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Key value pair workload"}),"\n",(0,i.jsx)(t.li,{children:"20 million tuples"}),"\n",(0,i.jsx)(t.li,{children:"Each tuple is 1KB (total database is ~20GB)"}),"\n",(0,i.jsx)(t.li,{children:"Each transactions reads/modifies 16 tuples"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"test-application",children:"Test application"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://github.com/blueperf",children:"https://github.com/blueperf"})}),"\n",(0,i.jsx)(t.h2,{id:"locust",children:"Locust"}),"\n",(0,i.jsx)(t.p,{children:"Locust is an easy-to-use, distributed, user load testing tool. It is intended for load-testing websites (or other systems) and figuring out how many concurrent users a system can handle."}),"\n",(0,i.jsx)(t.p,{children:"Locust is a scalable load testing framework written in Python"}),"\n",(0,i.jsxs)(t.p,{children:["Locust is completely event-based, and therefore it's possible to support thousands of concurrent users on a single machine. In contrast to many other event-based apps it doesn't use callbacks. Instead it uses light-weight processes, through ",(0,i.jsx)(t.a,{href:"http://www.gevent.org/",children:"gevent"}),". Each locust swarming your site is actually running inside its own process (or greenlet, to be correct). This allows you to write very expressive scenarios in Python without complicating your code with callbacks."]}),"\n",(0,i.jsx)(t.h3,{id:"running-locust-distributed",children:"Running Locust Distributed"}),"\n",(0,i.jsx)(t.p,{children:"You start one instance of Locust in master mode using the--masterflag. This is the instance that will be running Locust's web interface where you start the test and see live statistics. The master node doesn't simulate any users itself. Instead you have to start one or -most likely - multiple slave Locust nodes using the--slaveflag, together with the--master-host(to specify the IP/hostname of the master node)."}),"\n",(0,i.jsx)(t.h3,{id:"commands",children:"Commands"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"locust -f tasks.py --host localhost:5000\nlocust --no-reset-stats -f mqttClient.py\n\nlocust -f mqttClient.py\n\nlocust -f mqttClient.py --master\nlocust -f mqttClient.py --slave --master-host=[master-ip]\n\nlocust -f mqttClient.py --master --expect-slaves=5 #when running locust without webui in distributed mode\n\nlocust -f mqttClient.py --no-web -c 1000 -r 100 #running locust without webui\n\nlocust -f mqttClient.py --no-web -c 1000 -r 100 --run-time 1h30m #setting time limit for each test\n\nlocust -f mqttClient.py --csv=example --no-web -t10m #retrieve test statistics in csv format\n\nlocust -f mqttClient.py --no-web -c 2 -r 1\n\n## Dashboard\n\nlocalhost:8089\n\nhttps://locust.io\n\nhttps://docs.locust.io/en/stable/quickstart.html\n\nhttps://docs.locust.io/en/stable/running-locust-distributed.html\n\n## MQTT Stresser\n\ndocker run inovex/mqtt-stresser -broker tcp://[104.211.220.105:1883](http://104.211.220.105:1883/) -num-clients 100 -num-messages 10 -rampup-delay 1s -rampup-size 10 -global-timeout 180s -timeout 20s -username *example_mqtt_client -password xitanez123*\n\n## EMQTT Benchmark\n\ndocker run -d --name bench --network example-docker rkosyk/emqtt-benchmark\n\ndocker exec -it bench /bin/bash\n\n## Subscribe\n\ncreate 50K concurrent clients at the arrival rate of 100/sec:\n\n./emqtt_bench_sub -h mqtt.example.com -c 50000 -i 10 -t bench/%i -q 2\n\n./emqtt_bench_sub -h mqtt.example.com -c 2000 -i 10 -t bench/%i -q 2\n\n./emqtt_bench_sub -h mqtt.example.com -u example_mqtt_client -p xitanez123 -c 5 -i 5 -t bench/%i -q 1\n\n./emqtt_bench_sub -h mqtt.example.com -c 2200 -i 10 -t bench/%i -q 2\n\n./emqtt_bench_sub -h emqx -c 10 -i 10 -t bench/%i -q 2\nAround 1985 connections are no longer accepted (because of local)\n./emqtt_bench_sub -h mqtt.example.com -c 10 -i 10 -t bench/%i -q 2 -C false\n\n## Publish\n\ncreate 100 clients and each client publish messages at the rate of 100 msg/sec with 256 Byte data size\n\n./emqtt_bench_pub -h mqtt.example.com -c 100 -I 10 -t bench/%i -s 256\n\n./emqtt_bench_pub -h mqtt.example.com -c 10 -I 1 -t bench/%i -s 256 -q 1 -C false\n\n## Final\n\nSubscribe\n\n./emqtt_bench_sub -h mqtt.example.com -u example_mqtt_client -P xitanez123 -c 1000 -i 10 -t bench/%i -q 1 -C false\n\n./emqtt_bench_sub -h mqtt.example.com -u example_mqtt_client -P xitanez123 -c 1 -i 10 -t bench/+ -q 1 -C false\n\n## Publish\n\n## Publish doesn't need persistent connection (clean session = true)\n\n# payload size 10KB\n\n./emqtt_bench_pub -h mqtt.example.com -u example_mqtt_client -P xitanez123 -c 500 -I 10000 -t bench/%i -s 10000 -q 1\n# payload size 1KB\n\n./emqtt_bench_pub -h mqtt.example.com -u example_mqtt_client -P xitanez123 -c 100 -I 1000 -t bench/%i -s 1000 -q 1\n10000 Clients with 10KB Payload at 30 sec at QoS 1\n\n./emqtt_bench_pub -h mqtt.example.com -u example_mqtt_client -P xitanez123 -c 10000 -I 30000 -t bench/%i -s 10000 -q 1\n\nhttps://github.com/emqtt/emqtt_benchmark\n"})}),"\n",(0,i.jsx)(t.h2,{id:"qa-companies",children:"QA Companies"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Browserstack"}),"\n",(0,i.jsx)(t.li,{children:"Saucelabs"}),"\n",(0,i.jsx)(t.li,{children:"Lambdatest"}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"others",children:"Others"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://aws.amazon.com/about-aws/whats-new/2021/05/introducing-distributed-load-testing-v1-3",children:"https://aws.amazon.com/about-aws/whats-new/2021/05/introducing-distributed-load-testing-v1-3"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://www.testingexcellence.com/top-10-open-source-performance-testing-tools",children:"https://www.testingexcellence.com/top-10-open-source-performance-testing-tools"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://www.blazemeter.com/",children:"BlazeMeter Continuous Testing | BlazeMeter by Perforce"})}),"\n",(0,i.jsx)(t.p,{children:"Selenium"}),"\n",(0,i.jsxs)(t.p,{children:["QAOps - ",(0,i.jsx)(t.a,{href:"https://www.browserstack.com/guide/what-is-qaops",children:"What is QAOps? (With Methodologies) | BrowserStack"})]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://github.com/Nikhil-Kulkarni/qa-gpt",children:"GitHub - Nikhil-Kulkarni/qa-gpt: Automate UI testing + functionality testing with GPT-4 Vision"})})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var s=n(296540);const i={},a=s.createContext(i);function o(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);