"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[67378],{85823:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>m,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"technologies/brokers/vernemq/commands","title":"Commands","description":"","source":"@site/docs/technologies/brokers/vernemq/commands.md","sourceDirName":"technologies/brokers/vernemq","slug":"/technologies/brokers/vernemq/commands","permalink":"/technologies/brokers/vernemq/commands","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/technologies/brokers/vernemq/commands.md","tags":[],"version":"current","lastUpdatedBy":"Deepak Sood","lastUpdatedAt":1678191863000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"VerneMQ","permalink":"/technologies/brokers/vernemq/"},"next":{"title":"Volttron","permalink":"/technologies/brokers/volttron"}}');var i=s(474848),o=s(28453);const r={},a="Commands",m={},c=[];function d(e){const n={code:"code",h1:"h1",header:"header",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"commands",children:"Commands"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'vmq-admin\nUsage: vmq-admin <sub-command>\nAdministrate the cluster.\nSub-commands:\n    node        Manage this node\n    cluster     Manage this nodes cluster membership\n    session     Retrieve session information\n  show\n  disconnect\n  reauthorize\n    plugin      Manage plugin system\n    listener    Manage listener interfaces\n    metrics     Retrieve System Metrics\n    api-key     Manage API keys for the HTTP management interface\n    trace       Trace various aspects of VerneMQ\n  Use --help after a sub-command for more details.\n\nvmq-admin session show\n Usage: vmq-admin session show\n\n   Show and filter information about MQTT sessions\n\n Default options:\n   --client_id --is_online --mountpoint --peer_host --peer_port --user\n\n Options\n\n   --limit=<NumberOfResults>\n       Limit the number of results returned from each node in the cluster.\n       Defaults is 100.\n\n   --rowtimeout=<NumberOfMilliseconds>\n       Limits the time spent when fetching a single row.\n       Default is 100 milliseconds.\n   --node\n   --mountpoint\n   --client_id\n   --queue_pid\n   --queue_size\n   --session_pid\n   --is_offline\n   --is_online\n   --statename\n   --deliver_mode\n   --offline_messages\n   --online_messages\n   --num_sessions\n   --clean_session\n   --is_plugin\n   --queue_started_at\n   --user\n   --peer_host\n   --peer_port\n   --protocol\n   --waiting_acks\n   --session_started_at\n   --topic\n   --qos\n   --rap\n   --no_local\n   --msg_ref\n   --msg_qos\n   --routing_key\n   --dup\n   --payload\n\n Examples\n  vmq-admin session show --node --is_online --client_id=client1\n  vmq-admin session show --topic --client_id\n  vmq-admin session show --topic --client_id --topic=some/topic\n  vmq-admin session show --client_id=client1 --queue_started_at --session_started_at\n\n  vmq-admin session show --client_id --clean_session=false\n\n  vmq-admin session show --limit=1000   --client_id --is_online --mountpoint --peer_host --peer_port --user  --queue_size   --offline_messages  --qos\n\n# Commands\ndocker run -e "DOCKER_VERNEMQ_ALLOW_ANONYMOUS=on" -p 1883:1883 -p 8888:8888 --name vernemq -d erlio/docker-vernemq\n\nvmq-admin session disconnect client-id=client1 --cleanup\n\nvmq-admin listener show\n\nvmq-admin trace client client-id=<client-id>\nvmq-admin trace client client-id=/Samhi-01\n\nvmq-admin trace client client-id=/Samhi-42 | grep Samhi-42\n\nvmq-admin trace client client-id=/Samhi-42 | grep Samhi-42 >> trace.log 2>&1 &\n'})})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var t=s(296540);const i={},o=t.createContext(i);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);