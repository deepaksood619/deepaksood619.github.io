"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[48191],{393493:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"devops/terminal-bash/2-system-calls","title":"(2) System Calls","description":"man syscalls","source":"@site/docs/devops/terminal-bash/2-system-calls.md","sourceDirName":"devops/terminal-bash","slug":"/devops/terminal-bash/2-system-calls","permalink":"/devops/terminal-bash/2-system-calls","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/devops/terminal-bash/2-system-calls.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1707138374000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"(1) Linux General / Unix / Linux Commands","permalink":"/devops/terminal-bash/1-linux-general-unix-linux-commands"},"next":{"title":"(3) Library Functions","permalink":"/devops/terminal-bash/3-library-functions"}}');var n=s(474848),a=s(28453);const r={},l="(2) System Calls",o={},c=[{value:"man syscalls",id:"man-syscalls",level:2},{value:"msync",id:"msync",level:2},{value:"bpf (berkeley packet filter) / eBPF (extended berkeley filter)",id:"bpf-berkeley-packet-filter--ebpf-extended-berkeley-filter",level:2}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"2-system-calls",children:"(2) System Calls"})}),"\n",(0,n.jsx)(t.h2,{id:"man-syscalls",children:"man syscalls"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"http://man7.org/linux/man-pages/man2/syscalls.2.html",children:"http://man7.org/linux/man-pages/man2/syscalls.2.html"})}),"\n",(0,n.jsx)(t.h2,{id:"msync",children:"msync"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:"msync - synchronize a file with a memory map"})}),"\n",(0,n.jsxs)(t.p,{children:["msync() flushes changes made to the in-core copy of a file that was mapped into memory using ",(0,n.jsx)(t.a,{href:"http://man7.org/linux/man-pages/man2/mmap.2.html",children:"mmap(2)"})," back to the filesystem. Without use of this call, there is no guarantee that changes are written back before ",(0,n.jsx)(t.a,{href:"http://man7.org/linux/man-pages/man2/munmap.2.html",children:"munmap(2)"})," is called."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"http://man7.org/linux/man-pages/man2/msync.2.html",children:"http://man7.org/linux/man-pages/man2/msync.2.html"})}),"\n",(0,n.jsx)(t.h2,{id:"bpf-berkeley-packet-filter--ebpf-extended-berkeley-filter",children:"bpf (berkeley packet filter) / eBPF (extended berkeley filter)"}),"\n",(0,n.jsx)(t.p,{children:"bpf - perform a command on an extended BPF map or program"}),"\n",(0,n.jsxs)(t.p,{children:["The Berkeley Packet Filter(BPF) provides a raw interface to ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Data_link_layer",children:"data link layers"}),", permitting raw link-layer packets to be sent and received. It is available on most ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Unix-like",children:"Unix-like"})," operating systems. In addition, if the driver for the network interface supports ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Promiscuous_mode",children:"promiscuous mode"}),", it allows the interface to be put into that mode so that all packets on the ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Computer_network",children:"network"})," can be received, even those destined to other hosts."]}),"\n",(0,n.jsxs)(t.p,{children:["BPF supports filtering packets, allowing a ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Userspace",children:"userspace"}),(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Process_(computer_science)",children:"process"})," to supply a filter program that specifies which packets it wants to receive. For example, a ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Tcpdump",children:"tcpdump"})," process may only want to receive packets that initiate a TCP connection. BPF only returns packets that pass the filter that the process supplies. This avoids copying unwanted packets from the ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Operating_system",children:"operating system"}),(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Kernel_(computer_science)",children:"kernel"})," to the process, greatly improving performance."]}),"\n",(0,n.jsxs)(t.p,{children:["BPF is sometimes used to refer just to the filtering mechanism, rather than to the entire interface. Some systems, such as ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Linux",children:"Linux"})," and ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Tru64_UNIX",children:"Tru64 UNIX"}),", provide a raw interface to the data link layer other than the BPF raw interface but use the BPF filtering mechanisms for that raw interface"]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Berkeley_Packet_Filter",children:"https://en.wikipedia.org/wiki/Berkeley_Packet_Filter"})}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://blog.cloudflare.com/cloudflare-architecture-and-how-bpf-eats-the-world",children:"https://blog.cloudflare.com/cloudflare-architecture-and-how-bpf-eats-the-world"})}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/cilium/hubble",children:"GitHub - cilium/hubble: Hubble - Network, Service & Security Observability for Kubernetes using eBPF"})})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>l});var i=s(296540);const n={},a=i.createContext(n);function r(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);