"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[49350],{379940:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"frontend/frontend-intro/others","title":"Others","description":"BFCache","source":"@site/docs/frontend/frontend-intro/others.md","sourceDirName":"frontend/frontend-intro","slug":"/frontend/frontend-intro/others","permalink":"/frontend/frontend-intro/others","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/frontend/frontend-intro/others.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1734556934000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Microfrontend Architecture","permalink":"/frontend/frontend-intro/microfrontend-architecture"},"next":{"title":"Performance","permalink":"/frontend/frontend-intro/performance"}}');var t=n(474848),r=n(28453);const o={},l="Others",a={},c=[{value:"BFCache",id:"bfcache",level:2},{value:"Image Compression / Compress Image / Image Tools",id:"image-compression--compress-image--image-tools",level:2},{value:"ImageMagick",id:"imagemagick",level:3},{value:"Script - PNG to JPG Conversion, Resizing, and Compression",id:"script---png-to-jpg-conversion-resizing-and-compression",level:4},{value:"jpegoptim",id:"jpegoptim",level:3},{value:"mozjpeg (via <code>cjpeg</code>)",id:"mozjpeg-via-cjpeg",level:3},{value:"ImageOptim CLI",id:"imageoptim-cli",level:3},{value:"jpegtran",id:"jpegtran",level:3},{value:"Recommendation",id:"recommendation",level:3}];function h(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"others",children:"Others"})}),"\n",(0,t.jsx)(i.h2,{id:"bfcache",children:"BFCache"}),"\n",(0,t.jsx)(i.p,{children:"Back/forward cache (or bfcache) is a browser optimization that enables instant back and forward navigation. It significantly improves the browsing experience for users-especially those with slower networks or devices."}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.a,{href:"https://web.dev/bfcache/",children:"Back/forward cache"})}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.a,{href:"https://nitropack.io/blog/post/back-forward-cache",children:"Back/Forward Cache: What It Is and How to Use It to Serve Content Immediately"})}),"\n",(0,t.jsx)(i.h2,{id:"image-compression--compress-image--image-tools",children:"Image Compression / Compress Image / Image Tools"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.a,{href:"https://imgix.com",children:"https://imgix.com"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.a,{href:"https://squoosh.app/",children:(0,t.jsx)(i.strong,{children:"https://squoosh.app/"})})}),"\n",(0,t.jsxs)(i.li,{children:["Birme - ",(0,t.jsx)(i.a,{href:"https://www.birme.net",children:"https://www.birme.net"})]}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.a,{href:"https://tinypng.com/",children:"TinyPNG - Compress WebP, PNG and JPEG images intelligently"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.a,{href:"https://www.upscale.media/",children:"AI Image Upscaler - Enlarge & Enhance Your Photos for Free - Upscale.media"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.a,{href:"https://redketchup.io/image-resizer",children:"Image Resizer - Crop & Resize Image Online | RedKetchup"})}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"imagemagick",children:"ImageMagick"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"brew install imagemagick\n\nmogrify -format jpg -quality 50% /path/to/folder/abc.png\n\nmogrify -format jpg /path/to/folder/*.png\n\nmogrify -format jpg -quality 50% *.png\nmogrify -format jpg -quality 50% *.png && rm *.png\n\nmogrify -quality 20% /path/to/folder/*.jpg\n\nmogrify -quality 50% *.jpg\nmogrify -quality 10% *.jpg\nmogrify -format jpg -quality 50% *.jpeg\n\n# Reduce: If you set a lower quality value (e.g., `-quality 50`), the image file size is reduced by increasing compression. This may lead to a loss in visual quality (e.g., pixelation or artifacts), but the image becomes lighter and faster to load.\n\n# Leave (High Quality): If you set a higher quality value (e.g., `-quality 90` or `-quality 100`), the image retains more detail with minimal compression. This ensures better visual fidelity but results in a larger file size.\n\n# convert pdf to images\nconvert input.pdf output.jpg\n\n# For good quality use these parameters\nconvert -density 300 -quality 100 in.pdf out.jpg\n\n# [ImageMagick - Command-line Tools: Convert](https://www.imagemagick.org/script/convert.php)\n"})}),"\n",(0,t.jsx)(i.h4,{id:"script---png-to-jpg-conversion-resizing-and-compression",children:"Script - PNG to JPG Conversion, Resizing, and Compression"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:'#!/bin/bash\n\n# Set maximum dimensions for resizing (e.g., width=1000px, height=650px)\nmax_width=1000\nmax_height=650\n\n# Initialize loop counter\ncounter=0\n\n# Loop through both PNG and JPG files\nfor file in *.png *.jpg *.jpeg; do\n  # Check if the file exists and is a regular file (not a directory)\n  if [ -f "$file" ]; then\n    # Increment the loop counter\n    ((counter++))\n\n    # Get the current file size in bytes (macOS compatible)\n    original_size=$(stat -f %z "$file")\n\n    # Check if it\'s a PNG file and convert it to JPG\n    if [[ "$file" =~ \\.png$ ]]; then\n      # Convert PNG to JPG with quality 50, save it with the same name but a .jpg extension\n      magick "$file" -quality 50 "${file%.png}.jpg"\n      # Remove the original PNG file after conversion\n      rm "$file"\n      # Set the filename to the new JPG file for further processing\n      file="${file%.png}.jpg"\n    fi\n\n    # Get the current image dimensions (width x height)\n    dimensions=$(identify -format "%wx%h" "$file")\n    width=$(echo $dimensions | cut -d \'x\' -f 1)\n    height=$(echo $dimensions | cut -d \'x\' -f 2)\n\n    # Resize image while maintaining aspect ratio\n    if [ "$width" -gt "$max_width" ]; then\n      # Calculate new height while maintaining aspect ratio\n      new_height=$((max_width * height / width))\n      magick "$file" -resize "${max_width}x${new_height}" "$file"\n    elif [ "$height" -gt "$max_height" ]; then\n      # Calculate new width while maintaining aspect ratio\n      new_width=$((max_height * width / height))\n      magick "$file" -resize "${new_width}x${max_height}" "$file"\n    fi\n\n    # Optimize image with quality set to 50\n    mogrify -strip -interlace Plane -quality 50 "$file"\n\n    # Get the new file size (macOS compatible)\n    new_size=$(stat -f %z "$file")\n\n    # Compare sizes and keep the smaller one\n    if [ "$new_size" -ge "$original_size" ]; then\n      echo "[$counter] Skipping $file, new size is not smaller."\n    else\n      echo "[$counter] Processed $file successfully."\n    fi\n  fi\ndone\n'})}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.a,{href:"/ai/computer-vision-cv/imagemagick",children:"imagemagick"})}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.a,{href:"https://github.com/kornelski/pngquant",children:"GitHub - kornelski/pngquant: Lossy PNG compressor - pngquant command based on libimagequant library"})}),"\n",(0,t.jsx)(i.h3,{id:"jpegoptim",children:"jpegoptim"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Description"}),": A tool specifically for optimizing JPEG images. It supports both lossy and lossless optimization."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Compression Method"}),": Lossy and lossless."]}),"\n"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"# installation\nbrew install jpegoptim\n\n# Compresses all JPG files to a maximum quality of 75% while preserving EXIF data.\njpegoptim --max=75 *.jpg\n\n# Maximum Compression\n# --strip-all - Strips all metadata (e.g., EXIF, comments, color profiles) to reduce file size.\n# --all-progressive - Converts images to progressive JPEGs, which are better for web and often smaller.\njpegoptim --max=75 --strip-all --all-progressive *.jpg\n"})}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.a,{href:"https://github.com/tjko/jpegoptim",children:"GitHub - tjko/jpegoptim: jpegoptim - utility to optimize/compress JPEG files"})}),"\n",(0,t.jsxs)(i.h3,{id:"mozjpeg-via-cjpeg",children:["mozjpeg (via ",(0,t.jsx)(i.code,{children:"cjpeg"}),")"]}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Description"}),": A JPEG encoder that offers excellent lossy compression with reduced file sizes."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Compression Method"}),": Lossy."]}),"\n"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"# installation\nbrew install mozjpeg\n\n# Compresses `original.jpg` into `compressed.jpg` with 75% quality.\ncjpeg -quality 75 -outfile compressed.jpg original.jpg\n\n# Maximum Compression with Optimized Huffman Tables\ncjpeg -quality 85 -progressive -optimize -tune-psnr -outfile temp.jpg\n"})}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.a,{href:"https://github.com/mozilla/mozjpeg",children:"GitHub - mozilla/mozjpeg: Improved JPEG encoder."})}),"\n",(0,t.jsx)(i.h3,{id:"imageoptim-cli",children:"ImageOptim CLI"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Description"}),": A macOS-friendly tool that focuses on lossless compression, preserving image quality while reducing file size."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Compression Method"}),": Lossless."]}),"\n"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"# installation\nbrew install imageoptim-cli\n\n# Compresses all JPG files with a focus on smaller file sizes.\nimageoptim --quality-low *.jpg\n"})}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.a,{href:"https://github.com/mozilla/mozjpeg",children:"GitHub - mozilla/mozjpeg: Improved JPEG encoder."})}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.a,{href:"https://mozjpeg.com/",children:"MozJpeg - Compress/edit images online."})}),"\n",(0,t.jsx)(i.h3,{id:"jpegtran",children:"jpegtran"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"Description"}),": A lossless JPEG compressor that rearranges file structure for optimal compression."]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"Compression Method"}),": Lossless."]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"Installation"}),":"]}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.code,{children:"brew install jpeg"})}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"Example Command"}),":"]}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.code,{children:"jpegtran -optimize -progressive -outfile compressed.jpg original.jpg"})}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Optimizes and converts the image to a progressive JPEG format."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"recommendation",children:"Recommendation"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["Use ",(0,t.jsx)(i.strong,{children:"ImageMagick"})," or ",(0,t.jsx)(i.strong,{children:"jpegoptim"})," if you want flexibility between lossy and lossless compression."]}),"\n",(0,t.jsxs)(i.li,{children:["Use ",(0,t.jsx)(i.strong,{children:"mozjpeg"})," for maximum reduction in file size with excellent visual quality."]}),"\n",(0,t.jsxs)(i.li,{children:["Use ",(0,t.jsx)(i.strong,{children:"pngquant"})," for png images"]}),"\n"]})]})}function p(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>l});var s=n(296540);const t={},r=s.createContext(t);function o(e){const i=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:i},e.children)}}}]);