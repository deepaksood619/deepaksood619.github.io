"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[14096],{545520:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"mathematics/general/ackermann-function","title":"Ackermann Function","description":"In computability theory, the**Ackermann function**, named after Wilhelm Ackermann, is one of the simplest  and earliest-discovered examples of a totalcomputable function that is not primitive recursive. All primitive recursive functions are total and computable, but the Ackermann function illustrates that not all total computable functions are primitive recursive.","source":"@site/docs/mathematics/general/ackermann-function.md","sourceDirName":"mathematics/general","slug":"/mathematics/general/ackermann-function","permalink":"/mathematics/general/ackermann-function","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/mathematics/general/ackermann-function.md","tags":[],"version":"current","lastUpdatedBy":"Deepak Sood","lastUpdatedAt":1678191863000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"General","permalink":"/mathematics/general/"},"next":{"title":"Advanced Topics","permalink":"/mathematics/general/advanced-topics"}}');var a=n(474848),r=n(28453);const o={},c="Ackermann Function",s={},l=[];function m(e){const t={a:"a",em:"em",h1:"h1",header:"header",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"ackermann-function",children:"Ackermann Function"})}),"\n",(0,a.jsxs)(t.p,{children:["In ",(0,a.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Computability_theory",children:"computability theory"}),", the",(0,a.jsx)(t.strong,{children:"Ackermann function"}),", named after ",(0,a.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Wilhelm_Ackermann",children:"Wilhelm Ackermann"}),", is one of the simplest  and earliest-discovered examples of a ",(0,a.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Total_function",children:"total"}),(0,a.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Computable_function",children:"computable function"})," that is not ",(0,a.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Primitive_recursive_function",children:"primitive recursive"}),". All primitive recursive functions are total and computable, but the Ackermann function illustrates that not all total computable functions are primitive recursive.\nThis function has a value ackermann(n) < 5, for any value of ",(0,a.jsx)(t.em,{children:"n"})," that can be written in this physical universe. So essentially it's a constant time operation"]})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var i=n(296540);const a={},r=i.createContext(a);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);