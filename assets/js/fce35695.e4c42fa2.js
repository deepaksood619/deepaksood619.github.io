"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[59553],{157729:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"languages/c++/tc-pl4","title":"TC++PL4","description":"Part I: Introductory Material","source":"@site/docs/languages/c++/tc-pl4.md","sourceDirName":"languages/c++","slug":"/languages/c++/tc-pl4","permalink":"/languages/c++/tc-pl4","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/languages/c++/tc-pl4.md","tags":[],"version":"current","lastUpdatedBy":"Deepak Sood","lastUpdatedAt":1678191863000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Storage classes","permalink":"/languages/c++/storage-classes"},"next":{"title":"Templates","permalink":"/languages/c++/templates"}}');var r=s(474848),l=s(28453);const t={},a="TC++PL4",c={},d=[{value:"Part I: Introductory Material",id:"part-i-introductory-material",level:2},{value:"Part II: Basic Facilities",id:"part-ii-basic-facilities",level:2},{value:"Part III: Abstraction Mechanisms",id:"part-iii-abstraction-mechanisms",level:2},{value:"Part IV: The Standard Library",id:"part-iv-the-standard-library",level:2}];function o(n){const e={h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",...(0,l.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"tcpl4",children:"TC++PL4"})}),"\n",(0,r.jsx)(e.h2,{id:"part-i-introductory-material",children:"Part I: Introductory Material"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Notes to the Reader"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["A Tour of C++: ",(0,r.jsx)(e.strong,{children:"The Basics"})]}),"\n",(0,r.jsx)(e.p,{children:"The Basics describes C++'s model of memory, computation, and error handling."}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"The Basics"}),"\n",(0,r.jsx)(e.p,{children:"Hello, World!; Types, Variables, and Arithmetic; Constants; Tests and Loops; Pointers, Arrays, and Loops"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"User-Defined Types"}),"\n",(0,r.jsx)(e.p,{children:"Structures; Classes; Enumerations"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Modularity"}),"\n",(0,r.jsx)(e.p,{children:"Separate Compilation; Namespaces; Error Handling"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["A Tour of C++: ",(0,r.jsx)(e.strong,{children:"Abstraction Mechanisms"})]}),"\n",(0,r.jsx)(e.p,{children:"Abstraction Mechanisms presents the language features supporting data abstraction, object-oriented programming, and generic programming."}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Classes"}),"\n",(0,r.jsx)(e.p,{children:"Concrete Types; Abstract Types; Virtual Functions; Class Hierarchies"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Copy and Move"}),"\n",(0,r.jsx)(e.p,{children:"Copying Containers; Moving Containers; Resource Management; Suppressing Operations"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Templates"}),"\n",(0,r.jsx)(e.p,{children:"Parameterized Types; Function Templates; Function Objects; Variadic Templates; Aliases"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["A Tour of C++: ",(0,r.jsx)(e.strong,{children:"Containers and Algorithms"})]}),"\n",(0,r.jsx)(e.p,{children:"Containers and Algorithms introduces strings, simple I/O, containers, and algorithms as provided by the standard library."}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Libraries"}),"\n",(0,r.jsx)(e.p,{children:"Standard-Library Overview; The Standard-Library Headers and Namespace"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Strings"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Stream I/O"}),"\n",(0,r.jsx)(e.p,{children:"Output; Input; I/O of User-Defined Types"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Containers"}),"\n",(0,r.jsx)(e.p,{children:"vector; list; map; unordered_map; Container Overview"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Algorithms"}),"\n",(0,r.jsx)(e.p,{children:"Use of Iterators; Iterator Types; Stream Iterators; Predicates; Algorithm Overview; Container Algorithms"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["A Tour of C++: ",(0,r.jsx)(e.strong,{children:"Concurrency and Utilities"})]}),"\n",(0,r.jsx)(e.p,{children:"Concurrency and Utilities outlines the standard-library utilities related to resource management, concurrency, mathematical computation, regular expressions, and more."}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Introduction"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Resource Management"}),"\n",(0,r.jsx)(e.p,{children:"unique_ptr and shared_ptr"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Concurrency"}),"\n",(0,r.jsx)(e.p,{children:"Tasks and threads; Passing Arguments; Returning Results; Sharing Data; Communicating Tasks"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Small Utility Components"}),"\n",(0,r.jsx)(e.p,{children:"Time; Type Functions; pair and tuple"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Regular Expressions"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Math"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:"Mathematical Functions and Algorithms; Complex Numbers; Random Numbers; Vector Arithmetic; Numeric Limits"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"part-ii-basic-facilities",children:"Part II: Basic Facilities"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Types and Declarations"}),"\n",(0,r.jsx)(e.p,{children:"Fundamental types, naming, scopes, initialization, simple type deduction, object lifetimes, and type aliases"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Pointers, Arrays, and References"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Structures, Unions, and Enumerations"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Statements"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Expressions"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Select Operations"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Functions"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Exception Handling"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Namespaces"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Source Files and Programs"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"part-iii-abstraction-mechanisms",children:"Part III: Abstraction Mechanisms"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsx)(e.li,{children:"Classes"}),"\n",(0,r.jsx)(e.li,{children:"Construction, Cleanup, Copy, and Move"}),"\n",(0,r.jsx)(e.li,{children:"Overloading"}),"\n",(0,r.jsx)(e.li,{children:"Special Operators"}),"\n",(0,r.jsx)(e.li,{children:"Derived Classes"}),"\n",(0,r.jsx)(e.li,{children:"Class Hierarchies"}),"\n",(0,r.jsx)(e.li,{children:"Run-Time Type Information"}),"\n",(0,r.jsx)(e.li,{children:"Templates"}),"\n",(0,r.jsx)(e.li,{children:"Generic Programming"}),"\n",(0,r.jsx)(e.li,{children:"Specialization"}),"\n",(0,r.jsx)(e.li,{children:"Instantiation"}),"\n",(0,r.jsx)(e.li,{children:"Templates and Hierarchies"}),"\n",(0,r.jsx)(e.li,{children:"Metaprogramming"}),"\n",(0,r.jsx)(e.li,{children:"A Matrix Design"}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"part-iv-the-standard-library",children:"Part IV: The Standard Library"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsx)(e.li,{children:"Standard Library Summary"}),"\n",(0,r.jsx)(e.li,{children:"STLContainers"}),"\n",(0,r.jsx)(e.li,{children:"STLAlgorithms"}),"\n",(0,r.jsx)(e.li,{children:"STLIterators"}),"\n",(0,r.jsx)(e.li,{children:"Memory and Resources"}),"\n",(0,r.jsx)(e.li,{children:"Utilities"}),"\n",(0,r.jsx)(e.li,{children:"Strings"}),"\n",(0,r.jsx)(e.li,{children:"Regular Expressions"}),"\n",(0,r.jsx)(e.li,{children:"I/OStreams"}),"\n",(0,r.jsx)(e.li,{children:"Locales"}),"\n",(0,r.jsx)(e.li,{children:"Numerics"}),"\n",(0,r.jsx)(e.li,{children:"Concurrency"}),"\n",(0,r.jsx)(e.li,{children:"Threads and Tasks"}),"\n",(0,r.jsx)(e.li,{children:"The C Standard Library"}),"\n",(0,r.jsx)(e.li,{children:"Compatibility"}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(o,{...n})}):o(n)}},28453:(n,e,s)=>{s.d(e,{R:()=>t,x:()=>a});var i=s(296540);const r={},l=i.createContext(r);function t(n){const e=i.useContext(l);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:t(n.components),i.createElement(l.Provider,{value:e},n.children)}}}]);