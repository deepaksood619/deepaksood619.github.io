"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[59052],{634770:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"python/django/others","title":"Others","description":"Fixtures","source":"@site/docs/python/django/others.md","sourceDirName":"python/django","slug":"/python/django/others","permalink":"/python/django/others","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/python/django/others.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1726144090000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Other Topics","permalink":"/python/django/other-topics"},"next":{"title":"Overview","permalink":"/python/django/overview"}}');var o=t(474848),r=t(28453);const a={},i="Others",l={},d=[{value:"Fixtures",id:"fixtures",level:2},{value:"Providing initial data with fixtures",id:"providing-initial-data-with-fixtures",level:3},{value:"PostgreSQL-specific ModelFields",id:"postgresql-specific-modelfields",level:2},{value:"Optimizations",id:"optimizations",level:2},{value:"Messages Framework",id:"messages-framework",level:2},{value:"Concepts",id:"concepts",level:2},{value:"Generic View: less code is better",id:"generic-view-less-code-is-better",level:2},{value:"Deleting an app in Django",id:"deleting-an-app-in-django",level:2},{value:"Managers",id:"managers",level:2},{value:"Manager names",id:"manager-names",level:3},{value:"reStructured Text (reST)",id:"restructured-text-rest",level:2},{value:"Django Resources",id:"django-resources",level:2},{value:"Others",id:"others-1",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"others",children:"Others"})}),"\n",(0,o.jsx)(n.h2,{id:"fixtures",children:"Fixtures"}),"\n",(0,o.jsx)(n.p,{children:"It's sometimes useful to pre-populate your database with hard-coded data when you're first setting up an app. You can provide initial data with fixtures or migrations."}),"\n",(0,o.jsx)(n.h3,{id:"providing-initial-data-with-fixtures",children:"Providing initial data with fixtures"}),"\n",(0,o.jsxs)(n.p,{children:["A fixture is a collection of data that Django knows how to import into a database. The most straightforward way of creating a fixture if you've already got some data is to use the ",(0,o.jsx)(n.a,{href:"https://docs.djangoproject.com/en/1.11/ref/django-admin/#django-admin-dumpdata",children:"manage.pydumpdata"})," command. Or, you can write fixtures by hand; fixtures can be written as JSON, XML or YAML (with ",(0,o.jsx)(n.a,{href:"http://www.pyyaml.org/",children:"PyYAML"})," installed) documents."]}),"\n",(0,o.jsx)(n.h2,{id:"postgresql-specific-modelfields",children:"PostgreSQL-specific ModelFields"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Introduced in Django 1.8"}),"\n",(0,o.jsx)(n.li,{children:"ArrayField"}),"\n",(0,o.jsx)(n.li,{children:"HStoreField"}),"\n",(0,o.jsx)(n.li,{children:"Range Fields"}),"\n",(0,o.jsx)(n.li,{children:"JSONField"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["A field for storing JSON encoded data. In Python the data is represented in its Python native format: dictionaries, lists, strings, numbers, booleans and ",(0,o.jsx)(n.strong,{children:"None"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["PostgreSQL has two native JSON based data types: ",(0,o.jsx)(n.strong,{children:"json"})," and ",(0,o.jsx)(n.strong,{children:"jsonb"}),". The main difference between them is how they are stored and how they can be queried. PostgreSQL's ",(0,o.jsx)(n.strong,{children:"json"})," field is stored as the original string representation of the JSON and must be decoded on the fly when queried based on keys. The ",(0,o.jsx)(n.strong,{children:"jsonb"})," field is stored based on the actual structure of the JSON which allows indexing. The trade-off is a small additional cost on writing to the ",(0,o.jsx)(n.strong,{children:"jsonb"})," field. ",(0,o.jsx)(n.strong,{children:"JSONField"})," uses ",(0,o.jsx)(n.strong,{children:"jsonb"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"Can Supply RAW PostgreSQL queries for filtering and other direct postgres statements"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:'RawSQL("metadata->>%s", ("TPA_License"),")'})}),"\n",(0,o.jsx)(n.p,{children:"Use psycopg2 for connecting to database instance"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"http://initd.org/psycopg/docs/module.html#psycopg2.connect",children:"http://initd.org/psycopg/docs/module.html"})}),"\n",(0,o.jsx)(n.h2,{id:"optimizations",children:"Optimizations"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Never use len on queryset, use exists or count instead"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Auto-generate models"}),"\n",(0,o.jsx)(n.p,{children:"Utility - inspectdb can create models by introspecting an existing database."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"python manage.py inspectdb > models.py"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Use values() or values_list() and only() query expressions for getting specific values"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'names = []\n\nfor name in Song.objects.filter(artist=a).values_list("name", flat=True):\n    names.append(name)\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://www.peterbe.com/plog/django-orm-optimization-story-on-selecting-the-least-possible",children:"https://www.peterbe.com/plog/django-orm-optimization-story-on-selecting-the-least-possible"})}),"\n",(0,o.jsx)(n.h2,{id:"messages-framework",children:"Messages Framework"}),"\n",(0,o.jsxs)(n.p,{children:["Django apps - ",(0,o.jsx)(n.code,{children:"django.contrib.messages"})]}),"\n",(0,o.jsx)(n.p,{children:'Quite commonly in web applications, you need to display a one-time notification message (also known as "flash message") to the user after processing a form or some other types of user input.'}),"\n",(0,o.jsx)(n.p,{children:"For this, Django provides full support for cookie- and session-based messaging, for both anonymous and authenticated users. The messages framework allows you to temporarily store messages in one request and retrieve them for display in a subsequent request (usually the next one). Every message is tagged with a specificlevelthat determines its priority (e.g., info, warning, orerror)."}),"\n",(0,o.jsx)(n.h2,{id:"concepts",children:"Concepts"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"mysite/urls.py\n\nfrom django.conf.urls import include, url\nfrom django.contrib import admin\n urlpatterns = [\n    url(r'^polls/', include('polls.urls')),\n    url(r'^admin/', admin.site.urls),\n]\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.a,{href:"https://docs.djangoproject.com/en/1.11/ref/urls/#django.conf.urls.include",children:"include()"})," function allows referencing other URLconfs. Note that the regular expressions for the ",(0,o.jsx)(n.a,{href:"https://docs.djangoproject.com/en/1.11/ref/urls/#django.conf.urls.include",children:"include()"})," function doesn't have a$(end-of-string match character) but rather a trailing slash. Whenever Django encounters ",(0,o.jsx)(n.a,{href:"https://docs.djangoproject.com/en/1.11/ref/urls/#django.conf.urls.include",children:"include()"}),", it chops off whatever part of the URL matched up to that point and sends the remaining string to the included URLconf for further processing."]}),"\n",(0,o.jsxs)(n.p,{children:["The idea behind ",(0,o.jsx)(n.a,{href:"https://docs.djangoproject.com/en/1.11/ref/urls/#django.conf.urls.include",children:"include()"}),' is to make it easy to plug-and-play URLs. Since polls are in their own URLconf (polls/urls.py), they can be placed under "/polls/", or under "/fun_polls/", or under "/content/polls/", or any other path root, and the app will still work.']}),"\n",(0,o.jsx)(n.h2,{id:"generic-view-less-code-is-better",children:"Generic View: less code is better"}),"\n",(0,o.jsx)(n.p,{children:"Generic views abstract common patterns to the point where you don't even need to write Python code to write an app."}),"\n",(0,o.jsx)(n.h2,{id:"deleting-an-app-in-django",children:"Deleting an app in Django"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Remove models from the apps"}),"\n",(0,o.jsx)(n.li,{children:"Run migrations and migrate"}),"\n",(0,o.jsx)(n.li,{children:"Delete all files"}),"\n",(0,o.jsx)(n.li,{children:"Remove from installed apps"}),"\n",(0,o.jsx)(n.li,{children:"Delete Content Type"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'python manamge.py shell\n\nfrom django.contrib.contenttypes.models import ContentType\n\nfor c in ContentType.objects.all():\n    if not c.model_class():\n        print "deleting %s"%c\n        c.delete()\n'})}),"\n",(0,o.jsx)(n.h2,{id:"managers",children:"Managers"}),"\n",(0,o.jsx)(n.p,{children:"A Manager is the interface through which database query operations are provided to Django models. At least one Manager exists for every model in a Django application."}),"\n",(0,o.jsx)(n.h3,{id:"manager-names",children:"Manager names"}),"\n",(0,o.jsxs)(n.p,{children:["By default, Django adds a Manager with the name objects to every Django model class. However, if you want to use objects as a field name, or if you want to use a name other than objects for the Manager, you can rename it on a per-model basis. To rename the Manager for a given class, define a class attribute of type ",(0,o.jsx)(n.code,{children:"models.Manager()"})," on that model. For example:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"from django.db import models\n\nclass Person(models.Model):\n    #...\n\npeople = models.Manager()\n"})}),"\n",(0,o.jsx)(n.p,{children:"Using this example model, Person.objects will generate an AttributeError exception, but Person.people.all()will provide a list of all Person objects."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"from django.db import models\nfrom django.db.models import Sum\nfrom django.db.models.functions import Coalesce\n\nclass AuthorManager(models.Manager):\n    def get_queryset(self):\n        return AuthorQuerySet(self.model, using=self._db)\n\n    def annotate_with_copies_sold(self):\n        return self.get_queryset().annotate_with_copies_sold()\n\nclass AuthorQuerySet(models.QuerySet):\n    def annotate_with_copies_sold(self):\n        # Write your solution here\n        return self.annotate(copies_sold=Coalesce(Sum('books__copies_sold'), 0))\n\nclass Author(models.Model):\n    # Make sure this manager is available.\n    objects = AuthorManager()\n    # objects = models.Manager.from_queryset(AuthorQuerySet)()\n    first_name = models.CharField(max_length=30)\n    last_name = models.CharField(max_length=30)\n\nclass Book(models.Model):\n    title = models.CharField(max_length=30)\n    copies_sold = models.PositiveIntegerField()\n    author = models.ForeignKey(Author, on_delete=models.CASCADE, related_name='books')\n\nauthor = Author.objects.create(first_name='Mark', last_name='Twain')\nBook.objects.create(author=author, title='Adventures of Huckleberry Finn', copies_sold=7)\nBook.objects.create(author=author, title='The Adventures of Tom Sawyer', copies_sold=4)\n\nauthor = Author.objects.annotate_with_copies_sold().first()\nauthor.copies_sold\n11\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://docs.djangoproject.com/en/2.2/topics/db/managers",children:"https://docs.djangoproject.com/en/2.2/topics/db/managers"})}),"\n",(0,o.jsx)(n.h2,{id:"restructured-text-rest",children:"reStructured Text (reST)"}),"\n",(0,o.jsx)(n.p,{children:"Markup language for Sphinx Documentation in Django."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://pythonhosted.org/an_example_pypi_project/sphinx.html",children:"https://pythonhosted.org/an_example_pypi_project/sphinx.html"})}),"\n",(0,o.jsx)(n.p,{children:"Bold and italics are done like this:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"**bold** and *italics*"})}),"\n",(0,o.jsx)(n.h2,{id:"django-resources",children:"Django Resources"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://www.reddit.com/r/django/comments/rrcj0m/any_enterprise_level_open_source_django_project",children:"https://www.reddit.com/r/django/comments/rrcj0m/any_enterprise_level_open_source_django_project"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://github.com/getsentry/sentry",children:"https://github.com/getsentry/sentry"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://github.com/taigaio",children:"https://github.com/taigaio"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://github.com/edx/edx-platform",children:"https://github.com/edx/edx-platform"})}),"\n",(0,o.jsx)(n.h2,{id:"others-1",children:"Others"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://medium.com/@DoorDash/tips-for-building-high-quality-django-apps-at-scale-a5a25917b2b5",children:"https://medium.com/@DoorDash/tips-for-building-high-quality-django-apps-at-scale-a5a25917b2b5"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://medium.com/@hakibenita/things-you-must-know-about-django-admin-as-your-app-gets-bigger-6be0b0ee9614",children:"https://medium.com/@hakibenita/things-you-must-know-about-django-admin-as-your-app-gets-bigger-6be0b0ee9614"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://data-flair.training/blogs/django-file-upload",children:"https://data-flair.training/blogs/django-file-upload"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://docs.djangoproject.com/en/2.0/topics/class-based-views/intro/#decorating-the-class",children:"https://docs.djangoproject.com/en/2.0/topics/class-based-views/intro/#decorating-the-class"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://simpleisbetterthancomplex.com/tutorial/2018/01/18/how-to-implement-multiple-user-types-with-django.html",children:"https://simpleisbetterthancomplex.com/tutorial/2018/01/18/how-to-implement-multiple-user-types-with-django.html"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://www.youtube.com/watch?v=_vCT42vDfgw&ab_channel=freeCodeCamp.org",children:"Python Django and Google APIs - Project Tutorial"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://www.freecodecamp.org/news/django-project-create-a-digital-resume-using-django-and-python",children:"https://www.freecodecamp.org/news/django-project-create-a-digital-resume-using-django-and-python"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://www.freecodecamp.org/news/create-a-netflix-clone-with-django-and-tailwind-css",children:"https://www.freecodecamp.org/news/create-a-netflix-clone-with-django-and-tailwind-css"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://www.toptal.com/django/django-top-10-mistakes",children:"https://www.toptal.com/django/django-top-10-mistakes"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://www.toptal.com/django/secure-django-heroku-pydantic-tutorial-part-4",children:"Django App Security: A Pydantic Tutorial, Part 4 | Toptal"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var s=t(296540);const o={},r=s.createContext(o);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);