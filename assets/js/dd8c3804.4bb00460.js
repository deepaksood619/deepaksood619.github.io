"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[16513],{34741:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"languages/frameworks/android/testing","title":"Testing","description":"Android Code analysis tools","source":"@site/docs/languages/frameworks/android/testing.md","sourceDirName":"languages/frameworks/android","slug":"/languages/frameworks/android/testing","permalink":"/languages/frameworks/android/testing","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/languages/frameworks/android/testing.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1734554726000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Service","permalink":"/languages/frameworks/android/service"},"next":{"title":"Tools","permalink":"/languages/frameworks/android/tools"}}');var s=n(474848),o=n(28453);const a={},r="Testing",d={},l=[{value:"Android Code analysis tools",id:"android-code-analysis-tools",level:2},{value:"Android Lint",id:"android-lint",level:3},{value:"Checkstyle",id:"checkstyle",level:3},{value:"Findbugs",id:"findbugs",level:3},{value:"Testing",id:"testing-1",level:2},{value:"RoboElectric",id:"roboelectric",level:2},{value:"Mockito",id:"mockito",level:2},{value:"Release",id:"release",level:2},{value:"1. Registration &amp; Development (iOS &amp; Android)",id:"1-registration--development-ios--android",level:3},{value:"2. Build &amp; Test (iOS &amp; Android)",id:"2-build--test-ios--android",level:3},{value:"3. QA",id:"3-qa",level:3},{value:"4. Internal Approvals",id:"4-internal-approvals",level:3},{value:"5. App Store Optimization (ASO)",id:"5-app-store-optimization-aso",level:3},{value:"6. App Submission To Store",id:"6-app-submission-to-store",level:3},{value:"7. Release",id:"7-release",level:3}];function c(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"testing",children:"Testing"})}),"\n",(0,s.jsx)(i.h2,{id:"android-code-analysis-tools",children:"Android Code analysis tools"}),"\n",(0,s.jsx)(i.h3,{id:"android-lint",children:"Android Lint"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"This one comes with Android Studio by default"}),"\n",(0,s.jsx)(i.li,{children:"It checks your Android project source files for potential bugs and optimizations for correctness, security, performance, usability, accessibility, and internationalization"}),"\n",(0,s.jsx)(i.li,{children:"Analyze > Inspect Code"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"checkstyle",children:"Checkstyle"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"It basically analyses source code and looks to improve the coding standard by traversing over simple AST generated by Checkstyle."}),"\n",(0,s.jsx)(i.li,{children:"It verifies the source code for coding conventions like headers, imports, whitespaces, formatting etc."}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"findbugs",children:"Findbugs"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"It analyses Java byte code mainly .classes to find any design flaw and potential bugs."}),"\n",(0,s.jsx)(i.li,{children:"It needs compiled code to work around and will eventually be fast since it works on byte code level."}),"\n",(0,s.jsx)(i.li,{children:"The major categories in this tool are: Correctness, Bad practice, Dodgy code, Multithreaded Correctness, Performance Malicious, Code Vulnerability, Security Experimental and Internationalization"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"https://medium.com/achieve-high-quality-android-code-with-static-code/static-code-analysis-tools-80558d9cb6cb",children:"https://medium.com/achieve-high-quality-android-code-with-static-code/static-code-analysis-tools-80558d9cb6cb"})}),"\n",(0,s.jsx)(i.h2,{id:"testing-1",children:"Testing"}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"image",src:n(371379).A+"",width:"1000",height:"750"})}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"https://proandroiddev.com/a-guide-to-test-pyramid-in-android-end-to-end-and-manual-tests-part-4-3a16af96b78c",children:"https://proandroiddev.com/a-guide-to-test-pyramid-in-android-end-to-end-and-manual-tests-part-4-3a16af96b78c"})}),"\n",(0,s.jsx)(i.h2,{id:"roboelectric",children:"RoboElectric"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"http://robolectric.org/",children:"Robolectric"})," is an Android unit testing framework that allows you to run tests inside the JVM on your development workstation. Robolectric rewrites Android SDK classes as they're being loaded and makes it possible for them to run on a regular JVM, resulting in fast test times. Furthermore, it handles inflation of views, resource loading, and more stuff that's implemented in native C code on Android devices, making the need for emulators and physical devices to run automated tests obsolete."]}),"\n",(0,s.jsx)(i.h2,{id:"mockito",children:"Mockito"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"https://code.google.com/p/mockito/",children:"Mockito"})," is a mocking framework that enables us to write clean tests in java. It simplifies the process of creating test doubles (mocks), which are used to replace the original dependencies of a component/module used in production. A StackOverflow answer discusses ",(0,s.jsx)(i.a,{href:"http://stackoverflow.com/a/346440/2018294",children:"about the differences between mocks and stubs"})," in fairly simple terms that you can read to learn more."]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-java",children:'// you can mock concrete classes, not only interfaces\nLinkedList mockedList = mock(LinkedList.class);\n\n// stubbing appears before the actual execution\nwhen(mockedList.get(0)).thenReturn("first");\n\n// the following prints "first"\nSystem.out.println(mockedList.get(0));\n\n// the following prints "null" because get(999) was not stubbed\nSystem.out.println(mockedList.get(999));\n'})}),"\n",(0,s.jsx)(i.p,{children:"Additionally, with Mockito we can verify if a method has been called:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-java",children:'// mock creation\nList mockedList = mock(List.class);\n\n// using mock object - it does not throw any "unexpected interaction" exception\nmockedList.add("one");\nmockedList.clear();\n\n// selective, explicit, highly readable verification\nverify(mockedList).add("one");\nverify(mockedList).clear();\n'})}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"https://github.com/mockito/mockito",children:"https://github.com/mockito/mockito"})}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"https://www.toptal.com/android/testing-like-a-true-green-droid",children:"https://www.toptal.com/android/testing-like-a-true-green-droid"})}),"\n",(0,s.jsx)(i.h2,{id:"release",children:"Release"}),"\n",(0,s.jsx)(i.h3,{id:"1-registration--development-ios--android",children:"1. Registration & Development (iOS & Android)"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Enroll in Apple's Developer Program and Google Play Console as iOS and Android developer"}),"\n",(0,s.jsx)(i.li,{children:"Code using platform-specific tools: Swift/Obj-C for iOS, and Java/Kotlin for Android"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"2-build--test-ios--android",children:"2. Build & Test (iOS & Android)"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Compile the app's binary, run extensive tests on both platforms to ensure functionality and performance. Create a release candidate build."}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"3-qa",children:"3. QA"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Internally test the app for issue identification (dogfooding)"}),"\n",(0,s.jsx)(i.li,{children:"Beta test with external users to collect feedback"}),"\n",(0,s.jsx)(i.li,{children:"Conduct regression testing to maintain feature stability"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"4-internal-approvals",children:"4. Internal Approvals"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Obtain approval from stakeholders and key team members."}),"\n",(0,s.jsx)(i.li,{children:"Comply with app store guidelines and industry regulations"}),"\n",(0,s.jsx)(i.li,{children:"Obtain security approvals to safeguard user data and privacy"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"5-app-store-optimization-aso",children:"5. App Store Optimization (ASO)"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Optimize metadata, including titles, descriptions, and keywords, for better search visibility"}),"\n",(0,s.jsx)(i.li,{children:"Design captivating screenshots and icons to entice users"}),"\n",(0,s.jsx)(i.li,{children:"Prepare engaging release notes to inform users about new features and updates"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"6-app-submission-to-store",children:"6. App Submission To Store"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Submit the iOS app via App Store Connect following Apple's guidelines"}),"\n",(0,s.jsx)(i.li,{children:"Submit the Android app via Google Play Console, adhering to Google's policies"}),"\n",(0,s.jsx)(i.li,{children:"Both platforms may request issue resolution for approval"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"7-release",children:"7. Release"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Upon approval, set a release date to coordinate the launch on both iOS and Android platforms"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"releasing a mobile app",src:n(287865).A+"",width:"503",height:"650"})})]})}function h(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},371379:(e,i,n)=>{n.d(i,{A:()=>t});const t=n.p+"assets/images/Android-image3-c31dd1b57fc8ab848a2782628535313c.jpg"},287865:(e,i,n)=>{n.d(i,{A:()=>t});const t=n.p+"assets/images/Pasted image 20240110125910-9d3abafccdce2b73f3c49b9e0e3ed120.jpg"},28453:(e,i,n)=>{n.d(i,{R:()=>a,x:()=>r});var t=n(296540);const s={},o=t.createContext(s);function a(e){const i=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(o.Provider,{value:i},e.children)}}}]);