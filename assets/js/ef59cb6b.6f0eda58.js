"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[94467],{931297:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var a=t(785893),s=t(511151);const i={},r="DQL - Data Query Language",l={id:"languages/sql/dql-data-query-language/readme",title:"DQL - Data Query Language",description:"Gotchas / Keep in mind",source:"@site/docs/languages/sql/dql-data-query-language/readme.md",sourceDirName:"languages/sql/dql-data-query-language",slug:"/languages/sql/dql-data-query-language/",permalink:"/languages/sql/dql-data-query-language/",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/languages/sql/dql-data-query-language/readme.md",tags:[],version:"current",lastUpdatedAt:1716734010,formattedLastUpdatedAt:"May 26, 2024",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"DML - Data Manipulation Language",permalink:"/languages/sql/dml-data-manipulation-language"},next:{title:"Aggregation Queries",permalink:"/languages/sql/dql-data-query-language/aggregation-queries"}},o={},d=[{value:"Gotchas / Keep in mind",id:"gotchas--keep-in-mind",level:2},{value:"USE INDEX",id:"use-index",level:2},{value:"Transpose",id:"transpose",level:2},{value:"Crosstab",id:"crosstab",level:3},{value:"Date Time Operations",id:"date-time-operations",level:2},{value:"date_part, group by week",id:"date_part-group-by-week",level:4},{value:"Links",id:"links",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"dql---data-query-language",children:"DQL - Data Query Language"}),"\n",(0,a.jsx)(n.h2,{id:"gotchas--keep-in-mind",children:"Gotchas / Keep in mind"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"ORDER BY can be done on only those columns that are in SELECT"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"-- in MySQL this doesn't return NULL rows\nselect * from table_name where column != 'abc';\n\n-- use ::DATE selects 2023-03-16 too but between without DATE doesn't\n\nt.createdAt::DATE BETWEEN '2023-02-23' and '2023-03-16'\n\nt.createdAt BETWEEN '2023-02-23' AND '2023-03-16'\n\n-- IS NOT TRUE selects null rows too and != TRUE don't give null rows\nisFlag IS NOT TRUE\nisFlag != TRUE\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"-- SELECT\nselect * from mysql.user;\n\nselect USER();\n\n-- SELECT\nSELECT column_name FROM table_name;\nSELECT statements are used to fetch data from a database. Every query will begin with SELECT\n\n-- SELECT DISTINCT\nSELECT DISTINCT column_name FROM table_name;\n\nSELECT DISTINCT specifies that the statement is going to be a query that returns unique values in the specified column(s).\n\n-- SELECT INTO\nSELECT *\nINTO new_table_name [IN externaldatabase]\nFROM old_table_name\nor\nSELECT column_name(s)\nINTO new_table_name [IN externaldatabase]\nFROM old_table_name\n\n-- SELECT TOP\nSELECT TOP number|percent column_name(s)\nFROM table_name\n"})}),"\n",(0,a.jsx)(n.h2,{id:"use-index",children:"USE INDEX"}),"\n",(0,a.jsx)(n.p,{children:"MySQL provides an alternative way that allows you to recommend the indexes that the query optimizer should by using an index hint calledUSE INDEX."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"SELECT select_list FROM table_name USE INDEX(index_list) WHERE condition"})}),"\n",(0,a.jsx)(n.p,{children:"In this syntax, theUSE INDEXinstructs the queryoptimizer to use one of the named indexes to find rows in the table."}),"\n",(0,a.jsx)(n.p,{children:"Notice that when you recommend the indexes to use, the queryoptimizer may either decide to use them or not depending on the query plan that it comes up with."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://www.mysqltutorial.org/mysql-index/mysql-use-index",children:"https://www.mysqltutorial.org/mysql-index/mysql-use-index"})}),"\n",(0,a.jsx)(n.h2,{id:"transpose",children:"Transpose"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"SELECT\n    id,\n    MAX(CASE WHEN Feetype = 'Revenue Fee' THEN amountFeeRatio END) AS RevenueFeeAmount,\n    MAX(CASE WHEN Feetype = 'Revenue Fee' THEN usdEquivalentFeeRatio END) AS RevenueFeeUSDEquivalent,\n    MAX(CASE WHEN Feetype = 'Maintanence Fee' THEN amountFeeRatio END) AS MaintanenceFeeAmount,\n    MAX(CASE WHEN Feetype = 'Maintanence Fee' THEN usdEquivalentFeeRatio END) AS MaintanenceFeeUSDEquivalent\nFROM test_table\nGROUP BY id limit 100;\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://www.sqlshack.com/multiple-options-to-transposing-rows-into-columns/",children:"Multiple options to transposing rows into columns"})}),"\n",(0,a.jsx)(n.h3,{id:"crosstab",children:"Crosstab"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"select *\nfrom crosstab(\n    'select\n    role,\n    type,\n    sum(duration) as total_minutes\nfrom work\ngroup by role, type\norder by type',\n    'select distinct type from work order by type'\n) as ct(\n    role text,\n    \"Cleaning\" text,\n    \"Food preparation\" text\n);\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://www.postgresql.org/docs/current/tablefunc.html",children:"PostgreSQL: Documentation: 15: F.43. tablefunc"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.a,{href:"https://towardsdatascience.com/transpositions-in-sql-c1cf724dfa2a",children:"Transpositions in SQL. How to handle dynamic transposition\u2026 | by Jerry Zhang | Towards Data Science"})})}),"\n",(0,a.jsx)(n.h2,{id:"date-time-operations",children:"Date Time Operations"}),"\n",(0,a.jsx)(n.h4,{id:"date_part-group-by-week",children:"date_part, group by week"}),"\n",(0,a.jsx)(n.p,{children:"An INTEGER where 0 = Monday and 6 = Sunday."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"SELECT\n ftps.id,\n date_part('year', createdAt::date) as year,\n date_part('week', createdAt::date) AS week,\n count(*) as c\nFROM\n test ftps\nGROUP BY\n ftps.id,\n year,\n week\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://www.postgresql.org/docs/8.1/functions-datetime.html",children:"PostgreSQL: Documentation: 8.1: Date/Time Functions and Operators"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://docs.databricks.com/sql/language-manual/functions/weekday.html",children:"weekday function | Databricks on AWS"})}),"\n",(0,a.jsx)(n.h2,{id:"links",children:"Links"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://www.youtube.com/watch?v=wybjsKtA9hI&ab_channel=HusseinNasser",children:"A Deep Dive in How Slow SELECT * is - YouTube"})})]})}function u(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},511151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>r});var a=t(667294);const s={},i=a.createContext(s);function r(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);