"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[62935],{569046:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>l,contentTitle:()=>d,default:()=>o,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"databases-nosql/vector-databases/comparison","title":"Comparison","description":"- GitHub Star History - Vector DB Comparison","source":"@site/docs/databases-nosql/vector-databases/comparison.md","sourceDirName":"databases-nosql/vector-databases","slug":"/databases-nosql/vector-databases/comparison","permalink":"/databases-nosql/vector-databases/comparison","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/databases-nosql/vector-databases/comparison.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1750784952000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Vector Databases","permalink":"/databases-nosql/vector-databases/"},"next":{"title":"Indexing","permalink":"/databases-nosql/vector-databases/indexing"}}');var n=s(474848),i=s(28453);const a={},d="Comparison",l={},c=[{value:"Milvus vs Qdrant",id:"milvus-vs-qdrant",level:2},{value:"Qdrant vs Weaviate",id:"qdrant-vs-weaviate",level:2},{value:"Comparisons",id:"comparisons",level:2},{value:"Weaviate",id:"weaviate",level:3},{value:"Qdrant",id:"qdrant",level:3},{value:"Milvus",id:"milvus",level:3},{value:"Elasticsearch",id:"elasticsearch",level:3}];function h(e){const r={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"comparison",children:"Comparison"})}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"https://www.star-history.com/#qdrant/qdrant&milvus-io/milvus&chroma-core/chroma&weaviate/weaviate&Date",children:"GitHub Star History - Vector DB Comparison"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"https://superlinked.com/vector-db-comparison",children:"Vector DB Comparison"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"https://vectordb.lqhl.me/",children:"Comprehensive Vector Database Comparison - Features, Performance, and Capabilities"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"https://www.datacamp.com/blog/the-top-5-vector-databases",children:"The 5 Best Vector Databases | A List With Examples | DataCamp"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"https://chatgpt.com/share/6859a229-c594-8008-9d4f-c28c4578c8f2",children:"ChatGPT - Milvus vs pgvector Performance"})}),"\n"]}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Feature"}),(0,n.jsx)(r.th,{children:"Chroma"}),(0,n.jsx)(r.th,{children:"Pinecone"}),(0,n.jsx)(r.th,{children:"Weaviate"}),(0,n.jsx)(r.th,{children:"Faiss"}),(0,n.jsx)(r.th,{children:"Qdrant"}),(0,n.jsx)(r.th,{children:"Milvus"}),(0,n.jsx)(r.th,{children:"PGVector"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Open-source"}),(0,n.jsx)(r.td,{children:"\u2705"}),(0,n.jsx)(r.td,{children:"\u274e"}),(0,n.jsx)(r.td,{children:"\u2705"}),(0,n.jsx)(r.td,{children:"\u2705"}),(0,n.jsx)(r.td,{children:"\u2705"}),(0,n.jsx)(r.td,{children:"\u2705"}),(0,n.jsx)(r.td,{children:"\u2705"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Primary Use Case"}),(0,n.jsx)(r.td,{children:"LLM Apps Development"}),(0,n.jsx)(r.td,{children:"Managed Vector Database for ML"}),(0,n.jsx)(r.td,{children:"Scalable Vector Storage and Search"}),(0,n.jsx)(r.td,{children:"High-Speed Similarity Search and Clustering"}),(0,n.jsx)(r.td,{children:"Vector Similarity Search"}),(0,n.jsx)(r.td,{children:"High-Performance AI Search"}),(0,n.jsx)(r.td,{children:"Adding Vector Search to PostgreSQL"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Integration"}),(0,n.jsx)(r.td,{children:"LangChain, LlamaIndex"}),(0,n.jsx)(r.td,{children:"LangChain"}),(0,n.jsx)(r.td,{children:"OpenAI, Cohere, HuggingFace"}),(0,n.jsx)(r.td,{children:"Python/NumPy, GPU Execution"}),(0,n.jsx)(r.td,{children:"OpenAPI v3, Various Language Clients"}),(0,n.jsx)(r.td,{children:"TensorFlow, PyTorch, HuggingFace"}),(0,n.jsx)(r.td,{children:"Built into PostgreSQL ecosystem"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Scalability"}),(0,n.jsx)(r.td,{children:"Scales from Python notebooks to clusters"}),(0,n.jsx)(r.td,{children:"Highly scalable"}),(0,n.jsx)(r.td,{children:"Seamless scaling to billions of objects"}),(0,n.jsx)(r.td,{children:"Capable of handling sets larger than RAM"}),(0,n.jsx)(r.td,{children:"Cloud-native with horizontal scaling"}),(0,n.jsx)(r.td,{children:"Scales to billions of vectors"}),(0,n.jsx)(r.td,{children:"Depends on PostgreSQL setup"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Search Speed"}),(0,n.jsx)(r.td,{children:"Fast similarity searches"}),(0,n.jsx)(r.td,{children:"Low-latency search"}),(0,n.jsx)(r.td,{children:"Milliseconds for millions of objects"}),(0,n.jsx)(r.td,{children:"Fast, supports GPU"}),(0,n.jsx)(r.td,{children:"Custom HNSW algorithm for rapid search"}),(0,n.jsx)(r.td,{children:"Optimized for low-latency search"}),(0,n.jsx)(r.td,{children:"Approximate Nearest Neighbor (ANN)"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Data Privacy"}),(0,n.jsx)(r.td,{children:"Supports multi-user with data isolation"}),(0,n.jsx)(r.td,{children:"Fully managed service"}),(0,n.jsx)(r.td,{children:"Emphasizes security and replication"}),(0,n.jsx)(r.td,{children:"Primarily for research and development"}),(0,n.jsx)(r.td,{children:"Advanced filtering on vector payloads"}),(0,n.jsx)(r.td,{children:"Secure multi-tenant architecture"}),(0,n.jsx)(r.td,{children:"Inherits PostgreSQL\u2019s security"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Programming Language"}),(0,n.jsx)(r.td,{children:"Python, JavaScript"}),(0,n.jsx)(r.td,{children:"Python"}),(0,n.jsx)(r.td,{children:"Python, Java, Go, others"}),(0,n.jsx)(r.td,{children:"C++, Python"}),(0,n.jsx)(r.td,{children:"Rust"}),(0,n.jsx)(r.td,{children:"C++, Python, Go"}),(0,n.jsx)(r.td,{children:"PostgreSQL extension (SQL-based)"})]})]})]}),"\n",(0,n.jsx)(r.h2,{id:"milvus-vs-qdrant",children:"Milvus vs Qdrant"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"https://qdrant.tech/benchmarks/",children:(0,n.jsx)(r.strong,{children:"Vector Database Benchmarks - Qdrant"})})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"https://zilliz.com/vdbbench-leaderboard",children:"VectorDBBench: An Open-Source VectorDB Benchmark Tool"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"https://myscale.com/blog/milvus-vs-qdrant-vector-database-performance/",children:"Milvus vs Qdrant: Vector Database Performance Comparison"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"https://www.reddit.com/r/vectordatabase/comments/1dcvyrm/choosing_a_vector_db_for_100_million_pages_of/",children:"Choosing a vector db for 100 million pages of text. Leaning towards Milvus, Qdrant or Weaviate. Am I missing anything, what would you choose? : r/vectordatabase"})}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"qdrant-vs-weaviate",children:"Qdrant vs Weaviate"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Feature"}),(0,n.jsx)(r.th,{children:"Qdrant"}),(0,n.jsx)(r.th,{children:"Weaviate"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Data Model"}),(0,n.jsx)(r.td,{children:"Vector + Payload (JSON-like)"}),(0,n.jsx)(r.td,{children:"Graph Database + Vectors"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Programming Language"}),(0,n.jsx)(r.td,{children:"Rust (performance-focused)"}),(0,n.jsx)(r.td,{children:"Go (modular and extensible)"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"API"}),(0,n.jsx)(r.td,{children:"REST API, Client Libraries"}),(0,n.jsx)(r.td,{children:"GraphQL API"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Indexing Algorithm"}),(0,n.jsx)(r.td,{children:"HNSW, IVF, ANNOY"}),(0,n.jsx)(r.td,{children:"HNSW, IVF, Flat"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Hybrid Search"}),(0,n.jsx)(r.td,{children:"Native support (dense + sparse vectors)"}),(0,n.jsx)(r.td,{children:"Native support (BM25 + vector search)"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Filtering"}),(0,n.jsx)(r.td,{children:"Metadata-based filtering"}),(0,n.jsx)(r.td,{children:"Metadata-based, Graph Traversal"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Data Relationships"}),(0,n.jsx)(r.td,{children:"Limited (focus on vector search)"}),(0,n.jsx)(r.td,{children:"Strong (supports complex graph structures)"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Scalability"}),(0,n.jsx)(r.td,{children:"Horizontal scaling, Sharding, Clustering"}),(0,n.jsx)(r.td,{children:"Horizontal scaling, Sharding"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Deployment"}),(0,n.jsx)(r.td,{children:"Self-hosted, Docker, Kubernetes, Qdrant Cloud"}),(0,n.jsx)(r.td,{children:"Self-hosted, Docker, Kubernetes, Weaviate Cloud"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Use Cases"}),(0,n.jsx)(r.td,{children:"Semantic Search, Recommendation Systems, Image Retrieval"}),(0,n.jsx)(r.td,{children:"Knowledge Graphs, Fraud Detection, Social Networks, Semantic Search"})]})]})]}),"\n",(0,n.jsx)(r.h2,{id:"comparisons",children:"Comparisons"}),"\n",(0,n.jsx)(r.h3,{id:"weaviate",children:"Weaviate"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"Best suited for our pipeline due to:"}),"\n",(0,n.jsx)(r.li,{children:"Native graph-like object relationships (aligns with Graphiti)"}),"\n",(0,n.jsx)(r.li,{children:"Built-in hybrid search (BM25 + vectors)."}),"\n",(0,n.jsx)(r.li,{children:"Module support for external models (like OpenAI, Cohere)."}),"\n",(0,n.jsx)(r.li,{children:"Works well with LangGraph via GraphQL or REST."}),"\n"]}),"\n",(0,n.jsx)(r.h3,{id:"qdrant",children:"Qdrant"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"Lightweight, fast, and great hybrid search."}),"\n",(0,n.jsx)(r.li,{children:"Lacks graph modeling (less synergy with Graphiti)."}),"\n",(0,n.jsx)(r.li,{children:"Super scalable and embedding-agnostic."}),"\n",(0,n.jsx)(r.li,{children:"Pairs well with LangGraph for retrieval, but memory/relationship modeling is manual."}),"\n"]}),"\n",(0,n.jsx)(r.h3,{id:"milvus",children:"Milvus"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"Strong at high-throughput vector search."}),"\n",(0,n.jsx)(r.li,{children:"Lacks hybrid search out of the box (requires integration)."}),"\n",(0,n.jsx)(r.li,{children:"No graph or semantic structure; you'd handle relationships separately."}),"\n",(0,n.jsx)(r.li,{children:"More infra-heavy (dependency on etcd, Pulsar)."}),"\n"]}),"\n",(0,n.jsx)(r.h3,{id:"elasticsearch",children:"Elasticsearch"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"Good keyword search, scalable, mature ecosystem."}),"\n",(0,n.jsx)(r.li,{children:"Vector search is not native-first (plugin-dependent)."}),"\n",(0,n.jsx)(r.li,{children:"No built-in LLM/RAG support."}),"\n",(0,n.jsx)(r.li,{children:"Not ideal for vector-first or memory-based AI pipelines, but can complement as a BM25 keyword search layer."}),"\n"]})]})}function o(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},28453:(e,r,s)=>{s.d(r,{R:()=>a,x:()=>d});var t=s(296540);const n={},i=t.createContext(n);function a(e){const r=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),t.createElement(i.Provider,{value:r},e.children)}}}]);