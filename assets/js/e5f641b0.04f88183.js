"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[35267],{847294:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>n,metadata:()=>o,toc:()=>i});var r=t(785893),a=t(511151);const n={},l="Models",o={id:"python/others/sqlalchemy/models",title:"Models",description:"https://docs.sqlalchemy.org/en/14/orm/quickstart.html",source:"@site/docs/python/others/sqlalchemy/models.md",sourceDirName:"python/others/sqlalchemy",slug:"/python/others/sqlalchemy/models",permalink:"/python/others/sqlalchemy/models",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/python/others/sqlalchemy/models.md",tags:[],version:"current",lastUpdatedAt:1701793554,formattedLastUpdatedAt:"Dec 5, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SQLAlchemy",permalink:"/python/others/sqlalchemy/"},next:{title:"ORM",permalink:"/python/others/sqlalchemy/orm"}},c={},i=[];function h(e){const s={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h1,{id:"models",children:"Models"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"https://docs.sqlalchemy.org/en/14/orm/quickstart.html",children:"https://docs.sqlalchemy.org/en/14/orm/quickstart.html"})}),"\n",(0,r.jsx)(s.p,{children:"Here, we define module-level constructs that will form the structures which we will be querying from the database. This structure, known as a Declarative Mapping, defines at once both a Python object model, as well as database metadata that describes real SQL tables that exist, or will exist, in a particular database"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:'from sqlalchemy import Column\nfrom sqlalchemy import ForeignKey\nfrom sqlalchemy import Integer\nfrom sqlalchemy import String\nfrom sqlalchemy.orm import declarative_base\nfrom sqlalchemy.orm import relationship\n\nBase = declarative_base()\n\nclass User(Base):\n    __tablename__ = "user_account"\n    id = Column(Integer, primary_key=True)\n    name = Column(String(30))\n    fullname = Column(String)\n    addresses = relationship(\n        "Address", back_populates="user", cascade="all, delete-orphan"\n    )\n\n    def __repr__(self):\n        return f"User(id={self.id!r}, name={self.name!r}, fullname={self.fullname!r})"\n\nclass Address(Base):\n    __tablename__ = "address"\n    id = Column(Integer, primary_key=True)\n    email_address = Column(String, nullable=False)\n    user_id = Column(Integer, ForeignKey("user_account.id"), nullable=False)\n\n    user = relationship("User", back_populates="addresses")\n\n    def __repr__(self):\n        return f"Address(id={self.id!r}, email_address={self.email_address!r})"\n'})}),"\n",(0,r.jsxs)(s.p,{children:["Above, the declarative mapping makes use of ",(0,r.jsx)(s.a,{href:"https://docs.sqlalchemy.org/en/14/core/metadata.html#sqlalchemy.schema.Column",children:"Column"})," objects to define the basic units of data storage that will be in the database. The ",(0,r.jsx)(s.a,{href:"https://docs.sqlalchemy.org/en/14/orm/relationship_api.html#sqlalchemy.orm.relationship",children:"relationship()"})," construct defines linkages between two ",(0,r.jsx)(s.a,{href:"https://docs.sqlalchemy.org/en/14/glossary.html#term-mapped",children:"mapped"})," classes, UserandAddressabove."]}),"\n",(0,r.jsxs)(s.p,{children:["The schema contains necessary elements such as primary key constraints set up by the ",(0,r.jsx)(s.a,{href:"https://docs.sqlalchemy.org/en/14/core/metadata.html#sqlalchemy.schema.Column.params.primary_key",children:"Column.primary_key"})," parameter, a ",(0,r.jsx)(s.a,{href:"https://docs.sqlalchemy.org/en/14/glossary.html#term-foreign-key-constraint",children:"foreign key constraint"})," configured using ",(0,r.jsx)(s.a,{href:"https://docs.sqlalchemy.org/en/14/core/constraints.html#sqlalchemy.schema.ForeignKey",children:"ForeignKey"}),"(which is used by ",(0,r.jsx)(s.a,{href:"https://docs.sqlalchemy.org/en/14/orm/relationship_api.html#sqlalchemy.orm.relationship",children:"relationship()"})," as well), and datatypes for columns including ",(0,r.jsx)(s.a,{href:"https://docs.sqlalchemy.org/en/14/core/type_basics.html#sqlalchemy.types.Integer",children:"Integer"})," and ",(0,r.jsx)(s.a,{href:"https://docs.sqlalchemy.org/en/14/core/type_basics.html#sqlalchemy.types.String",children:"String"}),"."]})]})}function m(e={}){const{wrapper:s}={...(0,a.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},511151:(e,s,t)=>{t.d(s,{Z:()=>o,a:()=>l});var r=t(667294);const a={},n=r.createContext(a);function l(e){const s=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),r.createElement(n.Provider,{value:s},e.children)}}}]);