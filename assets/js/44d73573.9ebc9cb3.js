"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[18158],{828995:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"data-warehouses/snowflake/ingestion","title":"Data Ingestion / Loading","description":"Snowflake Data Loading","source":"@site/docs/data-warehouses/snowflake/ingestion.md","sourceDirName":"data-warehouses/snowflake","slug":"/data-warehouses/snowflake/ingestion","permalink":"/data-warehouses/snowflake/ingestion","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/data-warehouses/snowflake/ingestion.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1760616071000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Governance","permalink":"/data-warehouses/snowflake/governance"},"next":{"title":"Intro","permalink":"/data-warehouses/snowflake/intro"}}');var t=i(474848),a=i(28453);const o={},r="Data Ingestion / Loading",l={},d=[{value:"Snowflake Data Loading",id:"snowflake-data-loading",level:2},{value:"Snowflake Data Loading Methods",id:"snowflake-data-loading-methods",level:3},{value:"Data Formats and Compression",id:"data-formats-and-compression",level:3},{value:"Concurrency and Multi-Cluster Loading",id:"concurrency-and-multi-cluster-loading",level:3},{value:"Secure Data Ingestion",id:"secure-data-ingestion",level:3},{value:"Snowpipe",id:"snowpipe",level:2},{value:"Advantages of Snowpipe",id:"advantages-of-snowpipe",level:3},{value:"Zero-copy cloning",id:"zero-copy-cloning",level:2},{value:"Differences",id:"differences",level:2},{value:"Snowpipe Streaming",id:"snowpipe-streaming",level:2},{value:"Implementations",id:"implementations",level:3},{value:"Choosing Implementation",id:"choosing-implementation",level:3},{value:"Snowpipe Streaming vs Snowpipe",id:"snowpipe-streaming-vs-snowpipe",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"data-ingestion--loading",children:"Data Ingestion / Loading"})}),"\n",(0,t.jsx)(n.h2,{id:"snowflake-data-loading",children:"Snowflake Data Loading"}),"\n",(0,t.jsx)(n.p,{children:"Snowflake offers a simple and scalable approach to loading data into its platform. It supports bulk data loading from various sources, including files, cloud storage, and external tables."}),"\n",(0,t.jsx)(n.h3,{id:"snowflake-data-loading-methods",children:"Snowflake Data Loading Methods"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Snowflake COPY Command:"})," The ",(0,t.jsx)(n.code,{children:"COPY"})," command is a powerful tool for efficiently loading large volumes of data into Snowflake. It supports various file formats and allows data to be loaded from cloud storage, on-premises storage, or local files."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Snowpipe:"})," Snowpipe is Snowflake's continuous data ingestion service. It allows you to automatically load data into Snowflake tables as soon as new data is added to a staged area in a cloud storage platform like Amazon S3 or Azure Blob Storage. Snowpipe uses event-based triggers to load data in near real-time."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Third-Party ETL Tools:"})," Snowflake integrates with various third-party ETL (Extract, Transform, Load) tools. Popular tools like Apache NiFi, Talend, Informatica, and others can be used to design and execute data integration workflows with Snowflake."]}),"\n",(0,t.jsx)(n.h3,{id:"data-formats-and-compression",children:"Data Formats and Compression"}),"\n",(0,t.jsx)(n.p,{children:"Snowflake supports multiple data formats, including JSON, Avro, Parquet, ORC, and more. This flexibility allows users to choose the format that best suits their data and use case."}),"\n",(0,t.jsx)(n.p,{children:"Compression options are also available, helping to optimize storage and reduce data transfer costs."}),"\n",(0,t.jsx)(n.h3,{id:"concurrency-and-multi-cluster-loading",children:"Concurrency and Multi-Cluster Loading"}),"\n",(0,t.jsx)(n.p,{children:"Snowflake's architecture allows for concurrent data loading, supporting parallel loading of data into tables. This enables efficient utilization of resources and faster data ingestion."}),"\n",(0,t.jsx)(n.p,{children:"Multi-cluster loading allows you to use multiple Snowflake virtual warehouses to load data concurrently, improving performance and scalability."}),"\n",(0,t.jsx)(n.h3,{id:"secure-data-ingestion",children:"Secure Data Ingestion"}),"\n",(0,t.jsx)(n.p,{children:"Snowflake provides features for secure data ingestion, including encryption of data in transit and at rest. It also supports role-based access control to manage permissions for data loading and ingestion processes."}),"\n",(0,t.jsx)(n.h2,{id:"snowpipe",children:"Snowpipe"}),"\n",(0,t.jsx)(n.p,{children:"In simple terms, Snowpipe is a continuous data ingestion service provided by Snowflake that loads files within minutes as soon as they are added to a stage and submitted for ingestion. Therefore, you can load data from files in micro-batches (organizing data into small groups/matches), allowing users to access the data within minutes (very less response time), rather than manually running COPY statements on a schedule to load large batches. By loading the data into micro-batches, Snowpipe makes it easier to analyze it. Snowpipe uses a combination of filenames and file checksums to ensure that only new data is processed."}),"\n",(0,t.jsx)(n.h3,{id:"advantages-of-snowpipe",children:"Advantages of Snowpipe"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"By eliminating roadblocks, Snowpipe facilitates real-time analytics."}),"\n",(0,t.jsx)(n.li,{children:"It is cost-effective."}),"\n",(0,t.jsx)(n.li,{children:"It is simple to use."}),"\n",(0,t.jsx)(n.li,{children:"There is no management required."}),"\n",(0,t.jsx)(n.li,{children:"It provides flexibility, resilience, and so on."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://docs.snowflake.com/en/user-guide/data-load-snowpipe-intro",children:"Snowpipe | Snowflake Documentation"})}),"\n",(0,t.jsx)(n.h2,{id:"zero-copy-cloning",children:"Zero-copy cloning"}),"\n",(0,t.jsx)(n.p,{children:"Snowflake\u2019s Zero Copy Cloning is a feature which provides a quick and easy way to create a copy of any table, schema, or an entire database without incurring any additional costs as the derived copy shares the underlying storage with the original object."}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Almost no additional storage costs for cloning data"}),"\n",(0,t.jsx)(n.li,{children:"No waiting time for cloning data from one environment to another"}),"\n",(0,t.jsx)(n.li,{children:"No need for administrative efforts, as cloning is as simple as a Select"}),"\n",(0,t.jsx)(n.li,{children:"Since data exists only in one place, it\u2019s easy to maintain"}),"\n",(0,t.jsx)(n.li,{children:"Instantly promotes corrected/fixed data to production"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://www.encora.com/insights/zero-copy-cloning-in-snowflake",children:"Snowflake Zero Copy Cloning - A Comprehensive Guide | Encora"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://thinketl.com/snowflake-zero-copy-cloning/",children:"Snowflake Zero Copy Cloning - ThinkETL"})}),"\n",(0,t.jsx)(n.h2,{id:"differences",children:"Differences"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Feature"}),(0,t.jsx)(n.th,{children:"COPY INTO (Batch Load)"}),(0,t.jsx)(n.th,{children:"Snowpipe (File-based Auto-ingest)"}),(0,t.jsx)(n.th,{children:"Snowpipe Streaming (Row-based)"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Purpose"})}),(0,t.jsx)(n.td,{children:"Load large volumes of data in batches"}),(0,t.jsx)(n.td,{children:"Continuously load data from files as they become available"}),(0,t.jsx)(n.td,{children:"Real-time ingestion of individual rows or small batches of data"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Data Source"})}),(0,t.jsx)(n.td,{children:"Files staged in S3, Azure, or GCS"}),(0,t.jsx)(n.td,{children:"Files staged in S3, Azure, or GCS"}),(0,t.jsx)(n.td,{children:"Direct API calls from applications, IoT devices, or streaming platforms"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Trigger Type"})}),(0,t.jsx)(n.td,{children:"Manual execution of COPY INTO command"}),(0,t.jsx)(n.td,{children:"Automatic via cloud storage event notifications or REST API calls"}),(0,t.jsx)(n.td,{children:"API calls to Snowpipe Streaming endpoints"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Latency"})}),(0,t.jsx)(n.td,{children:"Minutes to hours"}),(0,t.jsx)(n.td,{children:"Seconds to a few minutes"}),(0,t.jsx)(n.td,{children:"Sub-second (real-time)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"File Required"})}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"No"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Schema Handling"})}),(0,t.jsx)(n.td,{children:"Fixed schema defined in the COPY INTO command"}),(0,t.jsx)(n.td,{children:"Fixed schema defined in the COPY INTO command"}),(0,t.jsx)(n.td,{children:"Flexible schema using VARIANT/JSON or fixed schema defined in the PIPE object"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Use Case"})}),(0,t.jsx)(n.td,{children:"Historical data loads, ETL jobs, data migrations"}),(0,t.jsx)(n.td,{children:"Continuous data ingestion from cloud storage"}),(0,t.jsx)(n.td,{children:"Real-time analytics, IoT data processing, clickstream data"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Monitoring"})}),(0,t.jsx)(n.td,{children:"COPY_HISTORY, LOAD_HISTORY views"}),(0,t.jsx)(n.td,{children:"LOAD_HISTORY, PIPE_STATUS views"}),(0,t.jsx)(n.td,{children:"STREAMING_INGEST_HISTORY view"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Error Handling"})}),(0,t.jsx)(n.td,{children:"ON_ERROR clause options (CONTINUE, SKIP_FILE)"}),(0,t.jsx)(n.td,{children:"ON_ERROR clause options (CONTINUE, SKIP_FILE)"}),(0,t.jsx)(n.td,{children:"Client-side error handling required"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Duplicates Handling"})}),(0,t.jsx)(n.td,{children:"Managed via FORCE=FALSE option or staging tables"}),(0,t.jsx)(n.td,{children:"Managed via file tracking and deduplication logic"}),(0,t.jsx)(n.td,{children:"Client-side deduplication required"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Serverless"})}),(0,t.jsx)(n.td,{children:"No \u2013 requires a virtual warehouse"}),(0,t.jsx)(n.td,{children:"Yes \u2013 serverless compute"}),(0,t.jsx)(n.td,{children:"Yes \u2013 serverless compute"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Setup Complexity"})}),(0,t.jsx)(n.td,{children:"Easy \u2013 straightforward SQL commands"}),(0,t.jsx)(n.td,{children:"Medium \u2013 requires cloud storage setup and event notification configuration"}),(0,t.jsx)(n.td,{children:"High \u2013 requires SDK integration, API key management, and client-side logic"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Cost Model"})}),(0,t.jsx)(n.td,{children:"Warehouse compute charges + storage costs"}),(0,t.jsx)(n.td,{children:"Serverless compute charges based on uncompressed data size"}),(0,t.jsx)(n.td,{children:"Transparent, throughput-based pricing (credits per uncompressed GB)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Best For"})}),(0,t.jsx)(n.td,{children:"One-time or scheduled batch loads"}),(0,t.jsx)(n.td,{children:"Continuous ingestion from cloud storage"}),(0,t.jsx)(n.td,{children:"Real-time streaming analytics and low-latency data processing"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Pros"})}),(0,t.jsx)(n.td,{children:"Simple setup; predictable costs; suitable for large data volumes"}),(0,t.jsx)(n.td,{children:"Automated data loading; serverless; near real-time data availability"}),(0,t.jsx)(n.td,{children:"True real-time ingestion; flexible schema; no need for file staging"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Cons"})}),(0,t.jsx)(n.td,{children:"Not real-time; requires manual intervention; potential for higher latency in large loads"}),(0,t.jsx)(n.td,{children:"Minor delays due to event notification processing; less control over load timing"}),(0,t.jsx)(n.td,{children:"Higher complexity; client-side error handling; potential for API rate limits and schema management challenges"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"snowpipe-streaming",children:"Snowpipe Streaming"}),"\n",(0,t.jsx)(n.p,{children:"Snowpipe Streaming is Snowflake\u2019s service for continuous, low-latency loading of streaming data directly into Snowflake. It enables near real-time data ingestion and analysis, allowing high volumes of data from diverse streaming sources to be available for query and analysis within seconds."}),"\n",(0,t.jsx)(n.h3,{id:"implementations",children:"Implementations"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"High-performance architecture"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Uses snowpipe-streaming SDK"}),"\n",(0,t.jsx)(n.li,{children:"Throughput-based pricing"}),"\n",(0,t.jsx)(n.li,{children:"Uses PIPE objects to manage data flow and lightweight transformations"}),"\n",(0,t.jsx)(n.li,{children:"REST API for direct ingestion"}),"\n",(0,t.jsx)(n.li,{children:"Server-side schema validation"}),"\n",(0,t.jsx)(n.li,{children:"Optimized for high throughput and query efficiency"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Classic architecture"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Uses snowflake-ingest-sdk"}),"\n",(0,t.jsx)(n.li,{children:"Channels open directly against target tables (no PIPE object)"}),"\n",(0,t.jsx)(n.li,{children:"Pricing based on serverless compute and client connections"}),"\n",(0,t.jsx)(n.li,{children:"Reliable for existing pipelines"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"choosing-implementation",children:"Choosing Implementation"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"New projects:"})," High-performance architecture for better scalability, cost predictability, and performance."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Existing pipelines:"})," Classic architecture continues to operate; migration optional."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"snowpipe-streaming-vs-snowpipe",children:"Snowpipe Streaming vs Snowpipe"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Category"}),(0,t.jsx)(n.th,{children:"Snowpipe Streaming"}),(0,t.jsx)(n.th,{children:"Snowpipe"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Form of data to load"})}),(0,t.jsx)(n.td,{children:"Rows"}),(0,t.jsx)(n.td,{children:"Files"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Third-party software"})}),(0,t.jsx)(n.td,{children:"Custom Java application code wrapper"}),(0,t.jsx)(n.td,{children:"None"})]})]})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," Snowpipe Streaming complements Snowpipe; it\u2019s ideal when data is streamed as rows rather than written to files."]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>r});var s=i(296540);const t={},a=s.createContext(t);function o(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);