"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[60790],{555162:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var t=n(785893),i=n(511151);const o={},r="Commands",a={id:"technologies/brokers/emqtt/commands",title:"Commands",description:"git clone -b master https://github.com/emqx/emqx-docker.git",source:"@site/docs/technologies/brokers/emqtt/commands.md",sourceDirName:"technologies/brokers/emqtt",slug:"/technologies/brokers/emqtt/commands",permalink:"/technologies/brokers/emqtt/commands",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/technologies/brokers/emqtt/commands.md",tags:[],version:"current",lastUpdatedAt:1701793554,formattedLastUpdatedAt:"Dec 5, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"EMQTT",permalink:"/technologies/brokers/emqtt/"},next:{title:"Conf",permalink:"/technologies/brokers/emqtt/conf"}},l={},d=[{value:"Docker",id:"docker",level:2},{value:"Dashboard",id:"dashboard",level:2},{value:"HTTP API for eMQTT",id:"http-api-for-emqtt",level:2},{value:"Commands",id:"commands-1",level:2},{value:"Add Plugin to emqx",id:"add-plugin-to-emqx",level:2},{value:"Plugins emqx.auth.username",id:"plugins-emqxauthusername",level:2},{value:"Others",id:"others",level:2}];function c(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"commands",children:"Commands"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"git clone -b master https://github.com/emqx/emqx-docker.git"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"cd emqx-docker && docker build -t emqx:latest ."})}),"\n",(0,t.jsx)(s.h2,{id:"docker",children:"Docker"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"docker run --rm -ti --name=emqx --net=confluent -p 18083:18083 -p 1883:1883 emqx:latest"})}),"\n",(0,t.jsx)(s.h2,{id:"dashboard",children:"Dashboard"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"http://localhost:18083",children:"http://localhost:18083"})}),"\n",(0,t.jsx)(s.h2,{id:"http-api-for-emqtt",children:"HTTP API for eMQTT"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Create an app in dashboard for creating appid and app password"}),"\n",(0,t.jsx)(s.li,{children:"Use Basic authentication header for sending HTTP calls"}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"http://emqtt.io/docs/v3/rest.html",children:"http://emqtt.io/docs/v3/rest.html"})}),"\n",(0,t.jsxs)(s.li,{children:["Basic Auth: curl -v --basic -u appid",":appsecret"," -k ",(0,t.jsx)(s.a,{href:"http://localhost:8080/api/v3/brokers",children:"http://localhost:8080/api/v3/brokers"})]}),"\n",(0,t.jsxs)(s.li,{children:["List all API: ",(0,t.jsx)(s.a,{href:"http://localhost:8080/api/v3",children:"http://localhost:8080/api/v3"})]}),"\n",(0,t.jsxs)(s.li,{children:["POST: ",(0,t.jsx)(s.a,{href:"http://localhost:8080/api/v3/mqtt/publish",children:"http://localhost:8080/api/v3/mqtt/publish"})]}),"\n",(0,t.jsx)(s.li,{children:"Data"}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "topic": "foo",\n  "payload": "hello from mqtt",\n  "qos": 1,\n  "retain": false,\n  "client_id": "mqttjs_ab9069449e"\n}\n'})}),"\n",(0,t.jsx)(s.h2,{id:"commands-1",children:"Commands"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"./bin/emqx_ctl\n\nmgmt list # List Applications\nmgmt insert appid <Name> # Add Application of REST API\nmgmt update appid <status> # Update Application of REST API\nmgmt lookup appid # Get Application of REST API\nmgmt delete appid # Delete Application of REST API\n\nstatus # Show broker status\n\nbroker # Show broker version, uptime and description\nbroker stats # Show broker statistics of clients, topics, subscribers\nbroker metrics # Show broker metrics\n\ncluster join <Node> # Join the cluster\ncluster leave # Leave the cluster\ncluster force-leave <Node> # Force the node leave from cluster\ncluster status # Cluster status\n\nacl reload # reload etc/acl.conf\n\nclients list # List all clients\nclients show <ClientId> # Show a client\nclients kick <ClientId> # Kick out a client\n\nsessions list # List all sessions\nsessions list persistent # List all persistent sessions\nsessions list transient # List all transient sessions\nsessions show <ClientId> # Show a session\n\nroutes list # List all routes\nroutes show <Topic> # Show a route\n\nsubscriptions list # List all subscriptions\nsubscriptions show <ClientId> # Show subscriptions of a client\nsubscriptions add <ClientId> <Topic> <QoS> # Add a static subscription manually\nsubscriptions del <ClientId> <Topic> # Delete a static subscription manually\n\nplugins list # Show loaded plugins\nplugins load <Plugin> # Load plugin\nplugins unload <Plugin> # Unload plugin\n\nbridges list # List bridges\nbridges start <Name> # Start a bridge\nbridges stop <Name> # Stop a bridge\nbridges forwards <Name> # Show a bridge forward topic\nbridges add-forward <Name> <Topic> # Add bridge forward topic\nbridges del-forward <Name> <Topic> # Delete bridge forward topic\nbridges subscriptions <Name> # Show a bridge subscriptions topic\nbridges add-subscription <Name> <Topic> <Qos> # Add bridge subscriptions topic\nbridges del-subscription <Name> <Topic> # Delete bridge subscriptions topic\n\nvm all # Show info of Erlang VM\nvm load # Show load of Erlang VM\nvm memory # Show memory of Erlang VM\nvm process # Show process of Erlang VM\nvm io # Show IO of Erlang VM\nvm ports # Show Ports of Erlang VM\n\nmnesia # Mnesia system info\n\nlog primary-level # Show the primary log level now\nlog primary-level <Level> # Set the primary log level\nlog handlers list # Show log handlers\nlog handlers set-level <HandlerId> <Level> # Set log level of a log handler\n\ntrace list # List all traces started\ntrace start client <ClientId> <File> [<Level>] # Traces for a client\ntrace stop client <ClientId> # Stop tracing for a client\ntrace start topic <Topic> <File> [<Level>] # Traces for a topic\ntrace stop topic <Topic> # Stop tracing for a topic\n\n## listeners # List listeners\nlisteners stop <Proto> <Port> # Stop a listener\n\nretainer info # Show the count of retained messages\nretainer topics # Show all topics of retained messages\nretainer clean # Clean all retained messages\n\nadmins add username password tags # Add dashboard user\nadmins passwd username password # Reset dashboard user password\nadmins del username # Delete dashboard user\n\n# emqx_auth_username commands\nusers list # List users\nusers add username password # Add User\nusers del username # Delete User\n"})}),"\n",(0,t.jsx)(s.h2,{id:"add-plugin-to-emqx",children:"Add Plugin to emqx"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"load emqx_auth_username plugin\n\n./bin/emqx_ctl plugins load emqx_auth_username\n"})}),"\n",(0,t.jsx)(s.h2,{id:"plugins-emqxauthusername",children:"Plugins emqx.auth.username"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"Add username/password by./bin/emqx_ctl usersCLI:\n\n$ ./bin/emqx_ctl users add username password\n\nor by configuringetc/plugins/emqx_auth_username.conf:\n\nauth.username.test = public\n\n./bin/emqx_ctl users add **example_mqtt_client xitanez123**\n"})}),"\n",(0,t.jsx)(s.h2,{id:"others",children:"Others"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"docker run --net=example-docker -e EMQTT_URL=http://emqx:8080 -e EMQTT_API_USER=admin -e EMQTT_API_PASS=public oxygen0211/emqtt-prometheus-exporter\n"})})]})}function p(e={}){const{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},511151:(e,s,n)=>{n.d(s,{Z:()=>a,a:()=>r});var t=n(667294);const i={},o=t.createContext(i);function r(e){const s=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(o.Provider,{value:s},e.children)}}}]);