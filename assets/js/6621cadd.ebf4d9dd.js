"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[33871],{137750:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var t=a(785893),r=a(511151);const s={},i="Cheatsheet",o={id:"ai/numpy/cheatsheet",title:"Cheatsheet",description:"References",source:"@site/docs/ai/numpy/cheatsheet.md",sourceDirName:"ai/numpy",slug:"/ai/numpy/cheatsheet",permalink:"/ai/numpy/cheatsheet",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/ai/numpy/cheatsheet.md",tags:[],version:"current",lastUpdatedAt:1701793554,formattedLastUpdatedAt:"Dec 5, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Numpy",permalink:"/ai/numpy/"},next:{title:"Data Types",permalink:"/ai/numpy/data-types"}},p={},c=[{value:"References",id:"references",level:2}];function l(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"cheatsheet",children:"Cheatsheet"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"# Creating arrays\n np.array([1,2,3])\n np.array([(1.5,2,3), (4,5,6)], dtype=float)\n np.array([[(1.5,2,3), (4,5,6), [(3,2,1), (4,5,6)]], dtype=float)\n\n Initial placeholders\n  np.zeros((3,4))  #create an array of zeros\n  np.ones((2,3,4), dtype=np.int16)  #create an array of ones\n  d = np.arange(10,25,5)  #create an array of evenly spaced values (step value)\n  np.linspace(0,2,9)  #create an array of evenly spaced values (number of samples)\n  e = np.full((2,2), 7)  #create a constant array\n  f = np.eye(2)  #create a 2x2 identity matrix\n  np.random.random((2,2))  #create an array with random values\n  np.empty((3,2))  #create an empty array\n\n# I/O\n Saving & Loading on Disk\n  np.save('my_array', a)\n  np.savez('array.npz', a, b)\n  np.load('my_array.npy')\n\n Saving & Loading Text Files\n  np.loadtxt(\"myfile.txt\")\n  np.genfromtxt(\"my_file.csv\", delimiter=',')\n  np.savetxt(\"myarray.txt\", a, delimiter=\" \")\n\n# Inspecting your array\n a.shape   #array dimensions\n len(a)     #length of array\n b.ndim    #number of array dimensions\n e.size    #number of array elements\n b.dtype   #data type of array elements\n b.dtype.name    #name of data type\n b.astype(int)     #convert an array to a different type\n\n# Array Mathematics\n- Arithmetic Operations\n    g = a-b\n    np.subtract(a,b)\n    b+a\n    np.add(b,a)\n    a/b\n    np.divide(a,b)\n    a*b\n    np.multiply(a,b)\n    np.exp(b)   #exponentiation\n    np.sqrt(b)\n    np.sin(a)    #print sines of an array\n    np.cos(b)   #element-wise cosine\n    np.log(a)    #element-wise natural logarithm\n    e.dot(f)       # dot product\n- Comparison\n    a == b     #element-wise comparison\n    a < 2       # element-wise comparison\n    np.array_equal(a,b)      #array-wise comparison\n- Aggregate Functions\n    a.sum()                 #array-wise sum\n    a.min()                  #array-wise mimimum value\n    b.max(axis=0)      #maximum value of an array row\n    b.cumsum(axis=1)       #cumulative sum of the elements\n    a.mean()         #mean\n    b.median()     #median\n    a.corrcoef()    #correlation coefficient\n    np.std(b)        #standard deviation\n\nCopying Arrays\n h = a.view()       #create a view of the array with the same data\n np.copy(a)         #create a copy of the array\n h = a.copy()       #create a deep copy of the array\n\nSorting Arrays\n a.sort()                 #sort an array\n c.sort(axis=0)      #sort the elements of an array's axis\n\nSubsetting\n a[2]         #select the element at the 2nd index\n b[1,2]      #select the element at row 1 column 2 (equivalent to b[1][2])\n\nSlicing\n a[0:2]        #select items at index 0 and 1\n b[0:2, 1]    #select items at rows 0 and 1 in column 1\n b[:1]           #select all items at row 0 (equivalent to b[0:1, :])\n c[1,...]        #same as [1, :, :]\n a[ : : -1]     #reversed array a\n\nIndexing\n Boolean Indexing\n  a[a<2]        #select elements from a less than 2\n Fancy Indexing\n  b[[1,0,1,0], [0,1,2,0]]      #select elements (1,0),(0,1),(1,2) and (0,0)\n  b[[1,0,1,0]][:,[0,1,2,0]]   #select a subset of the matrix's rows and columns\n\nArray Manipulation\n Transposing Array\n  i = np.transpose(b)        #permute array dimensions\n  i.T                                     #permute array dimensions\n\n Changing Array Shape\n  b.ravel()                         #flatten the array\n  g.reshape(3,-2)            #reshape, but don't change data\n\n adding/removing elements\n  h.resize((2,6))       #return a new array with shape (2,6)\n  np.append(h,g)     #append items to an array\n  np.insert(a,1,5)     #insert items in an array\n  np.delete(a,[1])     #delete items from an array\n\n Combining arrays\n  np.concatenate((a,d), axis=0)    #concatenate arrays\n  np.vstack((a,b))                            #stack arrays vertically (row-wise)\n  np.r_[e,f]                                       #stack arrays vertically (row-wise)\n  np.hstack((e,f))                             #stack arrays horizontally (column-wise)\n  np.column_stack((a,d))              #create stacked column-wise arrays\n  np.c_[a,d]                                     #create stacked column-wise arrays\n\n Splitting arrays\n  np.hsplit(a,3)               #split the array horizontally at the 3rd index\n  np.vsplit(c,2)               #split the array vertically at the 2nd index\n\n# Others\nnp.info(np.ndarray.dtype)    #Help\n\n# inf is infinity - a value that is greater than any other value. -inf is therefore smaller than any other value.\n\n# nan stands for Not A Number, and this is not equal to 0.\n\na = range(3,dtype=float)\na[0] = np.nan\na[1] = np.inf\na[2] = -np.inf\na # is now [nan,inf,-inf]\nnp.isnan(a[0]) # True\nnp.isinf(a[1]) # True\nnp.isinf(a[2]) # True\n"})}),"\n",(0,t.jsx)(e.h2,{id:"references",children:"References"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{href:"https://towardsdatascience.com/the-ultimate-beginners-guide-to-numpy-f5a2f99aef54",children:"https://towardsdatascience.com/the-ultimate-beginners-guide-to-numpy-f5a2f99aef54"})})]})}function d(n={}){const{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(l,{...n})}):l(n)}},511151:(n,e,a)=>{a.d(e,{Z:()=>o,a:()=>i});var t=a(667294);const r={},s=t.createContext(r);function i(n){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:i(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);