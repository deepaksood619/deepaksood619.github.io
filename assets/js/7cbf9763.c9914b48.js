"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[11103],{552605:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>h,contentTitle:()=>n,default:()=>g,frontMatter:()=>r,metadata:()=>d,toc:()=>c});var i=s(785893),t=s(511151);const r={},n="Digraphs (Directed Graphs)",d={id:"data-structures/graph/digraphs-directed-graphs",title:"Digraphs (Directed Graphs)",description:"image-image1.jpg)",source:"@site/docs/data-structures/graph/digraphs-directed-graphs.md",sourceDirName:"data-structures/graph",slug:"/data-structures/graph/digraphs-directed-graphs",permalink:"/data-structures/graph/digraphs-directed-graphs",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/data-structures/graph/digraphs-directed-graphs.md",tags:[],version:"current",lastUpdatedAt:1722285222,formattedLastUpdatedAt:"Jul 29, 2024",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Adjacency Matrix",permalink:"/data-structures/graph/adjacency-matrix"},next:{title:"Implementation",permalink:"/data-structures/graph/implementation"}},h={},c=[{value:"Digraph Search",id:"digraph-search",level:2},{value:"Edge-Weighted Graph API",id:"edge-weighted-graph-api",level:2},{value:"Links",id:"links",level:2}];function p(e){const a={a:"a",h1:"h1",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.h1,{id:"digraphs-directed-graphs",children:"Digraphs (Directed Graphs)"}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.img,{alt:"image",src:s(681162).Z+"",width:"1102",height:"721"})}),"\n",(0,i.jsxs)(a.ol,{children:["\n",(0,i.jsxs)(a.li,{children:["\n",(0,i.jsx)(a.p,{children:"Path"}),"\n"]}),"\n",(0,i.jsxs)(a.li,{children:["\n",(0,i.jsx)(a.p,{children:"Shortest path"}),"\n"]}),"\n",(0,i.jsxs)(a.li,{children:["\n",(0,i.jsx)(a.p,{children:"Topological Sorting (can you draw a digraph so that all edges point upwards)"}),"\n"]}),"\n",(0,i.jsxs)(a.li,{children:["\n",(0,i.jsx)(a.p,{children:"Strong Connectivity"}),"\n"]}),"\n",(0,i.jsxs)(a.li,{children:["\n",(0,i.jsx)(a.p,{children:"Transitive closure (For which vertices v and w is there a path from v to w)"}),"\n"]}),"\n",(0,i.jsxs)(a.li,{children:["\n",(0,i.jsx)(a.p,{children:"PageRank"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.img,{alt:"image",src:s(450108).Z+"",width:"1099",height:"899"})}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.img,{alt:"image",src:s(809433).Z+"",width:"1102",height:"817"})}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.img,{alt:"image",src:s(881034).Z+"",width:"1180",height:"1004"})}),"\n",(0,i.jsx)(a.h2,{id:"digraph-search",children:"Digraph Search"}),"\n",(0,i.jsxs)(a.ol,{children:["\n",(0,i.jsx)(a.li,{children:"Reachability - Find all vertices reachable from s along a directed path. (Use DFS)"}),"\n"]}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.img,{alt:"image",src:s(723211).Z+"",width:"1098",height:"868"})}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.img,{alt:"image",src:s(334515).Z+"",width:"1290",height:"1042"})}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.img,{alt:"image",src:s(712711).Z+"",width:"1268",height:"1036"})}),"\n",(0,i.jsxs)(a.ol,{start:"2",children:["\n",(0,i.jsx)(a.li,{children:(0,i.jsx)(a.img,{alt:"image",src:s(687721).Z+"",width:"1284",height:"1008"})}),"\n"]}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.img,{alt:"image",src:s(713458).Z+"",width:"1099",height:"808"})}),"\n",(0,i.jsx)(a.h2,{id:"edge-weighted-graph-api",children:"Edge-Weighted Graph API"}),"\n",(0,i.jsx)(a.p,{children:"We use adjacency-list representation for representing a weighted graph, where each edge has a weight associated with it"}),"\n",(0,i.jsx)(a.h2,{id:"links",children:"Links"}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.a,{href:"/algorithms/graphtheory/topological-sort-algorithm",children:"Topological Sort"})})]})}function g(e={}){const{wrapper:a}={...(0,t.a)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},681162:(e,a,s)=>{s.d(a,{Z:()=>i});const i=s.p+"assets/images/Digraphs-(Directed-Graphs)-image1-5599b4476258012f160ad1360514fb88.jpg"},450108:(e,a,s)=>{s.d(a,{Z:()=>i});const i=s.p+"assets/images/Digraphs-(Directed-Graphs)-image2-7a74356faa701c566b7939ac5fa97866.jpg"},809433:(e,a,s)=>{s.d(a,{Z:()=>i});const i=s.p+"assets/images/Digraphs-(Directed-Graphs)-image3-fc1024894c7e1b8e66fd71fb21df71b8.jpg"},881034:(e,a,s)=>{s.d(a,{Z:()=>i});const i=s.p+"assets/images/Digraphs-(Directed-Graphs)-image4-49b9188ea6165ae0c12868119164d5eb.jpg"},723211:(e,a,s)=>{s.d(a,{Z:()=>i});const i=s.p+"assets/images/Digraphs-(Directed-Graphs)-image5-4197c94ebeaefd63a371c43690ed8071.jpg"},334515:(e,a,s)=>{s.d(a,{Z:()=>i});const i=s.p+"assets/images/Digraphs-(Directed-Graphs)-image6-1169018c33cbfc2877d83f93bd9866c9.jpg"},712711:(e,a,s)=>{s.d(a,{Z:()=>i});const i=s.p+"assets/images/Digraphs-(Directed-Graphs)-image7-8789b07004635d1774ef3a0133b45843.jpg"},687721:(e,a,s)=>{s.d(a,{Z:()=>i});const i=s.p+"assets/images/Digraphs-(Directed-Graphs)-image8-a022c86852c5c6478baa0d6e97a2b456.jpg"},713458:(e,a,s)=>{s.d(a,{Z:()=>i});const i=s.p+"assets/images/Digraphs-(Directed-Graphs)-image9-f5882b555a499a732c97bc64b6f19f6c.jpg"},511151:(e,a,s)=>{s.d(a,{Z:()=>d,a:()=>n});var i=s(667294);const t={},r=i.createContext(t);function n(e){const a=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function d(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:n(e.components),i.createElement(r.Provider,{value:a},e.children)}}}]);