"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[20403],{570885:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"algorithms/mathematics/powerset","title":"Powerset","description":"Power Set","source":"@site/docs/algorithms/mathematics/powerset.md","sourceDirName":"algorithms/mathematics","slug":"/algorithms/mathematics/powerset","permalink":"/algorithms/mathematics/powerset","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/algorithms/mathematics/powerset.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1701793554000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"MO\'s Algorithm","permalink":"/algorithms/mathematics/mo-algorithm"},"next":{"title":"Searching Sorting","permalink":"/algorithms/searching-sorting/"}}');var s=n(474848),o=n(28453);const r={},a="Powerset",l={},c=[{value:"Power Set",id:"power-set",level:3},{value:"Algorithm",id:"algorithm",level:2},{value:"Using Bit Manipulation",id:"using-bit-manipulation",level:2},{value:"Python (Using chain and combinations)",id:"python-using-chain-and-combinations",level:2}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"powerset",children:"Powerset"})}),"\n",(0,s.jsx)(t.h3,{id:"power-set",children:"Power Set"}),"\n",(0,s.jsxs)(t.p,{children:["Power set P(S) of a set S is the set of all subsets of S. For example ",(0,s.jsx)(t.code,{children:"S = {a, b, c} then P(s) = {{}, {a}, {b}, {c}, {a,b}, {a, c}, {b, c}, {a, b, c}}"})]}),"\n",(0,s.jsx)(t.p,{children:"Powerset also includes empty set and S itself"}),"\n",(0,s.jsx)(t.p,{children:"If S has n elements in it then P(s) will have 2^n elements"}),"\n",(0,s.jsx)(t.h2,{id:"algorithm",children:"Algorithm"}),"\n",(0,s.jsx)(t.p,{children:"Input: Set[], set_size"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"Input: Set[], set_size\n1. Get the size of power set\n    powet_set_size = pow(2, set_size)\n2  Loop for counter from 0 to pow_set_size\n     (a) Loop for i = 0 to set_size\n          (i) If ith bit in counter is set\n               Print ith element from set for this subset\n     (b) Print seperator for subsets i.e., newline\n"})}),"\n",(0,s.jsx)(t.p,{children:"Running time - O(2^n^)"}),"\n",(0,s.jsxs)(t.p,{children:["Running time with decoding from integer to binary - ",(0,s.jsx)(t.code,{children:"O(2^n * log n)"})]}),"\n",(0,s.jsx)(t.h2,{id:"using-bit-manipulation",children:"Using Bit Manipulation"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"possibleSubsets(A, N):\n    for i = 0 to 2^N:\n        for j = 0 to N:\n            if jth bit is set in i:\n                print A[j]\n        print \u2018\\n\u2019\n\nvoid possibleSubsets(char A[], int N)\n{\n    for(int i = 0;i < (1 << N); ++i)\n    {\n        for(int j = 0;j < N;++j)\n            if(i & (1 << j))\n                cout << A[j] << \u2018 \u2018;\n        cout << endl;\n    }\n}\n"})}),"\n",(0,s.jsx)(t.h2,{id:"python-using-chain-and-combinations",children:"Python (Using chain and combinations)"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"# get all subsets of a list\nfrom itertools import chain, combinations\ndef all_subsets(s):\nreturn chain(*map(lambda x: combinations(s, x), range(0, len(s)+1)))\n"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Power_set",children:"https://en.wikipedia.org/wiki/Power_set"})})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var i=n(296540);const s={},o=i.createContext(s);function r(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);