"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[78096],{602620:(i,a,e)=>{e.r(a),e.d(a,{assets:()=>o,contentTitle:()=>r,default:()=>m,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var n=e(785893),t=e(511151);const s={},r="Linear Discriminant Analysis (LDA)",l={id:"ai/ml-algorithms/linear-discriminant-analysis-lda",title:"Linear Discriminant Analysis (LDA)",description:"Hi, Logistic Regression is a classification algorithm traditionally limited to only two-class classification problems.",source:"@site/docs/ai/ml-algorithms/linear-discriminant-analysis-lda.md",sourceDirName:"ai/ml-algorithms",slug:"/ai/ml-algorithms/linear-discriminant-analysis-lda",permalink:"/ai/ml-algorithms/linear-discriminant-analysis-lda",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/ai/ml-algorithms/linear-discriminant-analysis-lda.md",tags:[],version:"current",lastUpdatedAt:1678191863,formattedLastUpdatedAt:"Mar 7, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Learning Vector Quantization (LVQ)",permalink:"/ai/ml-algorithms/learning-vector-quantization-lvq"},next:{title:"Linear regression",permalink:"/ai/ml-algorithms/linear-regression"}},o={},c=[];function d(i){const a={h1:"h1",li:"li",ol:"ol",p:"p",...(0,t.a)(),...i.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h1,{id:"linear-discriminant-analysis-lda",children:"Linear Discriminant Analysis (LDA)"}),"\n",(0,n.jsx)(a.p,{children:"Hi, Logistic Regression is a classification algorithm traditionally limited to only two-class classification problems."}),"\n",(0,n.jsx)(a.p,{children:"If you have more than two classes then the Linear Discriminant Analysis algorithm is the preferred linear classification technique."}),"\n",(0,n.jsx)(a.p,{children:"The representation of LDA is pretty straight forward. It consists of statistical properties of your data, calculated for each class. For a single input variable this includes:"}),"\n",(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsx)(a.p,{children:"The mean value for each class."}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsx)(a.p,{children:"The variance calculated across all classes."}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(a.p,{children:"Predictions are made by calculating a discriminate value for each class and making a prediction for the class with the largest value."}),"\n",(0,n.jsx)(a.p,{children:"The technique assumes that the data has a Gaussian distribution (bell curve), so it is a good idea to remove outliers from your data before hand."}),"\n",(0,n.jsx)(a.p,{children:"It's a simple and powerful method for classification predictive modeling problems."})]})}function m(i={}){const{wrapper:a}={...(0,t.a)(),...i.components};return a?(0,n.jsx)(a,{...i,children:(0,n.jsx)(d,{...i})}):d(i)}},511151:(i,a,e)=>{e.d(a,{Z:()=>l,a:()=>r});var n=e(667294);const t={},s=n.createContext(t);function r(i){const a=n.useContext(s);return n.useMemo((function(){return"function"==typeof i?i(a):{...a,...i}}),[a,i])}function l(i){let a;return a=i.disableParentContext?"function"==typeof i.components?i.components(t):i.components||t:r(i.components),n.createElement(s.Provider,{value:a},i.children)}}}]);