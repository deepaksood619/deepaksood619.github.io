"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[149],{823878:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>o,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var a=r(785893),n=r(511151);const s={},i="Interval Search Tree",c={id:"data-structures/hierarchical-data-structure/interval-search-tree",title:"Interval Search Tree",description:"Operations",source:"@site/docs/data-structures/hierarchical-data-structure/interval-search-tree.md",sourceDirName:"data-structures/hierarchical-data-structure",slug:"/data-structures/hierarchical-data-structure/interval-search-tree",permalink:"/data-structures/hierarchical-data-structure/interval-search-tree",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/data-structures/hierarchical-data-structure/interval-search-tree.md",tags:[],version:"current",lastUpdatedAt:1681237065,formattedLastUpdatedAt:"Apr 11, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Fibonacci Heap",permalink:"/data-structures/hierarchical-data-structure/fibonacci-heap"},next:{title:"k-ary heap / d-ary heap / d-way heap",permalink:"/data-structures/hierarchical-data-structure/k-ary-heap-d-ary-heap-d-way-heap"}},d={},l=[{value:"Implementation - Use a red-black BST to guarantee performance",id:"implementation---use-a-red-black-bst-to-guarantee-performance",level:2}];function h(e){const t={em:"em",h1:"h1",h2:"h2",img:"img",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"interval-search-tree",children:"Interval Search Tree"}),"\n",(0,a.jsx)(t.p,{children:"Operations"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Insert an interval"}),"\n",(0,a.jsx)(t.li,{children:"Search for an interval"}),"\n",(0,a.jsx)(t.li,{children:"Delete an interval"}),"\n",(0,a.jsx)(t.li,{children:"Interval intersection query: Given an interval (lo, hi), find all intervals (or one interval) in data structure that intersects (lo, hi)"}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"image",src:r(148310).Z+"",width:"984",height:"878"})}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"image",src:r(588210).Z+"",width:"1006",height:"808"})}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"image",src:r(977172).Z+"",width:"1086",height:"908"})}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"image",src:r(366399).Z+"",width:"918",height:"358"})}),"\n",(0,a.jsx)(t.h2,{id:"implementation---use-a-red-black-bst-to-guarantee-performance",children:"Implementation - Use a red-black BST to guarantee performance"}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"operation"}),(0,a.jsx)(t.th,{children:"brute"}),(0,a.jsx)(t.th,{children:"interval search tree"}),(0,a.jsx)(t.th,{children:"best in theory"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"insert interval"}),(0,a.jsx)(t.td,{children:"1"}),(0,a.jsx)(t.td,{children:"log N"}),(0,a.jsx)(t.td,{children:"log N"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"find interval"}),(0,a.jsx)(t.td,{children:"N"}),(0,a.jsx)(t.td,{children:"log N"}),(0,a.jsx)(t.td,{children:"log N"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"delete interval"}),(0,a.jsx)(t.td,{children:"N"}),(0,a.jsx)(t.td,{children:"log N"}),(0,a.jsx)(t.td,{children:"log N"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsxs)(t.td,{children:["find any one interval that intersects (",(0,a.jsx)(t.em,{children:"lo"}),", ",(0,a.jsx)(t.em,{children:"hi"}),")"]}),(0,a.jsx)(t.td,{children:"N"}),(0,a.jsx)(t.td,{children:"log N"}),(0,a.jsx)(t.td,{children:"log N"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsxs)(t.td,{children:["find all intervals that intersects (",(0,a.jsx)(t.em,{children:"lo"}),", ",(0,a.jsx)(t.em,{children:"hi"}),")"]}),(0,a.jsx)(t.td,{children:"N"}),(0,a.jsx)(t.td,{children:"R log N"}),(0,a.jsx)(t.td,{children:"R + log N"})]})]})]})]})}function o(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},148310:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/Interval-Search-Tree-image1-338e48a185d4021ea1cdea4643263b1f.jpg"},588210:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/Interval-Search-Tree-image2-103aacb6d05af196b31ab69a6b46e297.jpg"},977172:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/Interval-Search-Tree-image3-4ebcf77addb5216a351c751dfde4bd93.jpg"},366399:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/Interval-Search-Tree-image4-cf283e0ae77d6bd10dc7bdcb50fc5009.jpg"},511151:(e,t,r)=>{r.d(t,{Z:()=>c,a:()=>i});var a=r(667294);const n={},s=a.createContext(n);function i(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);