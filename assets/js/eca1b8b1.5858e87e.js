"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[28384],{69881:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"databases/nosql-databases/cassandra/design","title":"Design","description":"Partitioner","source":"@site/docs/databases/nosql-databases/cassandra/design.md","sourceDirName":"databases/nosql-databases/cassandra","slug":"/databases/nosql-databases/cassandra/design","permalink":"/databases/nosql-databases/cassandra/design","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/databases/nosql-databases/cassandra/design.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1724360358000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Data Model","permalink":"/databases/nosql-databases/cassandra/data-model"},"next":{"title":"Drivers / Clients","permalink":"/databases/nosql-databases/cassandra/drivers-clients"}}');var r=s(474848),t=s(28453);const l={},a="Design",d={},o=[{value:"Partitioner",id:"partitioner",level:2},{value:"Membership",id:"membership",level:2},{value:"Joining the cluster",id:"joining-the-cluster",level:2},{value:"Drivers",id:"drivers",level:2},{value:"Data Placement Strategies",id:"data-placement-strategies",level:2},{value:"Snitches",id:"snitches",level:2},{value:"Suspicion mechanisms",id:"suspicion-mechanisms",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"design",children:"Design"})}),"\n",(0,r.jsx)(n.h2,{id:"partitioner",children:"Partitioner"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Token Value Distribution","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"+2^63^ - 1 to -2^63^"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"membership",children:"Membership"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Any server in cluster could be the coordinator"}),"\n",(0,r.jsx)(n.li,{children:"So every server needs to maintain a list of all the other servers that are currently in the serveran"}),"\n",(0,r.jsx)(n.li,{children:"List needs to be updated automatically as servers join, leave, and fail"}),"\n",(0,r.jsxs)(n.li,{children:["Cassandra uses gossip-based cluster membership","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Nodes periodically gossip their membership list"}),"\n",(0,r.jsx)(n.li,{children:"On receipt, the local membership list is updated"}),"\n",(0,r.jsx)(n.li,{children:"If any heartbeat older than Tfail, node is marked as failed"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"joining-the-cluster",children:"Joining the cluster"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Nodes join the cluster by communicating with any node"}),"\n",(0,r.jsx)(n.li,{children:"Cassandra finds these nodes list of possible nodes in cassandra.yaml"}),"\n",(0,r.jsx)(n.li,{children:"Seed nodes communicate cluster topology to the joining node"}),"\n",(0,r.jsx)(n.li,{children:"Once the new node joins the cluster, all nodes are peers"}),"\n",(0,r.jsxs)(n.li,{children:["States of nodes","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Joining"}),"\n",(0,r.jsx)(n.li,{children:"Leaving"}),"\n",(0,r.jsx)(n.li,{children:"Up"}),"\n",(0,r.jsx)(n.li,{children:"Down- Cassandra uses a Ring-based DHT but without finger tables or routing"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"drivers",children:"Drivers"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Drivers intelligently choose which node would best coordinate a request"}),"\n",(0,r.jsxs)(n.li,{children:["Per-query basis: ",(0,r.jsx)(n.code,{children:'ResultSet results = session.execute("[query]");'})]}),"\n",(0,r.jsx)(n.li,{children:"TokenAwarePolicy - driver chooses node which contains the data"}),"\n",(0,r.jsx)(n.li,{children:"RoundRobinPolicy - driver round robins the ring"}),"\n",(0,r.jsx)(n.li,{children:"DCAwareRoundRobinPolicy - driver round robins the target data center"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"data-placement-strategies",children:"Data Placement Strategies"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Replication Strategy","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"SimpleStrategy"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Uses the partitioner, of which there are two kinds"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"RandomPartitioner"}),": Chord-like hash partitioning"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"ByteOrderedPartitioner"}),": Assigns ranges of keys to servers"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Easier for range queries (e.g., Get me all twitter users starting with [a-b])"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"NetworkTopologyStrategy"}),": for multi-DC deployments","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Two replicas per DC"}),"\n",(0,r.jsx)(n.li,{children:"Three replicas per DC"}),"\n",(0,r.jsxs)(n.li,{children:["Per DC","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"First replica placed according to Partitioner"}),"\n",(0,r.jsx)(n.li,{children:"Then go clockwise around ring until you hit a different rack"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"snitches",children:"Snitches"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Maps:"})," IPs to racks and DCs. Configured in cassandra.yaml config file"]}),"\n",(0,r.jsxs)(n.li,{children:["Some options:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SimpleSnitch:"})," Unaware of Topology (Rack-unaware)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"RackInferring:"})," Assumes topology of network by octet of server's IP address"]}),"\n",(0,r.jsx)(n.li,{children:"101.102.103.104 = x.< DC octet >.< rack octet >.< node octet >"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PropertyFileSnitch:"})," uses a config file"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"EC2Snitch:"})," uses EC2","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"EC2 Region = DC"}),"\n",(0,r.jsx)(n.li,{children:"Availability zone = rack"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Other snitch options available"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://cassandra.apache.org/doc/stable/cassandra/architecture/snitch.html",children:"Snitch | Apache Cassandra Documentation"})}),"\n",(0,r.jsx)(n.h2,{id:"suspicion-mechanisms",children:"Suspicion mechanisms"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Suspicion mechanisms to adaptively set the timeout based on underlying network and failure behavior"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Accural detector:"})," Failure Detector outputs a value (PHI) representing suspicion"]}),"\n",(0,r.jsx)(n.li,{children:"Applications set an appropriate threshold"}),"\n",(0,r.jsxs)(n.li,{children:["PHI calculation for a member","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Inter-arrival times for gossip messages"}),"\n",(0,r.jsx)(n.li,{children:"PHI(t) = -log(CDF or Probability(t_now - t_last))/log 10"}),"\n",(0,r.jsx)(n.li,{children:"PHI basically determines the detection timeout, but takes into account historical inter-arrival time variations for gossiped heatbeats"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"In practice, PHI = 5 => 10-15 sec detection time"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var i=s(296540);const r={},t=i.createContext(r);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);