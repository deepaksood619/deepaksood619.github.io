"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[9458],{789906:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var n=r(785893),i=r(511151);const a={},s="Segment Tree",o={id:"data-structures/hierarchical-data-structure/segment-tree",title:"Segment Tree",description:"In computer science, asegment tree, also known as a statistic tree, is a tree)data structure used for storing information about intervals), or segments. It allows querying which of the stored segments contain a given point. It is, in principle, a static structure; that is, it's a structure that cannot be modified once it's built. A similar data structure is the interval tree.",source:"@site/docs/data-structures/hierarchical-data-structure/segment-tree.md",sourceDirName:"data-structures/hierarchical-data-structure",slug:"/data-structures/hierarchical-data-structure/segment-tree",permalink:"/data-structures/hierarchical-data-structure/segment-tree",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/data-structures/hierarchical-data-structure/segment-tree.md",tags:[],version:"current",lastUpdatedAt:1701793554,formattedLastUpdatedAt:"Dec 5, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Problems",permalink:"/data-structures/hierarchical-data-structure/problems"},next:{title:"Space-partitioning trees",permalink:"/data-structures/hierarchical-data-structure/space-partitioning-trees"}},c={},l=[];function u(e){const t={a:"a",h1:"h1",p:"p",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"segment-tree",children:"Segment Tree"}),"\n",(0,n.jsxs)(t.p,{children:["In ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Computer_science",children:"computer science"}),", asegment tree, also known as a statistic tree, is a ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Tree_(data_structure)",children:"tree"}),(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Data_structure",children:"data structure"})," used for storing information about ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Interval_(mathematics)",children:"intervals"}),", or segments. It allows querying which of the stored segments contain a given point. It is, in principle, a static structure; that is, it's a structure that cannot be modified once it's built. A similar data structure is the ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Interval_tree",children:"interval tree"}),"."]}),"\n",(0,n.jsx)(t.p,{children:"A Segment Tree is a data structure that allows answering range queries over an array effectively, while still being flexible enough to allow modifying the array. This includes finding the sum of consecutive array elementsa [l...r]a [l...r], or finding the minimum element in a such a range inO(logn)O(log\u2061n)time. Between answering such queries the Segment Tree allows modifying the array by replacing one element, or even change the elements of a whole subsegment (e.g. assigning all elementsa [l...r]a [l...r]to any value, or adding a value to all element in the subsegment)."}),"\n",(0,n.jsx)(t.p,{children:"In general a Segment Tree is a very flexible data structure, and a huge number of problems can be solved with it. Additionally it is also possible to apply more complex operations and answer more complex queries."}),"\n",(0,n.jsx)(t.p,{children:"In particular the Segment Tree can be easily generalized to larger dimensions. For instance with a two-dimensional Segment Tree you can answer sum or minimum queries over some subrectangle of a given matrix. However only inO(log2n)O(log2\u2061n)time.\nA segment tree is usually represented in an array."}),"\n",(0,n.jsxs)(t.p,{children:["A segment tree for a setIofnintervals uses ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Big_O_notation",children:"O"}),"(nlogn) storage and can be built inO(nlogn) time. Segment trees support searching for all the intervals that contain a query point inO(logn+k), kbeing the number of retrieved intervals or segments.\nOne important property of Segment Trees is, that they require only a linear amount of memory. The standard Segment Tree requires 4n4n vertices for working on an array of size n."]}),"\n",(0,n.jsxs)(t.p,{children:["Applications of the segment tree are in the areas of ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Computational_geometry",children:"computational geometry"}),", and ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Geographic_information_systems",children:"geographic information systems"}),"."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://cp-algorithms.com/data_structures/segment_tree.html",children:"https://cp-algorithms.com/data_structures/segment_tree.html"})}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Segment_tree",children:"https://en.wikipedia.org/wiki/Segment_tree"})})]})}function h(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},511151:(e,t,r)=>{r.d(t,{Z:()=>o,a:()=>s});var n=r(667294);const i={},a=n.createContext(i);function s(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);