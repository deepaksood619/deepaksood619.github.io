"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[29729],{727411:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"data-structures/trie/compressed-trie","title":"Compressed Trie","description":"Compressed Trie is obtained from standard trie by joining chains of single nodes. The nodes of a compressed trie can be stored by storing index ranges at the nodes","source":"@site/docs/data-structures/trie/compressed-trie.md","sourceDirName":"data-structures/trie","slug":"/data-structures/trie/compressed-trie","permalink":"/data-structures/trie/compressed-trie","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/data-structures/trie/compressed-trie.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1700454456000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Trie","permalink":"/data-structures/trie/"},"next":{"title":"Others","permalink":"/data-structures/trie/others"}}');var n=s(474848),i=s(28453);const o={},a="Compressed Trie",d={},c=[];function p(e){const t={h1:"h1",header:"header",img:"img",p:"p",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"compressed-trie",children:"Compressed Trie"})}),"\n",(0,n.jsx)(t.p,{children:"Compressed Trie is obtained from standard trie by joining chains of single nodes. The nodes of a compressed trie can be stored by storing index ranges at the nodes"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"image",src:s(77750).A+"",width:"733",height:"403"})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},77750:(e,t,s)=>{s.d(t,{A:()=>r});const r=s.p+"assets/images/Compressed-Trie-image1-3e409107c765047a9ab0e6b1d83d99b1.jpg"},28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>a});var r=s(296540);const n={},i=r.createContext(n);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);