"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[81413],{805661:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"about-deepak-sood/projects/33-powering-granular-cloud-cost-analytics-with-clickhouse","title":"Powering Granular Cloud Cost Analytics with ClickHouse","description":"- Product: Unit Econ Pro \u2013 Opstree\u2019s internal FinOps observability and optimization platform","source":"@site/docs/about-deepak-sood/projects/33-powering-granular-cloud-cost-analytics-with-clickhouse.md","sourceDirName":"about-deepak-sood/projects","slug":"/about-deepak-sood/projects/33-powering-granular-cloud-cost-analytics-with-clickhouse","permalink":"/about-deepak-sood/projects/33-powering-granular-cloud-cost-analytics-with-clickhouse","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/about-deepak-sood/projects/33-powering-granular-cloud-cost-analytics-with-clickhouse.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1747817091000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Projects","permalink":"/about-deepak-sood/projects/"},"next":{"title":"Case Study: Optimizing Real-time User Analytics for a Large EdTech Platform Using ClickHouse","permalink":"/about-deepak-sood/projects/34-optimizing-real-time-user-analytics-using-clickhouse"}}');var t=i(474848),r=i(28453);const l={},o="Powering Granular Cloud Cost Analytics with ClickHouse",c={},d=[{value:"The Challenge",id:"the-challenge",level:2},{value:"Our Approach: Re-architecting with ClickHouse",id:"our-approach-re-architecting-with-clickhouse",level:2},{value:"Step 1: Data Modeling",id:"step-1-data-modeling",level:2},{value:"Step 2: Cost Ingestion &amp; ETL",id:"step-2-cost-ingestion--etl",level:2},{value:"Step 3: Real-time Dashboards &amp; Query Engine",id:"step-3-real-time-dashboards--query-engine",level:2},{value:"Step 4: Cost Recommendations Engine",id:"step-4-cost-recommendations-engine",level:2},{value:"Impact &amp; Outcomes",id:"impact--outcomes",level:2},{value:"Why ClickHouse?",id:"why-clickhouse",level:2},{value:"Sample Use Cases Unlocked",id:"sample-use-cases-unlocked",level:2},{value:"Summary",id:"summary",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"powering-granular-cloud-cost-analytics-with-clickhouse",children:"Powering Granular Cloud Cost Analytics with ClickHouse"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Product:"})," Unit Econ Pro \u2013 Opstree\u2019s internal FinOps observability and optimization platform"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Goal:"})," Real-time, high-scale storage and querying of time-series ",(0,t.jsx)(n.strong,{children:"cloud cost metrics"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Technology Stack:"})," ClickHouse, Python (ETL), Prometheus Exporters, Kubernetes, Grafana"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"the-challenge",children:"The Challenge"}),"\n",(0,t.jsxs)(n.p,{children:["While building ",(0,t.jsx)(n.strong,{children:"Unit Econ Pro"}),", our in-house FinOps platform for cloud cost observability and optimization, we faced several key technical challenges related to the original ",(0,t.jsx)(n.strong,{children:"InfluxDB-based architecture"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"High write amplification and ingestion lag"})," under heavy workloads."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Query limitations for multi-dimensional joins"}),", such as combining cost with tags or team ownership."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Slow query performance"})," on high-cardinality datasets."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Inability to run real-time queries on incoming data"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["InfluxDB (prior to v3.0) does ",(0,t.jsx)(n.strong,{children:"not support querying newly ingested data"})," until it is flushed to disk \u2014 creating a delay between ingestion and visibility."]}),"\n",(0,t.jsxs)(n.li,{children:["This was a major blocker for ",(0,t.jsx)(n.strong,{children:"live dashboards"}),", anomaly alerts, and immediate cost reaction."]}),"\n",(0,t.jsxs)(n.li,{children:["While ",(0,t.jsx)(n.strong,{children:"InfluxDB 3.0"})," addresses this with real-time query capabilities, its ",(0,t.jsx)(n.strong,{children:"open-source implementation is still unavailable"}),", and only a ",(0,t.jsx)(n.strong,{children:"cloud-hosted public beta"})," exists as of now."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Due to these constraints, InfluxDB no longer aligned with the ",(0,t.jsx)(n.strong,{children:"scale, flexibility, and real-time insight"})," needs of Unit Econ Pro."]}),"\n",(0,t.jsx)(n.h2,{id:"our-approach-re-architecting-with-clickhouse",children:"Our Approach: Re-architecting with ClickHouse"}),"\n",(0,t.jsxs)(n.p,{children:["To overcome the limitations of InfluxDB, we re-engineered Unit Econ Pro\u2019s core metrics engine using ",(0,t.jsx)(n.strong,{children:"ClickHouse"})," \u2014 a columnar OLAP database optimized for time-series and analytical workloads."]}),"\n",(0,t.jsx)(n.h2,{id:"step-1-data-modeling",children:"Step 1: Data Modeling"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Transformed cloud billing exports (AWS CUR, GCP billing, Azure cost exports) into ",(0,t.jsx)(n.strong,{children:"normalized, wide-format records"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"Modeled metrics using MergeTree with partitioning by date and ordering by (account, service, timestamp) for efficient scan and aggregation."}),"\n",(0,t.jsxs)(n.li,{children:["Captured metadata dimensions like:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Service"}),"\n",(0,t.jsx)(n.li,{children:"SKU / Resource ID"}),"\n",(0,t.jsx)(n.li,{children:"Project / Environment / Owner tags"}),"\n",(0,t.jsx)(n.li,{children:"Usage type, Region, Provider"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"step-2-cost-ingestion--etl",children:"Step 2: Cost Ingestion & ETL"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Built a ",(0,t.jsx)(n.strong,{children:"streaming ETL pipeline"})," in Python to:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Fetch cloud cost exports periodically"}),"\n",(0,t.jsx)(n.li,{children:"Normalize and transform records"}),"\n",(0,t.jsx)(n.li,{children:"Insert into ClickHouse using batch inserts for performance"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Achieved ingestion of ",(0,t.jsx)(n.strong,{children:"10M+ cost records per day"}),", with ",(0,t.jsx)(n.code,{children:"<10s"})," latency"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"step-3-real-time-dashboards--query-engine",children:"Step 3: Real-time Dashboards & Query Engine"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Created ",(0,t.jsx)(n.strong,{children:"real-time cost dashboards"})," for:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Daily cost breakdown by service/team"}),"\n",(0,t.jsx)(n.li,{children:"Anomaly detection in sudden spikes"}),"\n",(0,t.jsx)(n.li,{children:"Idle resource tracking"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Enabled advanced slicing & dicing: \u201cShow EC2 cost by environment for last 30 days filtered by idle hours > X\u201d"}),"\n",(0,t.jsxs)(n.li,{children:["Integrated with ",(0,t.jsx)(n.strong,{children:"Grafana"})," for flexible visualizations and alerting"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"step-4-cost-recommendations-engine",children:"Step 4: Cost Recommendations Engine"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Used historical cost usage patterns stored in ClickHouse to:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Suggest ",(0,t.jsx)(n.strong,{children:"commitment plan savings"})," (RI / Savings Plans)"]}),"\n",(0,t.jsxs)(n.li,{children:["Detect ",(0,t.jsx)(n.strong,{children:"underutilized resources"})]}),"\n",(0,t.jsxs)(n.li,{children:["Identify ",(0,t.jsx)(n.strong,{children:"rightsizing opportunities"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"impact--outcomes",children:"Impact & Outcomes"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Metric"})}),(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Before (InfluxDB)"})}),(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"After (ClickHouse)"})})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Daily ingestion volume"}),(0,t.jsx)(n.td,{children:"~2M records"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"10M+ records"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Dashboard response time"}),(0,t.jsx)(n.td,{children:"~8-15s"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"<1s"})})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Storage cost per 100M rows"}),(0,t.jsx)(n.td,{children:"High"}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"~70%"})," (compression)"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Join support across dimensions"}),(0,t.jsx)(n.td,{children:"Limited"}),(0,t.jsx)(n.td,{children:"Rich & flexible"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Anomaly detection & cost recommendations"}),(0,t.jsx)(n.td,{children:"Not feasible"}),(0,t.jsx)(n.td,{children:"Fully supported"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"why-clickhouse",children:"Why ClickHouse?"}),"\n",(0,t.jsx)(n.p,{children:"ClickHouse gave us:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\ud83d\ude80 ",(0,t.jsx)(n.strong,{children:"High throughput ingestion"})," and ",(0,t.jsx)(n.strong,{children:"real-time query performance"})]}),"\n",(0,t.jsxs)(n.li,{children:["\ud83e\udde0 ",(0,t.jsx)(n.strong,{children:"Analytical flexibility"})," with joins, group-bys, and window functions"]}),"\n",(0,t.jsxs)(n.li,{children:["\ud83d\udcbe ",(0,t.jsx)(n.strong,{children:"Advanced compression"}),", reducing storage footprint significantly"]}),"\n",(0,t.jsxs)(n.li,{children:["\ud83d\udd04 ",(0,t.jsx)(n.strong,{children:"Continuous aggregations"})," using materialized views"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"sample-use-cases-unlocked",children:"Sample Use Cases Unlocked"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u201cWhich team is spending the most on underutilized EC2 instances?\u201d"}),"\n",(0,t.jsx)(n.li,{children:"\u201cWhat are the top 5 services with the steepest week-over-week cost rise?\u201d"}),"\n",(0,t.jsx)(n.li,{children:"\u201cShow me Kubernetes workloads with constant CPU throttling but no traffic\u201d"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,t.jsxs)(n.p,{children:["By replacing InfluxDB with ClickHouse, ",(0,t.jsx)(n.strong,{children:"Unit Econ Pro"})," evolved into a ",(0,t.jsx)(n.strong,{children:"real-time FinOps powerhouse"})," \u2014 capable of storing billions of time-series metrics, running advanced queries instantly, and driving actionable cost insights for engineering and finance teams."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var s=i(296540);const t={},r=s.createContext(t);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);