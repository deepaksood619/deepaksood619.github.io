"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[41449],{11710:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>h,default:()=>l,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"data-structures/hashtable/hash-functions","title":"Hash Functions","description":"Bad Hash Functions","source":"@site/docs/data-structures/hashtable/hash-functions.md","sourceDirName":"data-structures/hashtable","slug":"/data-structures/hashtable/hash-functions","permalink":"/data-structures/hashtable/hash-functions","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/data-structures/hashtable/hash-functions.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1701846168000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Dictionaries","permalink":"/data-structures/hashtable/dictionaries"},"next":{"title":"Hash Tables","permalink":"/data-structures/hashtable/hash-tables"}}');var s=n(474848),a=n(28453);const r={},h="Hash Functions",o={},d=[{value:"Bad Hash Functions",id:"bad-hash-functions",level:2},{value:"MurmurHash / MurmurHash3",id:"murmurhash--murmurhash3",level:2},{value:"SipHash (for strings in python dictionary implementation)",id:"siphash-for-strings-in-python-dictionary-implementation",level:2}];function c(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"hash-functions",children:"Hash Functions"})}),"\n",(0,s.jsx)(i.h2,{id:"bad-hash-functions",children:"Bad Hash Functions"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"First 3 digits of a phone number"}),"\n",(0,s.jsx)(i.li,{children:"Memory address of an object (will only be power of 2's so odd locations will never get filled)"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"murmurhash--murmurhash3",children:"MurmurHash / MurmurHash3"}),"\n",(0,s.jsxs)(i.p,{children:["MurmurHashis a non-",(0,s.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Cryptographic_hash_function",children:"cryptographic"}),(0,s.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Hash_function",children:"hash function"})," suitable for general hash-based lookup.It was created by Austin Appleby in 2008and is currently hosted on GitHub along with its test suite named 'SMHasher'. It also exists in a number of variants,all of which have been released into the public domain. The name comes from two basic operations, multiply (MU) and rotate (R), used in its inner loop."]}),"\n",(0,s.jsxs)(i.p,{children:["Unlike ",(0,s.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Cryptographic_hash_function",children:"cryptographic hash functions"}),", it is not specifically designed to be difficult to reverse by an adversary, making it unsuitable for cryptographic purposes."]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/MurmurHash",children:"https://en.wikipedia.org/wiki/MurmurHash"})}),"\n",(0,s.jsx)(i.h2,{id:"siphash-for-strings-in-python-dictionary-implementation",children:"SipHash (for strings in python dictionary implementation)"}),"\n",(0,s.jsx)(i.p,{children:"SipHash is a relatively fast hash function. On a 64-bit machine, SipHash returns a 64-bit hash. The hash is then converted into an index to be used in an array."}),"\n",(0,s.jsxs)(i.p,{children:["SipHash is an ",(0,s.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Block_cipher#ARX_(add%E2%80%93rotate%E2%80%93xor)",children:"add--rotate--xor"}),"(ARX) based family of ",(0,s.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Pseudorandom_function",children:"pseudorandom functions"})," created by ",(0,s.jsx)(i.a,{href:"https://en.wikipedia.org/w/index.php?title=Jean-Philippe_Aumasson&action=edit&redlink=1",children:"Jean-Philippe Aumasson"})," and ",(0,s.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Daniel_J._Bernstein",children:"Daniel J. Bernstein"}),' in 2012, in response to a spate of "hash flooding"',(0,s.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Denial-of-service_attack",children:"denial-of-service attacks"})," in late 2011."]}),"\n",(0,s.jsxs)(i.p,{children:["Although designed for use as a ",(0,s.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Hash_function",children:"hash function"})," in the computer science sense, SipHash is fundamentally different from ",(0,s.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Cryptographic_hash_functions",children:"cryptographic hash functions"})," like ",(0,s.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Secure_Hash_Algorithm",children:"SHA"})," in that it is only suitable as a ",(0,s.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Message_authentication_code",children:"message authentication code"}),": akeyedhash function like ",(0,s.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/HMAC",children:"HMAC"}),". That is, SHA is designed so that it is difficult for an attacker to find two messages X and Y such that ",(0,s.jsx)(i.code,{children:"SHA(X) = SHA(Y)"}),", even though anyone may compute SHA(X). SipHash instead guarantees that, having seenXiand ",(0,s.jsx)(i.code,{children:"SipHash(Xi,k)"}),", an attacker who does not know the keykcannot find (any information about) kor ",(0,s.jsx)(i.code,{children:"SipHash(Y,k)"})," for any message ",(0,s.jsx)(i.code,{children:"Y\u2209 {Xi}"})," which they have not seen before."]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/SipHash",children:"https://en.wikipedia.org/wiki/SipHash"})})]})}function l(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>h});var t=n(296540);const s={},a=t.createContext(s);function r(e){const i=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function h(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(a.Provider,{value:i},e.children)}}}]);