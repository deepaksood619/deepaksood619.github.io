"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[61782],{175111:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>d,toc:()=>c});var t=n(785893),s=n(511151);const r={},i="Lambda Expressions",d={id:"languages/java/lambda-expressions",title:"Lambda Expressions",description:"A lambda expression is an unnamed function with parameters and a body.",source:"@site/docs/languages/java/lambda-expressions.md",sourceDirName:"languages/java",slug:"/languages/java/lambda-expressions",permalink:"/languages/java/lambda-expressions",draft:!1,unlisted:!1,editUrl:"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/languages/java/lambda-expressions.md",tags:[],version:"current",lastUpdatedAt:1701846168,formattedLastUpdatedAt:"Dec 6, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Knowledge",permalink:"/languages/java/knowledge"},next:{title:"Libraries",permalink:"/languages/java/libraries"}},o={},c=[];function l(e){const a={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h1,{id:"lambda-expressions",children:"Lambda Expressions"}),"\n",(0,t.jsx)(a.p,{children:"A lambda expression is an unnamed function with parameters and a body."}),"\n",(0,t.jsx)(a.p,{children:"The lambda expression body can be a block statement or an expression."}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.code,{children:"->"})," separates the parameters and the body."]}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.code,{children:"(int x) -> x + 1"})," takes an int parameter and returns the parameter value incremented by 1."]}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.code,{children:"(int x, int y) -> x + y"})," takes two int parameters and returns the sum."]}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.code,{children:"(String msg)->{System.out.println(msg);}"})," takes a String parameter and prints it on the standard output."]}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.code,{children:"msg->System.out.println(msg)"})," takes a parameter and prints it on the standard output. It is identical to the code above."]}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.code,{children:'() -> "hi"'})," takes no parameters and returns a string."]}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.code,{children:"(String str) -> str.length()"})," takes a String parameter and returns its length."]}),"\n",(0,t.jsx)(a.p,{children:"The following lambda takes two int parameters and returns the maximum of the two."}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-java",children:"(int x, int y) -> {\nint max = x > y ? x : y;\nreturn max;\n}\n"})}),"\n",(0,t.jsx)(a.p,{children:(0,t.jsx)(a.a,{href:"http://www.java2s.com/Tutorials/Java/Java_Lambda/index.htm",children:"http://www.java2s.com/Tutorials/Java/Java_Lambda/index.htm"})})]})}function p(e={}){const{wrapper:a}={...(0,s.a)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},511151:(e,a,n)=>{n.d(a,{Z:()=>d,a:()=>i});var t=n(667294);const s={},r=t.createContext(s);function i(e){const a=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function d(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:a},e.children)}}}]);