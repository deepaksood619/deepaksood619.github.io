"use strict";(self.webpackChunkdeep_notes=self.webpackChunkdeep_notes||[]).push([[38779],{342973:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"networking/protocols/rsocket","title":"Rsocket","description":"RSocket is a binary protocol for use on byte stream transports such as TCP, WebSockets, and Aeron.","source":"@site/docs/networking/protocols/rsocket.md","sourceDirName":"networking/protocols","slug":"/networking/protocols/rsocket","permalink":"/networking/protocols/rsocket","draft":false,"unlisted":false,"editUrl":"https://github.com/deepaksood619/deepaksood619.github.io/tree/master/docs/networking/protocols/rsocket.md","tags":[],"version":"current","lastUpdatedBy":"Deepak","lastUpdatedAt":1701793554000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"REST Representational State Transfer / RESTFul","permalink":"/networking/protocols/rest-representational-state-transfer-restful"},"next":{"title":"TCP (Connection Oriented Protocol)","permalink":"/networking/protocols/tcp-connection-oriented-protocol/"}}');var r=o(474848),s=o(28453);const i={},c="Rsocket",a={},l=[];function p(e){const t={a:"a",h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"rsocket",children:"Rsocket"})}),"\n",(0,r.jsx)(t.p,{children:"RSocket is a binary protocol for use on byte stream transports such as TCP, WebSockets, and Aeron.\nIt enables the following symmetric interaction models via async message passing over a single connection:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"request/response (stream of 1)"}),"\n",(0,r.jsx)(t.li,{children:"request/stream (finite stream of many)"}),"\n",(0,r.jsx)(t.li,{children:"fire-and-forget (no response)"}),"\n",(0,r.jsxs)(t.li,{children:["channel (bi-directional streams)\nIt supports session resumption, to allow resuming long-lived streams across different transport connections. This is particularly useful for mobile\u2b04server communication when network connections drop, switch, and reconnect frequently.\nRSocketis an application protocol initially developed by ",(0,r.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Netflix",children:"Netflix"}),", that supports ",(0,r.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Reactive_Streams",children:"Reactive Streams"}),". The motivation behind its development was to replace hypertext transfer protocol ",(0,r.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/HTTP",children:"(HTTP"}),"), which is inefficient for many tasks such as ",(0,r.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Microservice",children:"microservices"})," communication, with a protocol that has less overhead.\nAlternative - grpc"]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"http://rsocket.io",children:"http://rsocket.io"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Rsocket",children:"https://en.wikipedia.org/wiki/Rsocket"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://github.com/rsocket/rsocket",children:"https://github.com/rsocket/rsocket"})})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},28453:(e,t,o)=>{o.d(t,{R:()=>i,x:()=>c});var n=o(296540);const r={},s=n.createContext(r);function i(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);